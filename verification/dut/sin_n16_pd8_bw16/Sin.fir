circuit Sin :
  module full_subtractor :
    input clock : Clock
    input reset : Reset
    output io : { flip in_a : UInt<5>, flip in_b : UInt<5>, flip in_c : UInt<1>, out_s : UInt<5>, out_c : UInt<1>}

    wire result : UInt<6> @[BinaryDesigns2.scala 139:22]
    node _result_T = sub(io.in_a, io.in_b) @[BinaryDesigns2.scala 140:23]
    node _result_T_1 = asUInt(_result_T) @[BinaryDesigns2.scala 140:23]
    node _result_T_2 = sub(_result_T_1, io.in_c) @[BinaryDesigns2.scala 140:34]
    node _result_T_3 = asUInt(_result_T_2) @[BinaryDesigns2.scala 140:34]
    result <= _result_T_3 @[BinaryDesigns2.scala 140:12]
    node _io_out_s_T = bits(result, 4, 0) @[BinaryDesigns2.scala 141:23]
    io.out_s <= _io_out_s_T @[BinaryDesigns2.scala 141:14]
    node _io_out_c_T = bits(result, 5, 5) @[BinaryDesigns2.scala 142:23]
    io.out_c <= _io_out_c_T @[BinaryDesigns2.scala 142:14]

  module divider_BW22_v3 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_ready : UInt<1>, flip in_valid : UInt<1>, flip in_reset : UInt<1>, flip in_a : UInt<22>, flip in_b : UInt<22>, out_s : UInt<22>, out_r : UInt<22>, out_valid : UInt<1>}

    wire a_aux_reg_w : UInt<22>[11] @[BinaryDesigns2.scala 169:27]
    wire _WIRE : UInt<1>[11] @[BinaryDesigns2.scala 170:38]
    _WIRE[0] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[1] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[2] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[3] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[4] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[5] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[6] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[7] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[8] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[9] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    _WIRE[10] <= UInt<1>("h0") @[BinaryDesigns2.scala 170:38]
    a_aux_reg_w[0] <= _WIRE[0] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[1] <= _WIRE[1] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[2] <= _WIRE[2] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[3] <= _WIRE[3] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[4] <= _WIRE[4] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[5] <= _WIRE[5] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[6] <= _WIRE[6] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[7] <= _WIRE[7] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[8] <= _WIRE[8] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[9] <= _WIRE[9] @[BinaryDesigns2.scala 170:17]
    a_aux_reg_w[10] <= _WIRE[10] @[BinaryDesigns2.scala 170:17]
    wire _a_aux_reg_r_WIRE : UInt<22>[11] @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[0] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[1] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[2] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[3] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[4] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[5] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[6] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[7] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[8] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[9] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    _a_aux_reg_r_WIRE[10] <= UInt<22>("h0") @[BinaryDesigns2.scala 171:49]
    reg a_aux_reg_r : UInt<22>[11], clock with :
      reset => (reset, _a_aux_reg_r_WIRE) @[BinaryDesigns2.scala 171:30]
    wire b_aux_reg_w : UInt<22>[11] @[BinaryDesigns2.scala 174:27]
    wire _WIRE_1 : UInt<1>[11] @[BinaryDesigns2.scala 175:38]
    _WIRE_1[0] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[1] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[2] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[3] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[4] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[5] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[6] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[7] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[8] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[9] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    _WIRE_1[10] <= UInt<1>("h0") @[BinaryDesigns2.scala 175:38]
    b_aux_reg_w[0] <= _WIRE_1[0] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[1] <= _WIRE_1[1] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[2] <= _WIRE_1[2] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[3] <= _WIRE_1[3] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[4] <= _WIRE_1[4] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[5] <= _WIRE_1[5] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[6] <= _WIRE_1[6] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[7] <= _WIRE_1[7] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[8] <= _WIRE_1[8] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[9] <= _WIRE_1[9] @[BinaryDesigns2.scala 175:17]
    b_aux_reg_w[10] <= _WIRE_1[10] @[BinaryDesigns2.scala 175:17]
    wire _b_aux_reg_r_WIRE : UInt<22>[11] @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[0] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[1] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[2] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[3] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[4] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[5] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[6] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[7] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[8] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[9] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    _b_aux_reg_r_WIRE[10] <= UInt<22>("h0") @[BinaryDesigns2.scala 176:49]
    reg b_aux_reg_r : UInt<22>[11], clock with :
      reset => (reset, _b_aux_reg_r_WIRE) @[BinaryDesigns2.scala 176:30]
    wire result_reg_w : UInt<22>[11] @[BinaryDesigns2.scala 179:28]
    wire _WIRE_2 : UInt<22>[11] @[BinaryDesigns2.scala 180:39]
    _WIRE_2[0] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[1] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[2] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[3] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[4] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[5] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[6] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[7] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[8] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[9] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    _WIRE_2[10] <= UInt<22>("h0") @[BinaryDesigns2.scala 180:39]
    result_reg_w[0] <= _WIRE_2[0] @[BinaryDesigns2.scala 180:18]
    result_reg_w[1] <= _WIRE_2[1] @[BinaryDesigns2.scala 180:18]
    result_reg_w[2] <= _WIRE_2[2] @[BinaryDesigns2.scala 180:18]
    result_reg_w[3] <= _WIRE_2[3] @[BinaryDesigns2.scala 180:18]
    result_reg_w[4] <= _WIRE_2[4] @[BinaryDesigns2.scala 180:18]
    result_reg_w[5] <= _WIRE_2[5] @[BinaryDesigns2.scala 180:18]
    result_reg_w[6] <= _WIRE_2[6] @[BinaryDesigns2.scala 180:18]
    result_reg_w[7] <= _WIRE_2[7] @[BinaryDesigns2.scala 180:18]
    result_reg_w[8] <= _WIRE_2[8] @[BinaryDesigns2.scala 180:18]
    result_reg_w[9] <= _WIRE_2[9] @[BinaryDesigns2.scala 180:18]
    result_reg_w[10] <= _WIRE_2[10] @[BinaryDesigns2.scala 180:18]
    wire _result_reg_r_WIRE : UInt<22>[11] @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[0] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[1] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[2] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[3] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[4] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[5] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[6] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[7] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[8] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[9] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    _result_reg_r_WIRE[10] <= UInt<22>("h0") @[BinaryDesigns2.scala 181:50]
    reg result_reg_r : UInt<22>[11], clock with :
      reset => (reset, _result_reg_r_WIRE) @[BinaryDesigns2.scala 181:31]
    wire sr_out_valid_w : UInt<1>[11] @[BinaryDesigns2.scala 184:30]
    wire _WIRE_3 : UInt<1>[11] @[BinaryDesigns2.scala 185:41]
    _WIRE_3[0] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[1] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[2] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[3] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[4] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[5] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[6] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[7] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[8] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[9] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    _WIRE_3[10] <= UInt<1>("h0") @[BinaryDesigns2.scala 185:41]
    sr_out_valid_w[0] <= _WIRE_3[0] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[1] <= _WIRE_3[1] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[2] <= _WIRE_3[2] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[3] <= _WIRE_3[3] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[4] <= _WIRE_3[4] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[5] <= _WIRE_3[5] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[6] <= _WIRE_3[6] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[7] <= _WIRE_3[7] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[8] <= _WIRE_3[8] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[9] <= _WIRE_3[9] @[BinaryDesigns2.scala 185:20]
    sr_out_valid_w[10] <= _WIRE_3[10] @[BinaryDesigns2.scala 185:20]
    wire _sr_out_valid_r_WIRE : UInt<1>[11] @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[0] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[1] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[2] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[3] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[4] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[5] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[6] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[7] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[8] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[9] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    _sr_out_valid_r_WIRE[10] <= UInt<1>("h0") @[BinaryDesigns2.scala 186:52]
    reg sr_out_valid_r : UInt<1>[11], clock with :
      reset => (reset, _sr_out_valid_r_WIRE) @[BinaryDesigns2.scala 186:33]
    wire init_res : UInt<1>[22] @[BinaryDesigns2.scala 189:24]
    wire _WIRE_4 : UInt<1>[22] @[BinaryDesigns2.scala 190:33]
    _WIRE_4[0] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[1] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[2] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[3] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[4] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[5] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[6] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[7] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[8] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[9] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[10] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[11] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[12] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[13] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[14] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[15] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[16] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[17] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[18] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[19] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[20] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    _WIRE_4[21] <= UInt<1>("h0") @[BinaryDesigns2.scala 190:33]
    init_res[0] <= _WIRE_4[0] @[BinaryDesigns2.scala 190:14]
    init_res[1] <= _WIRE_4[1] @[BinaryDesigns2.scala 190:14]
    init_res[2] <= _WIRE_4[2] @[BinaryDesigns2.scala 190:14]
    init_res[3] <= _WIRE_4[3] @[BinaryDesigns2.scala 190:14]
    init_res[4] <= _WIRE_4[4] @[BinaryDesigns2.scala 190:14]
    init_res[5] <= _WIRE_4[5] @[BinaryDesigns2.scala 190:14]
    init_res[6] <= _WIRE_4[6] @[BinaryDesigns2.scala 190:14]
    init_res[7] <= _WIRE_4[7] @[BinaryDesigns2.scala 190:14]
    init_res[8] <= _WIRE_4[8] @[BinaryDesigns2.scala 190:14]
    init_res[9] <= _WIRE_4[9] @[BinaryDesigns2.scala 190:14]
    init_res[10] <= _WIRE_4[10] @[BinaryDesigns2.scala 190:14]
    init_res[11] <= _WIRE_4[11] @[BinaryDesigns2.scala 190:14]
    init_res[12] <= _WIRE_4[12] @[BinaryDesigns2.scala 190:14]
    init_res[13] <= _WIRE_4[13] @[BinaryDesigns2.scala 190:14]
    init_res[14] <= _WIRE_4[14] @[BinaryDesigns2.scala 190:14]
    init_res[15] <= _WIRE_4[15] @[BinaryDesigns2.scala 190:14]
    init_res[16] <= _WIRE_4[16] @[BinaryDesigns2.scala 190:14]
    init_res[17] <= _WIRE_4[17] @[BinaryDesigns2.scala 190:14]
    init_res[18] <= _WIRE_4[18] @[BinaryDesigns2.scala 190:14]
    init_res[19] <= _WIRE_4[19] @[BinaryDesigns2.scala 190:14]
    init_res[20] <= _WIRE_4[20] @[BinaryDesigns2.scala 190:14]
    init_res[21] <= _WIRE_4[21] @[BinaryDesigns2.scala 190:14]
    wire wire_res : UInt<1>[22][22] @[BinaryDesigns2.scala 191:24]
    node _T = bits(result_reg_w[0], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_1 = bits(result_reg_w[0], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_2 = bits(result_reg_w[0], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_3 = bits(result_reg_w[0], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_4 = bits(result_reg_w[0], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_5 = bits(result_reg_w[0], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_6 = bits(result_reg_w[0], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_7 = bits(result_reg_w[0], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_8 = bits(result_reg_w[0], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_9 = bits(result_reg_w[0], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_10 = bits(result_reg_w[0], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_11 = bits(result_reg_w[0], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_12 = bits(result_reg_w[0], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_13 = bits(result_reg_w[0], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_14 = bits(result_reg_w[0], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_15 = bits(result_reg_w[0], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_16 = bits(result_reg_w[0], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_17 = bits(result_reg_w[0], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_18 = bits(result_reg_w[0], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_19 = bits(result_reg_w[0], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_20 = bits(result_reg_w[0], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_21 = bits(result_reg_w[0], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_5 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_5[0] <= _T @[BinaryDesigns2.scala 192:56]
    _WIRE_5[1] <= _T_1 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[2] <= _T_2 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[3] <= _T_3 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[4] <= _T_4 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[5] <= _T_5 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[6] <= _T_6 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[7] <= _T_7 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[8] <= _T_8 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[9] <= _T_9 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[10] <= _T_10 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[11] <= _T_11 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[12] <= _T_12 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[13] <= _T_13 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[14] <= _T_14 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[15] <= _T_15 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[16] <= _T_16 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[17] <= _T_17 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[18] <= _T_18 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[19] <= _T_19 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[20] <= _T_20 @[BinaryDesigns2.scala 192:56]
    _WIRE_5[21] <= _T_21 @[BinaryDesigns2.scala 192:56]
    wire_res[0][0] <= _WIRE_5[0] @[BinaryDesigns2.scala 192:46]
    wire_res[0][1] <= _WIRE_5[1] @[BinaryDesigns2.scala 192:46]
    wire_res[0][2] <= _WIRE_5[2] @[BinaryDesigns2.scala 192:46]
    wire_res[0][3] <= _WIRE_5[3] @[BinaryDesigns2.scala 192:46]
    wire_res[0][4] <= _WIRE_5[4] @[BinaryDesigns2.scala 192:46]
    wire_res[0][5] <= _WIRE_5[5] @[BinaryDesigns2.scala 192:46]
    wire_res[0][6] <= _WIRE_5[6] @[BinaryDesigns2.scala 192:46]
    wire_res[0][7] <= _WIRE_5[7] @[BinaryDesigns2.scala 192:46]
    wire_res[0][8] <= _WIRE_5[8] @[BinaryDesigns2.scala 192:46]
    wire_res[0][9] <= _WIRE_5[9] @[BinaryDesigns2.scala 192:46]
    wire_res[0][10] <= _WIRE_5[10] @[BinaryDesigns2.scala 192:46]
    wire_res[0][11] <= _WIRE_5[11] @[BinaryDesigns2.scala 192:46]
    wire_res[0][12] <= _WIRE_5[12] @[BinaryDesigns2.scala 192:46]
    wire_res[0][13] <= _WIRE_5[13] @[BinaryDesigns2.scala 192:46]
    wire_res[0][14] <= _WIRE_5[14] @[BinaryDesigns2.scala 192:46]
    wire_res[0][15] <= _WIRE_5[15] @[BinaryDesigns2.scala 192:46]
    wire_res[0][16] <= _WIRE_5[16] @[BinaryDesigns2.scala 192:46]
    wire_res[0][17] <= _WIRE_5[17] @[BinaryDesigns2.scala 192:46]
    wire_res[0][18] <= _WIRE_5[18] @[BinaryDesigns2.scala 192:46]
    wire_res[0][19] <= _WIRE_5[19] @[BinaryDesigns2.scala 192:46]
    wire_res[0][20] <= _WIRE_5[20] @[BinaryDesigns2.scala 192:46]
    wire_res[0][21] <= _WIRE_5[21] @[BinaryDesigns2.scala 192:46]
    node _T_22 = bits(result_reg_r[0], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_23 = bits(result_reg_r[0], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_24 = bits(result_reg_r[0], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_25 = bits(result_reg_r[0], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_26 = bits(result_reg_r[0], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_27 = bits(result_reg_r[0], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_28 = bits(result_reg_r[0], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_29 = bits(result_reg_r[0], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_30 = bits(result_reg_r[0], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_31 = bits(result_reg_r[0], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_32 = bits(result_reg_r[0], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_33 = bits(result_reg_r[0], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_34 = bits(result_reg_r[0], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_35 = bits(result_reg_r[0], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_36 = bits(result_reg_r[0], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_37 = bits(result_reg_r[0], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_38 = bits(result_reg_r[0], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_39 = bits(result_reg_r[0], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_40 = bits(result_reg_r[0], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_41 = bits(result_reg_r[0], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_42 = bits(result_reg_r[0], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_43 = bits(result_reg_r[0], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_6 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_6[0] <= _T_22 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[1] <= _T_23 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[2] <= _T_24 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[3] <= _T_25 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[4] <= _T_26 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[5] <= _T_27 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[6] <= _T_28 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[7] <= _T_29 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[8] <= _T_30 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[9] <= _T_31 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[10] <= _T_32 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[11] <= _T_33 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[12] <= _T_34 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[13] <= _T_35 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[14] <= _T_36 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[15] <= _T_37 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[16] <= _T_38 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[17] <= _T_39 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[18] <= _T_40 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[19] <= _T_41 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[20] <= _T_42 @[BinaryDesigns2.scala 192:56]
    _WIRE_6[21] <= _T_43 @[BinaryDesigns2.scala 192:56]
    wire_res[1][0] <= _WIRE_6[0] @[BinaryDesigns2.scala 192:46]
    wire_res[1][1] <= _WIRE_6[1] @[BinaryDesigns2.scala 192:46]
    wire_res[1][2] <= _WIRE_6[2] @[BinaryDesigns2.scala 192:46]
    wire_res[1][3] <= _WIRE_6[3] @[BinaryDesigns2.scala 192:46]
    wire_res[1][4] <= _WIRE_6[4] @[BinaryDesigns2.scala 192:46]
    wire_res[1][5] <= _WIRE_6[5] @[BinaryDesigns2.scala 192:46]
    wire_res[1][6] <= _WIRE_6[6] @[BinaryDesigns2.scala 192:46]
    wire_res[1][7] <= _WIRE_6[7] @[BinaryDesigns2.scala 192:46]
    wire_res[1][8] <= _WIRE_6[8] @[BinaryDesigns2.scala 192:46]
    wire_res[1][9] <= _WIRE_6[9] @[BinaryDesigns2.scala 192:46]
    wire_res[1][10] <= _WIRE_6[10] @[BinaryDesigns2.scala 192:46]
    wire_res[1][11] <= _WIRE_6[11] @[BinaryDesigns2.scala 192:46]
    wire_res[1][12] <= _WIRE_6[12] @[BinaryDesigns2.scala 192:46]
    wire_res[1][13] <= _WIRE_6[13] @[BinaryDesigns2.scala 192:46]
    wire_res[1][14] <= _WIRE_6[14] @[BinaryDesigns2.scala 192:46]
    wire_res[1][15] <= _WIRE_6[15] @[BinaryDesigns2.scala 192:46]
    wire_res[1][16] <= _WIRE_6[16] @[BinaryDesigns2.scala 192:46]
    wire_res[1][17] <= _WIRE_6[17] @[BinaryDesigns2.scala 192:46]
    wire_res[1][18] <= _WIRE_6[18] @[BinaryDesigns2.scala 192:46]
    wire_res[1][19] <= _WIRE_6[19] @[BinaryDesigns2.scala 192:46]
    wire_res[1][20] <= _WIRE_6[20] @[BinaryDesigns2.scala 192:46]
    wire_res[1][21] <= _WIRE_6[21] @[BinaryDesigns2.scala 192:46]
    node _T_44 = bits(result_reg_w[1], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_45 = bits(result_reg_w[1], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_46 = bits(result_reg_w[1], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_47 = bits(result_reg_w[1], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_48 = bits(result_reg_w[1], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_49 = bits(result_reg_w[1], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_50 = bits(result_reg_w[1], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_51 = bits(result_reg_w[1], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_52 = bits(result_reg_w[1], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_53 = bits(result_reg_w[1], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_54 = bits(result_reg_w[1], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_55 = bits(result_reg_w[1], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_56 = bits(result_reg_w[1], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_57 = bits(result_reg_w[1], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_58 = bits(result_reg_w[1], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_59 = bits(result_reg_w[1], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_60 = bits(result_reg_w[1], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_61 = bits(result_reg_w[1], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_62 = bits(result_reg_w[1], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_63 = bits(result_reg_w[1], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_64 = bits(result_reg_w[1], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_65 = bits(result_reg_w[1], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_7 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_7[0] <= _T_44 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[1] <= _T_45 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[2] <= _T_46 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[3] <= _T_47 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[4] <= _T_48 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[5] <= _T_49 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[6] <= _T_50 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[7] <= _T_51 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[8] <= _T_52 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[9] <= _T_53 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[10] <= _T_54 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[11] <= _T_55 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[12] <= _T_56 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[13] <= _T_57 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[14] <= _T_58 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[15] <= _T_59 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[16] <= _T_60 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[17] <= _T_61 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[18] <= _T_62 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[19] <= _T_63 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[20] <= _T_64 @[BinaryDesigns2.scala 192:56]
    _WIRE_7[21] <= _T_65 @[BinaryDesigns2.scala 192:56]
    wire_res[2][0] <= _WIRE_7[0] @[BinaryDesigns2.scala 192:46]
    wire_res[2][1] <= _WIRE_7[1] @[BinaryDesigns2.scala 192:46]
    wire_res[2][2] <= _WIRE_7[2] @[BinaryDesigns2.scala 192:46]
    wire_res[2][3] <= _WIRE_7[3] @[BinaryDesigns2.scala 192:46]
    wire_res[2][4] <= _WIRE_7[4] @[BinaryDesigns2.scala 192:46]
    wire_res[2][5] <= _WIRE_7[5] @[BinaryDesigns2.scala 192:46]
    wire_res[2][6] <= _WIRE_7[6] @[BinaryDesigns2.scala 192:46]
    wire_res[2][7] <= _WIRE_7[7] @[BinaryDesigns2.scala 192:46]
    wire_res[2][8] <= _WIRE_7[8] @[BinaryDesigns2.scala 192:46]
    wire_res[2][9] <= _WIRE_7[9] @[BinaryDesigns2.scala 192:46]
    wire_res[2][10] <= _WIRE_7[10] @[BinaryDesigns2.scala 192:46]
    wire_res[2][11] <= _WIRE_7[11] @[BinaryDesigns2.scala 192:46]
    wire_res[2][12] <= _WIRE_7[12] @[BinaryDesigns2.scala 192:46]
    wire_res[2][13] <= _WIRE_7[13] @[BinaryDesigns2.scala 192:46]
    wire_res[2][14] <= _WIRE_7[14] @[BinaryDesigns2.scala 192:46]
    wire_res[2][15] <= _WIRE_7[15] @[BinaryDesigns2.scala 192:46]
    wire_res[2][16] <= _WIRE_7[16] @[BinaryDesigns2.scala 192:46]
    wire_res[2][17] <= _WIRE_7[17] @[BinaryDesigns2.scala 192:46]
    wire_res[2][18] <= _WIRE_7[18] @[BinaryDesigns2.scala 192:46]
    wire_res[2][19] <= _WIRE_7[19] @[BinaryDesigns2.scala 192:46]
    wire_res[2][20] <= _WIRE_7[20] @[BinaryDesigns2.scala 192:46]
    wire_res[2][21] <= _WIRE_7[21] @[BinaryDesigns2.scala 192:46]
    node _T_66 = bits(result_reg_r[1], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_67 = bits(result_reg_r[1], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_68 = bits(result_reg_r[1], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_69 = bits(result_reg_r[1], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_70 = bits(result_reg_r[1], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_71 = bits(result_reg_r[1], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_72 = bits(result_reg_r[1], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_73 = bits(result_reg_r[1], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_74 = bits(result_reg_r[1], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_75 = bits(result_reg_r[1], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_76 = bits(result_reg_r[1], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_77 = bits(result_reg_r[1], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_78 = bits(result_reg_r[1], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_79 = bits(result_reg_r[1], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_80 = bits(result_reg_r[1], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_81 = bits(result_reg_r[1], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_82 = bits(result_reg_r[1], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_83 = bits(result_reg_r[1], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_84 = bits(result_reg_r[1], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_85 = bits(result_reg_r[1], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_86 = bits(result_reg_r[1], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_87 = bits(result_reg_r[1], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_8 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_8[0] <= _T_66 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[1] <= _T_67 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[2] <= _T_68 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[3] <= _T_69 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[4] <= _T_70 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[5] <= _T_71 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[6] <= _T_72 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[7] <= _T_73 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[8] <= _T_74 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[9] <= _T_75 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[10] <= _T_76 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[11] <= _T_77 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[12] <= _T_78 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[13] <= _T_79 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[14] <= _T_80 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[15] <= _T_81 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[16] <= _T_82 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[17] <= _T_83 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[18] <= _T_84 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[19] <= _T_85 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[20] <= _T_86 @[BinaryDesigns2.scala 192:56]
    _WIRE_8[21] <= _T_87 @[BinaryDesigns2.scala 192:56]
    wire_res[3][0] <= _WIRE_8[0] @[BinaryDesigns2.scala 192:46]
    wire_res[3][1] <= _WIRE_8[1] @[BinaryDesigns2.scala 192:46]
    wire_res[3][2] <= _WIRE_8[2] @[BinaryDesigns2.scala 192:46]
    wire_res[3][3] <= _WIRE_8[3] @[BinaryDesigns2.scala 192:46]
    wire_res[3][4] <= _WIRE_8[4] @[BinaryDesigns2.scala 192:46]
    wire_res[3][5] <= _WIRE_8[5] @[BinaryDesigns2.scala 192:46]
    wire_res[3][6] <= _WIRE_8[6] @[BinaryDesigns2.scala 192:46]
    wire_res[3][7] <= _WIRE_8[7] @[BinaryDesigns2.scala 192:46]
    wire_res[3][8] <= _WIRE_8[8] @[BinaryDesigns2.scala 192:46]
    wire_res[3][9] <= _WIRE_8[9] @[BinaryDesigns2.scala 192:46]
    wire_res[3][10] <= _WIRE_8[10] @[BinaryDesigns2.scala 192:46]
    wire_res[3][11] <= _WIRE_8[11] @[BinaryDesigns2.scala 192:46]
    wire_res[3][12] <= _WIRE_8[12] @[BinaryDesigns2.scala 192:46]
    wire_res[3][13] <= _WIRE_8[13] @[BinaryDesigns2.scala 192:46]
    wire_res[3][14] <= _WIRE_8[14] @[BinaryDesigns2.scala 192:46]
    wire_res[3][15] <= _WIRE_8[15] @[BinaryDesigns2.scala 192:46]
    wire_res[3][16] <= _WIRE_8[16] @[BinaryDesigns2.scala 192:46]
    wire_res[3][17] <= _WIRE_8[17] @[BinaryDesigns2.scala 192:46]
    wire_res[3][18] <= _WIRE_8[18] @[BinaryDesigns2.scala 192:46]
    wire_res[3][19] <= _WIRE_8[19] @[BinaryDesigns2.scala 192:46]
    wire_res[3][20] <= _WIRE_8[20] @[BinaryDesigns2.scala 192:46]
    wire_res[3][21] <= _WIRE_8[21] @[BinaryDesigns2.scala 192:46]
    node _T_88 = bits(result_reg_w[2], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_89 = bits(result_reg_w[2], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_90 = bits(result_reg_w[2], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_91 = bits(result_reg_w[2], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_92 = bits(result_reg_w[2], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_93 = bits(result_reg_w[2], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_94 = bits(result_reg_w[2], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_95 = bits(result_reg_w[2], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_96 = bits(result_reg_w[2], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_97 = bits(result_reg_w[2], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_98 = bits(result_reg_w[2], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_99 = bits(result_reg_w[2], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_100 = bits(result_reg_w[2], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_101 = bits(result_reg_w[2], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_102 = bits(result_reg_w[2], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_103 = bits(result_reg_w[2], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_104 = bits(result_reg_w[2], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_105 = bits(result_reg_w[2], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_106 = bits(result_reg_w[2], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_107 = bits(result_reg_w[2], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_108 = bits(result_reg_w[2], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_109 = bits(result_reg_w[2], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_9 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_9[0] <= _T_88 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[1] <= _T_89 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[2] <= _T_90 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[3] <= _T_91 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[4] <= _T_92 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[5] <= _T_93 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[6] <= _T_94 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[7] <= _T_95 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[8] <= _T_96 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[9] <= _T_97 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[10] <= _T_98 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[11] <= _T_99 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[12] <= _T_100 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[13] <= _T_101 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[14] <= _T_102 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[15] <= _T_103 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[16] <= _T_104 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[17] <= _T_105 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[18] <= _T_106 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[19] <= _T_107 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[20] <= _T_108 @[BinaryDesigns2.scala 192:56]
    _WIRE_9[21] <= _T_109 @[BinaryDesigns2.scala 192:56]
    wire_res[4][0] <= _WIRE_9[0] @[BinaryDesigns2.scala 192:46]
    wire_res[4][1] <= _WIRE_9[1] @[BinaryDesigns2.scala 192:46]
    wire_res[4][2] <= _WIRE_9[2] @[BinaryDesigns2.scala 192:46]
    wire_res[4][3] <= _WIRE_9[3] @[BinaryDesigns2.scala 192:46]
    wire_res[4][4] <= _WIRE_9[4] @[BinaryDesigns2.scala 192:46]
    wire_res[4][5] <= _WIRE_9[5] @[BinaryDesigns2.scala 192:46]
    wire_res[4][6] <= _WIRE_9[6] @[BinaryDesigns2.scala 192:46]
    wire_res[4][7] <= _WIRE_9[7] @[BinaryDesigns2.scala 192:46]
    wire_res[4][8] <= _WIRE_9[8] @[BinaryDesigns2.scala 192:46]
    wire_res[4][9] <= _WIRE_9[9] @[BinaryDesigns2.scala 192:46]
    wire_res[4][10] <= _WIRE_9[10] @[BinaryDesigns2.scala 192:46]
    wire_res[4][11] <= _WIRE_9[11] @[BinaryDesigns2.scala 192:46]
    wire_res[4][12] <= _WIRE_9[12] @[BinaryDesigns2.scala 192:46]
    wire_res[4][13] <= _WIRE_9[13] @[BinaryDesigns2.scala 192:46]
    wire_res[4][14] <= _WIRE_9[14] @[BinaryDesigns2.scala 192:46]
    wire_res[4][15] <= _WIRE_9[15] @[BinaryDesigns2.scala 192:46]
    wire_res[4][16] <= _WIRE_9[16] @[BinaryDesigns2.scala 192:46]
    wire_res[4][17] <= _WIRE_9[17] @[BinaryDesigns2.scala 192:46]
    wire_res[4][18] <= _WIRE_9[18] @[BinaryDesigns2.scala 192:46]
    wire_res[4][19] <= _WIRE_9[19] @[BinaryDesigns2.scala 192:46]
    wire_res[4][20] <= _WIRE_9[20] @[BinaryDesigns2.scala 192:46]
    wire_res[4][21] <= _WIRE_9[21] @[BinaryDesigns2.scala 192:46]
    node _T_110 = bits(result_reg_r[2], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_111 = bits(result_reg_r[2], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_112 = bits(result_reg_r[2], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_113 = bits(result_reg_r[2], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_114 = bits(result_reg_r[2], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_115 = bits(result_reg_r[2], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_116 = bits(result_reg_r[2], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_117 = bits(result_reg_r[2], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_118 = bits(result_reg_r[2], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_119 = bits(result_reg_r[2], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_120 = bits(result_reg_r[2], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_121 = bits(result_reg_r[2], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_122 = bits(result_reg_r[2], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_123 = bits(result_reg_r[2], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_124 = bits(result_reg_r[2], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_125 = bits(result_reg_r[2], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_126 = bits(result_reg_r[2], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_127 = bits(result_reg_r[2], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_128 = bits(result_reg_r[2], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_129 = bits(result_reg_r[2], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_130 = bits(result_reg_r[2], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_131 = bits(result_reg_r[2], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_10 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_10[0] <= _T_110 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[1] <= _T_111 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[2] <= _T_112 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[3] <= _T_113 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[4] <= _T_114 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[5] <= _T_115 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[6] <= _T_116 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[7] <= _T_117 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[8] <= _T_118 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[9] <= _T_119 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[10] <= _T_120 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[11] <= _T_121 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[12] <= _T_122 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[13] <= _T_123 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[14] <= _T_124 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[15] <= _T_125 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[16] <= _T_126 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[17] <= _T_127 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[18] <= _T_128 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[19] <= _T_129 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[20] <= _T_130 @[BinaryDesigns2.scala 192:56]
    _WIRE_10[21] <= _T_131 @[BinaryDesigns2.scala 192:56]
    wire_res[5][0] <= _WIRE_10[0] @[BinaryDesigns2.scala 192:46]
    wire_res[5][1] <= _WIRE_10[1] @[BinaryDesigns2.scala 192:46]
    wire_res[5][2] <= _WIRE_10[2] @[BinaryDesigns2.scala 192:46]
    wire_res[5][3] <= _WIRE_10[3] @[BinaryDesigns2.scala 192:46]
    wire_res[5][4] <= _WIRE_10[4] @[BinaryDesigns2.scala 192:46]
    wire_res[5][5] <= _WIRE_10[5] @[BinaryDesigns2.scala 192:46]
    wire_res[5][6] <= _WIRE_10[6] @[BinaryDesigns2.scala 192:46]
    wire_res[5][7] <= _WIRE_10[7] @[BinaryDesigns2.scala 192:46]
    wire_res[5][8] <= _WIRE_10[8] @[BinaryDesigns2.scala 192:46]
    wire_res[5][9] <= _WIRE_10[9] @[BinaryDesigns2.scala 192:46]
    wire_res[5][10] <= _WIRE_10[10] @[BinaryDesigns2.scala 192:46]
    wire_res[5][11] <= _WIRE_10[11] @[BinaryDesigns2.scala 192:46]
    wire_res[5][12] <= _WIRE_10[12] @[BinaryDesigns2.scala 192:46]
    wire_res[5][13] <= _WIRE_10[13] @[BinaryDesigns2.scala 192:46]
    wire_res[5][14] <= _WIRE_10[14] @[BinaryDesigns2.scala 192:46]
    wire_res[5][15] <= _WIRE_10[15] @[BinaryDesigns2.scala 192:46]
    wire_res[5][16] <= _WIRE_10[16] @[BinaryDesigns2.scala 192:46]
    wire_res[5][17] <= _WIRE_10[17] @[BinaryDesigns2.scala 192:46]
    wire_res[5][18] <= _WIRE_10[18] @[BinaryDesigns2.scala 192:46]
    wire_res[5][19] <= _WIRE_10[19] @[BinaryDesigns2.scala 192:46]
    wire_res[5][20] <= _WIRE_10[20] @[BinaryDesigns2.scala 192:46]
    wire_res[5][21] <= _WIRE_10[21] @[BinaryDesigns2.scala 192:46]
    node _T_132 = bits(result_reg_w[3], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_133 = bits(result_reg_w[3], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_134 = bits(result_reg_w[3], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_135 = bits(result_reg_w[3], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_136 = bits(result_reg_w[3], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_137 = bits(result_reg_w[3], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_138 = bits(result_reg_w[3], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_139 = bits(result_reg_w[3], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_140 = bits(result_reg_w[3], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_141 = bits(result_reg_w[3], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_142 = bits(result_reg_w[3], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_143 = bits(result_reg_w[3], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_144 = bits(result_reg_w[3], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_145 = bits(result_reg_w[3], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_146 = bits(result_reg_w[3], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_147 = bits(result_reg_w[3], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_148 = bits(result_reg_w[3], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_149 = bits(result_reg_w[3], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_150 = bits(result_reg_w[3], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_151 = bits(result_reg_w[3], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_152 = bits(result_reg_w[3], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_153 = bits(result_reg_w[3], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_11 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_11[0] <= _T_132 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[1] <= _T_133 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[2] <= _T_134 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[3] <= _T_135 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[4] <= _T_136 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[5] <= _T_137 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[6] <= _T_138 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[7] <= _T_139 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[8] <= _T_140 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[9] <= _T_141 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[10] <= _T_142 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[11] <= _T_143 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[12] <= _T_144 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[13] <= _T_145 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[14] <= _T_146 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[15] <= _T_147 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[16] <= _T_148 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[17] <= _T_149 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[18] <= _T_150 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[19] <= _T_151 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[20] <= _T_152 @[BinaryDesigns2.scala 192:56]
    _WIRE_11[21] <= _T_153 @[BinaryDesigns2.scala 192:56]
    wire_res[6][0] <= _WIRE_11[0] @[BinaryDesigns2.scala 192:46]
    wire_res[6][1] <= _WIRE_11[1] @[BinaryDesigns2.scala 192:46]
    wire_res[6][2] <= _WIRE_11[2] @[BinaryDesigns2.scala 192:46]
    wire_res[6][3] <= _WIRE_11[3] @[BinaryDesigns2.scala 192:46]
    wire_res[6][4] <= _WIRE_11[4] @[BinaryDesigns2.scala 192:46]
    wire_res[6][5] <= _WIRE_11[5] @[BinaryDesigns2.scala 192:46]
    wire_res[6][6] <= _WIRE_11[6] @[BinaryDesigns2.scala 192:46]
    wire_res[6][7] <= _WIRE_11[7] @[BinaryDesigns2.scala 192:46]
    wire_res[6][8] <= _WIRE_11[8] @[BinaryDesigns2.scala 192:46]
    wire_res[6][9] <= _WIRE_11[9] @[BinaryDesigns2.scala 192:46]
    wire_res[6][10] <= _WIRE_11[10] @[BinaryDesigns2.scala 192:46]
    wire_res[6][11] <= _WIRE_11[11] @[BinaryDesigns2.scala 192:46]
    wire_res[6][12] <= _WIRE_11[12] @[BinaryDesigns2.scala 192:46]
    wire_res[6][13] <= _WIRE_11[13] @[BinaryDesigns2.scala 192:46]
    wire_res[6][14] <= _WIRE_11[14] @[BinaryDesigns2.scala 192:46]
    wire_res[6][15] <= _WIRE_11[15] @[BinaryDesigns2.scala 192:46]
    wire_res[6][16] <= _WIRE_11[16] @[BinaryDesigns2.scala 192:46]
    wire_res[6][17] <= _WIRE_11[17] @[BinaryDesigns2.scala 192:46]
    wire_res[6][18] <= _WIRE_11[18] @[BinaryDesigns2.scala 192:46]
    wire_res[6][19] <= _WIRE_11[19] @[BinaryDesigns2.scala 192:46]
    wire_res[6][20] <= _WIRE_11[20] @[BinaryDesigns2.scala 192:46]
    wire_res[6][21] <= _WIRE_11[21] @[BinaryDesigns2.scala 192:46]
    node _T_154 = bits(result_reg_r[3], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_155 = bits(result_reg_r[3], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_156 = bits(result_reg_r[3], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_157 = bits(result_reg_r[3], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_158 = bits(result_reg_r[3], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_159 = bits(result_reg_r[3], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_160 = bits(result_reg_r[3], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_161 = bits(result_reg_r[3], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_162 = bits(result_reg_r[3], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_163 = bits(result_reg_r[3], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_164 = bits(result_reg_r[3], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_165 = bits(result_reg_r[3], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_166 = bits(result_reg_r[3], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_167 = bits(result_reg_r[3], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_168 = bits(result_reg_r[3], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_169 = bits(result_reg_r[3], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_170 = bits(result_reg_r[3], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_171 = bits(result_reg_r[3], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_172 = bits(result_reg_r[3], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_173 = bits(result_reg_r[3], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_174 = bits(result_reg_r[3], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_175 = bits(result_reg_r[3], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_12 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_12[0] <= _T_154 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[1] <= _T_155 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[2] <= _T_156 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[3] <= _T_157 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[4] <= _T_158 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[5] <= _T_159 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[6] <= _T_160 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[7] <= _T_161 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[8] <= _T_162 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[9] <= _T_163 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[10] <= _T_164 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[11] <= _T_165 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[12] <= _T_166 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[13] <= _T_167 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[14] <= _T_168 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[15] <= _T_169 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[16] <= _T_170 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[17] <= _T_171 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[18] <= _T_172 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[19] <= _T_173 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[20] <= _T_174 @[BinaryDesigns2.scala 192:56]
    _WIRE_12[21] <= _T_175 @[BinaryDesigns2.scala 192:56]
    wire_res[7][0] <= _WIRE_12[0] @[BinaryDesigns2.scala 192:46]
    wire_res[7][1] <= _WIRE_12[1] @[BinaryDesigns2.scala 192:46]
    wire_res[7][2] <= _WIRE_12[2] @[BinaryDesigns2.scala 192:46]
    wire_res[7][3] <= _WIRE_12[3] @[BinaryDesigns2.scala 192:46]
    wire_res[7][4] <= _WIRE_12[4] @[BinaryDesigns2.scala 192:46]
    wire_res[7][5] <= _WIRE_12[5] @[BinaryDesigns2.scala 192:46]
    wire_res[7][6] <= _WIRE_12[6] @[BinaryDesigns2.scala 192:46]
    wire_res[7][7] <= _WIRE_12[7] @[BinaryDesigns2.scala 192:46]
    wire_res[7][8] <= _WIRE_12[8] @[BinaryDesigns2.scala 192:46]
    wire_res[7][9] <= _WIRE_12[9] @[BinaryDesigns2.scala 192:46]
    wire_res[7][10] <= _WIRE_12[10] @[BinaryDesigns2.scala 192:46]
    wire_res[7][11] <= _WIRE_12[11] @[BinaryDesigns2.scala 192:46]
    wire_res[7][12] <= _WIRE_12[12] @[BinaryDesigns2.scala 192:46]
    wire_res[7][13] <= _WIRE_12[13] @[BinaryDesigns2.scala 192:46]
    wire_res[7][14] <= _WIRE_12[14] @[BinaryDesigns2.scala 192:46]
    wire_res[7][15] <= _WIRE_12[15] @[BinaryDesigns2.scala 192:46]
    wire_res[7][16] <= _WIRE_12[16] @[BinaryDesigns2.scala 192:46]
    wire_res[7][17] <= _WIRE_12[17] @[BinaryDesigns2.scala 192:46]
    wire_res[7][18] <= _WIRE_12[18] @[BinaryDesigns2.scala 192:46]
    wire_res[7][19] <= _WIRE_12[19] @[BinaryDesigns2.scala 192:46]
    wire_res[7][20] <= _WIRE_12[20] @[BinaryDesigns2.scala 192:46]
    wire_res[7][21] <= _WIRE_12[21] @[BinaryDesigns2.scala 192:46]
    node _T_176 = bits(result_reg_w[4], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_177 = bits(result_reg_w[4], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_178 = bits(result_reg_w[4], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_179 = bits(result_reg_w[4], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_180 = bits(result_reg_w[4], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_181 = bits(result_reg_w[4], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_182 = bits(result_reg_w[4], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_183 = bits(result_reg_w[4], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_184 = bits(result_reg_w[4], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_185 = bits(result_reg_w[4], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_186 = bits(result_reg_w[4], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_187 = bits(result_reg_w[4], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_188 = bits(result_reg_w[4], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_189 = bits(result_reg_w[4], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_190 = bits(result_reg_w[4], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_191 = bits(result_reg_w[4], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_192 = bits(result_reg_w[4], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_193 = bits(result_reg_w[4], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_194 = bits(result_reg_w[4], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_195 = bits(result_reg_w[4], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_196 = bits(result_reg_w[4], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_197 = bits(result_reg_w[4], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_13 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_13[0] <= _T_176 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[1] <= _T_177 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[2] <= _T_178 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[3] <= _T_179 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[4] <= _T_180 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[5] <= _T_181 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[6] <= _T_182 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[7] <= _T_183 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[8] <= _T_184 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[9] <= _T_185 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[10] <= _T_186 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[11] <= _T_187 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[12] <= _T_188 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[13] <= _T_189 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[14] <= _T_190 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[15] <= _T_191 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[16] <= _T_192 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[17] <= _T_193 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[18] <= _T_194 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[19] <= _T_195 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[20] <= _T_196 @[BinaryDesigns2.scala 192:56]
    _WIRE_13[21] <= _T_197 @[BinaryDesigns2.scala 192:56]
    wire_res[8][0] <= _WIRE_13[0] @[BinaryDesigns2.scala 192:46]
    wire_res[8][1] <= _WIRE_13[1] @[BinaryDesigns2.scala 192:46]
    wire_res[8][2] <= _WIRE_13[2] @[BinaryDesigns2.scala 192:46]
    wire_res[8][3] <= _WIRE_13[3] @[BinaryDesigns2.scala 192:46]
    wire_res[8][4] <= _WIRE_13[4] @[BinaryDesigns2.scala 192:46]
    wire_res[8][5] <= _WIRE_13[5] @[BinaryDesigns2.scala 192:46]
    wire_res[8][6] <= _WIRE_13[6] @[BinaryDesigns2.scala 192:46]
    wire_res[8][7] <= _WIRE_13[7] @[BinaryDesigns2.scala 192:46]
    wire_res[8][8] <= _WIRE_13[8] @[BinaryDesigns2.scala 192:46]
    wire_res[8][9] <= _WIRE_13[9] @[BinaryDesigns2.scala 192:46]
    wire_res[8][10] <= _WIRE_13[10] @[BinaryDesigns2.scala 192:46]
    wire_res[8][11] <= _WIRE_13[11] @[BinaryDesigns2.scala 192:46]
    wire_res[8][12] <= _WIRE_13[12] @[BinaryDesigns2.scala 192:46]
    wire_res[8][13] <= _WIRE_13[13] @[BinaryDesigns2.scala 192:46]
    wire_res[8][14] <= _WIRE_13[14] @[BinaryDesigns2.scala 192:46]
    wire_res[8][15] <= _WIRE_13[15] @[BinaryDesigns2.scala 192:46]
    wire_res[8][16] <= _WIRE_13[16] @[BinaryDesigns2.scala 192:46]
    wire_res[8][17] <= _WIRE_13[17] @[BinaryDesigns2.scala 192:46]
    wire_res[8][18] <= _WIRE_13[18] @[BinaryDesigns2.scala 192:46]
    wire_res[8][19] <= _WIRE_13[19] @[BinaryDesigns2.scala 192:46]
    wire_res[8][20] <= _WIRE_13[20] @[BinaryDesigns2.scala 192:46]
    wire_res[8][21] <= _WIRE_13[21] @[BinaryDesigns2.scala 192:46]
    node _T_198 = bits(result_reg_r[4], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_199 = bits(result_reg_r[4], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_200 = bits(result_reg_r[4], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_201 = bits(result_reg_r[4], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_202 = bits(result_reg_r[4], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_203 = bits(result_reg_r[4], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_204 = bits(result_reg_r[4], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_205 = bits(result_reg_r[4], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_206 = bits(result_reg_r[4], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_207 = bits(result_reg_r[4], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_208 = bits(result_reg_r[4], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_209 = bits(result_reg_r[4], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_210 = bits(result_reg_r[4], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_211 = bits(result_reg_r[4], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_212 = bits(result_reg_r[4], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_213 = bits(result_reg_r[4], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_214 = bits(result_reg_r[4], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_215 = bits(result_reg_r[4], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_216 = bits(result_reg_r[4], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_217 = bits(result_reg_r[4], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_218 = bits(result_reg_r[4], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_219 = bits(result_reg_r[4], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_14 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_14[0] <= _T_198 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[1] <= _T_199 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[2] <= _T_200 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[3] <= _T_201 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[4] <= _T_202 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[5] <= _T_203 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[6] <= _T_204 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[7] <= _T_205 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[8] <= _T_206 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[9] <= _T_207 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[10] <= _T_208 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[11] <= _T_209 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[12] <= _T_210 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[13] <= _T_211 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[14] <= _T_212 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[15] <= _T_213 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[16] <= _T_214 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[17] <= _T_215 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[18] <= _T_216 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[19] <= _T_217 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[20] <= _T_218 @[BinaryDesigns2.scala 192:56]
    _WIRE_14[21] <= _T_219 @[BinaryDesigns2.scala 192:56]
    wire_res[9][0] <= _WIRE_14[0] @[BinaryDesigns2.scala 192:46]
    wire_res[9][1] <= _WIRE_14[1] @[BinaryDesigns2.scala 192:46]
    wire_res[9][2] <= _WIRE_14[2] @[BinaryDesigns2.scala 192:46]
    wire_res[9][3] <= _WIRE_14[3] @[BinaryDesigns2.scala 192:46]
    wire_res[9][4] <= _WIRE_14[4] @[BinaryDesigns2.scala 192:46]
    wire_res[9][5] <= _WIRE_14[5] @[BinaryDesigns2.scala 192:46]
    wire_res[9][6] <= _WIRE_14[6] @[BinaryDesigns2.scala 192:46]
    wire_res[9][7] <= _WIRE_14[7] @[BinaryDesigns2.scala 192:46]
    wire_res[9][8] <= _WIRE_14[8] @[BinaryDesigns2.scala 192:46]
    wire_res[9][9] <= _WIRE_14[9] @[BinaryDesigns2.scala 192:46]
    wire_res[9][10] <= _WIRE_14[10] @[BinaryDesigns2.scala 192:46]
    wire_res[9][11] <= _WIRE_14[11] @[BinaryDesigns2.scala 192:46]
    wire_res[9][12] <= _WIRE_14[12] @[BinaryDesigns2.scala 192:46]
    wire_res[9][13] <= _WIRE_14[13] @[BinaryDesigns2.scala 192:46]
    wire_res[9][14] <= _WIRE_14[14] @[BinaryDesigns2.scala 192:46]
    wire_res[9][15] <= _WIRE_14[15] @[BinaryDesigns2.scala 192:46]
    wire_res[9][16] <= _WIRE_14[16] @[BinaryDesigns2.scala 192:46]
    wire_res[9][17] <= _WIRE_14[17] @[BinaryDesigns2.scala 192:46]
    wire_res[9][18] <= _WIRE_14[18] @[BinaryDesigns2.scala 192:46]
    wire_res[9][19] <= _WIRE_14[19] @[BinaryDesigns2.scala 192:46]
    wire_res[9][20] <= _WIRE_14[20] @[BinaryDesigns2.scala 192:46]
    wire_res[9][21] <= _WIRE_14[21] @[BinaryDesigns2.scala 192:46]
    node _T_220 = bits(result_reg_w[5], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_221 = bits(result_reg_w[5], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_222 = bits(result_reg_w[5], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_223 = bits(result_reg_w[5], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_224 = bits(result_reg_w[5], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_225 = bits(result_reg_w[5], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_226 = bits(result_reg_w[5], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_227 = bits(result_reg_w[5], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_228 = bits(result_reg_w[5], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_229 = bits(result_reg_w[5], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_230 = bits(result_reg_w[5], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_231 = bits(result_reg_w[5], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_232 = bits(result_reg_w[5], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_233 = bits(result_reg_w[5], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_234 = bits(result_reg_w[5], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_235 = bits(result_reg_w[5], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_236 = bits(result_reg_w[5], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_237 = bits(result_reg_w[5], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_238 = bits(result_reg_w[5], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_239 = bits(result_reg_w[5], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_240 = bits(result_reg_w[5], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_241 = bits(result_reg_w[5], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_15 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_15[0] <= _T_220 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[1] <= _T_221 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[2] <= _T_222 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[3] <= _T_223 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[4] <= _T_224 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[5] <= _T_225 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[6] <= _T_226 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[7] <= _T_227 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[8] <= _T_228 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[9] <= _T_229 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[10] <= _T_230 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[11] <= _T_231 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[12] <= _T_232 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[13] <= _T_233 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[14] <= _T_234 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[15] <= _T_235 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[16] <= _T_236 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[17] <= _T_237 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[18] <= _T_238 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[19] <= _T_239 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[20] <= _T_240 @[BinaryDesigns2.scala 192:56]
    _WIRE_15[21] <= _T_241 @[BinaryDesigns2.scala 192:56]
    wire_res[10][0] <= _WIRE_15[0] @[BinaryDesigns2.scala 192:46]
    wire_res[10][1] <= _WIRE_15[1] @[BinaryDesigns2.scala 192:46]
    wire_res[10][2] <= _WIRE_15[2] @[BinaryDesigns2.scala 192:46]
    wire_res[10][3] <= _WIRE_15[3] @[BinaryDesigns2.scala 192:46]
    wire_res[10][4] <= _WIRE_15[4] @[BinaryDesigns2.scala 192:46]
    wire_res[10][5] <= _WIRE_15[5] @[BinaryDesigns2.scala 192:46]
    wire_res[10][6] <= _WIRE_15[6] @[BinaryDesigns2.scala 192:46]
    wire_res[10][7] <= _WIRE_15[7] @[BinaryDesigns2.scala 192:46]
    wire_res[10][8] <= _WIRE_15[8] @[BinaryDesigns2.scala 192:46]
    wire_res[10][9] <= _WIRE_15[9] @[BinaryDesigns2.scala 192:46]
    wire_res[10][10] <= _WIRE_15[10] @[BinaryDesigns2.scala 192:46]
    wire_res[10][11] <= _WIRE_15[11] @[BinaryDesigns2.scala 192:46]
    wire_res[10][12] <= _WIRE_15[12] @[BinaryDesigns2.scala 192:46]
    wire_res[10][13] <= _WIRE_15[13] @[BinaryDesigns2.scala 192:46]
    wire_res[10][14] <= _WIRE_15[14] @[BinaryDesigns2.scala 192:46]
    wire_res[10][15] <= _WIRE_15[15] @[BinaryDesigns2.scala 192:46]
    wire_res[10][16] <= _WIRE_15[16] @[BinaryDesigns2.scala 192:46]
    wire_res[10][17] <= _WIRE_15[17] @[BinaryDesigns2.scala 192:46]
    wire_res[10][18] <= _WIRE_15[18] @[BinaryDesigns2.scala 192:46]
    wire_res[10][19] <= _WIRE_15[19] @[BinaryDesigns2.scala 192:46]
    wire_res[10][20] <= _WIRE_15[20] @[BinaryDesigns2.scala 192:46]
    wire_res[10][21] <= _WIRE_15[21] @[BinaryDesigns2.scala 192:46]
    node _T_242 = bits(result_reg_r[5], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_243 = bits(result_reg_r[5], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_244 = bits(result_reg_r[5], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_245 = bits(result_reg_r[5], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_246 = bits(result_reg_r[5], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_247 = bits(result_reg_r[5], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_248 = bits(result_reg_r[5], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_249 = bits(result_reg_r[5], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_250 = bits(result_reg_r[5], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_251 = bits(result_reg_r[5], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_252 = bits(result_reg_r[5], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_253 = bits(result_reg_r[5], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_254 = bits(result_reg_r[5], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_255 = bits(result_reg_r[5], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_256 = bits(result_reg_r[5], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_257 = bits(result_reg_r[5], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_258 = bits(result_reg_r[5], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_259 = bits(result_reg_r[5], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_260 = bits(result_reg_r[5], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_261 = bits(result_reg_r[5], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_262 = bits(result_reg_r[5], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_263 = bits(result_reg_r[5], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_16 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_16[0] <= _T_242 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[1] <= _T_243 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[2] <= _T_244 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[3] <= _T_245 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[4] <= _T_246 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[5] <= _T_247 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[6] <= _T_248 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[7] <= _T_249 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[8] <= _T_250 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[9] <= _T_251 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[10] <= _T_252 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[11] <= _T_253 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[12] <= _T_254 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[13] <= _T_255 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[14] <= _T_256 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[15] <= _T_257 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[16] <= _T_258 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[17] <= _T_259 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[18] <= _T_260 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[19] <= _T_261 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[20] <= _T_262 @[BinaryDesigns2.scala 192:56]
    _WIRE_16[21] <= _T_263 @[BinaryDesigns2.scala 192:56]
    wire_res[11][0] <= _WIRE_16[0] @[BinaryDesigns2.scala 192:46]
    wire_res[11][1] <= _WIRE_16[1] @[BinaryDesigns2.scala 192:46]
    wire_res[11][2] <= _WIRE_16[2] @[BinaryDesigns2.scala 192:46]
    wire_res[11][3] <= _WIRE_16[3] @[BinaryDesigns2.scala 192:46]
    wire_res[11][4] <= _WIRE_16[4] @[BinaryDesigns2.scala 192:46]
    wire_res[11][5] <= _WIRE_16[5] @[BinaryDesigns2.scala 192:46]
    wire_res[11][6] <= _WIRE_16[6] @[BinaryDesigns2.scala 192:46]
    wire_res[11][7] <= _WIRE_16[7] @[BinaryDesigns2.scala 192:46]
    wire_res[11][8] <= _WIRE_16[8] @[BinaryDesigns2.scala 192:46]
    wire_res[11][9] <= _WIRE_16[9] @[BinaryDesigns2.scala 192:46]
    wire_res[11][10] <= _WIRE_16[10] @[BinaryDesigns2.scala 192:46]
    wire_res[11][11] <= _WIRE_16[11] @[BinaryDesigns2.scala 192:46]
    wire_res[11][12] <= _WIRE_16[12] @[BinaryDesigns2.scala 192:46]
    wire_res[11][13] <= _WIRE_16[13] @[BinaryDesigns2.scala 192:46]
    wire_res[11][14] <= _WIRE_16[14] @[BinaryDesigns2.scala 192:46]
    wire_res[11][15] <= _WIRE_16[15] @[BinaryDesigns2.scala 192:46]
    wire_res[11][16] <= _WIRE_16[16] @[BinaryDesigns2.scala 192:46]
    wire_res[11][17] <= _WIRE_16[17] @[BinaryDesigns2.scala 192:46]
    wire_res[11][18] <= _WIRE_16[18] @[BinaryDesigns2.scala 192:46]
    wire_res[11][19] <= _WIRE_16[19] @[BinaryDesigns2.scala 192:46]
    wire_res[11][20] <= _WIRE_16[20] @[BinaryDesigns2.scala 192:46]
    wire_res[11][21] <= _WIRE_16[21] @[BinaryDesigns2.scala 192:46]
    node _T_264 = bits(result_reg_w[6], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_265 = bits(result_reg_w[6], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_266 = bits(result_reg_w[6], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_267 = bits(result_reg_w[6], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_268 = bits(result_reg_w[6], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_269 = bits(result_reg_w[6], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_270 = bits(result_reg_w[6], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_271 = bits(result_reg_w[6], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_272 = bits(result_reg_w[6], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_273 = bits(result_reg_w[6], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_274 = bits(result_reg_w[6], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_275 = bits(result_reg_w[6], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_276 = bits(result_reg_w[6], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_277 = bits(result_reg_w[6], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_278 = bits(result_reg_w[6], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_279 = bits(result_reg_w[6], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_280 = bits(result_reg_w[6], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_281 = bits(result_reg_w[6], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_282 = bits(result_reg_w[6], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_283 = bits(result_reg_w[6], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_284 = bits(result_reg_w[6], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_285 = bits(result_reg_w[6], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_17 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_17[0] <= _T_264 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[1] <= _T_265 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[2] <= _T_266 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[3] <= _T_267 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[4] <= _T_268 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[5] <= _T_269 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[6] <= _T_270 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[7] <= _T_271 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[8] <= _T_272 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[9] <= _T_273 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[10] <= _T_274 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[11] <= _T_275 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[12] <= _T_276 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[13] <= _T_277 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[14] <= _T_278 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[15] <= _T_279 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[16] <= _T_280 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[17] <= _T_281 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[18] <= _T_282 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[19] <= _T_283 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[20] <= _T_284 @[BinaryDesigns2.scala 192:56]
    _WIRE_17[21] <= _T_285 @[BinaryDesigns2.scala 192:56]
    wire_res[12][0] <= _WIRE_17[0] @[BinaryDesigns2.scala 192:46]
    wire_res[12][1] <= _WIRE_17[1] @[BinaryDesigns2.scala 192:46]
    wire_res[12][2] <= _WIRE_17[2] @[BinaryDesigns2.scala 192:46]
    wire_res[12][3] <= _WIRE_17[3] @[BinaryDesigns2.scala 192:46]
    wire_res[12][4] <= _WIRE_17[4] @[BinaryDesigns2.scala 192:46]
    wire_res[12][5] <= _WIRE_17[5] @[BinaryDesigns2.scala 192:46]
    wire_res[12][6] <= _WIRE_17[6] @[BinaryDesigns2.scala 192:46]
    wire_res[12][7] <= _WIRE_17[7] @[BinaryDesigns2.scala 192:46]
    wire_res[12][8] <= _WIRE_17[8] @[BinaryDesigns2.scala 192:46]
    wire_res[12][9] <= _WIRE_17[9] @[BinaryDesigns2.scala 192:46]
    wire_res[12][10] <= _WIRE_17[10] @[BinaryDesigns2.scala 192:46]
    wire_res[12][11] <= _WIRE_17[11] @[BinaryDesigns2.scala 192:46]
    wire_res[12][12] <= _WIRE_17[12] @[BinaryDesigns2.scala 192:46]
    wire_res[12][13] <= _WIRE_17[13] @[BinaryDesigns2.scala 192:46]
    wire_res[12][14] <= _WIRE_17[14] @[BinaryDesigns2.scala 192:46]
    wire_res[12][15] <= _WIRE_17[15] @[BinaryDesigns2.scala 192:46]
    wire_res[12][16] <= _WIRE_17[16] @[BinaryDesigns2.scala 192:46]
    wire_res[12][17] <= _WIRE_17[17] @[BinaryDesigns2.scala 192:46]
    wire_res[12][18] <= _WIRE_17[18] @[BinaryDesigns2.scala 192:46]
    wire_res[12][19] <= _WIRE_17[19] @[BinaryDesigns2.scala 192:46]
    wire_res[12][20] <= _WIRE_17[20] @[BinaryDesigns2.scala 192:46]
    wire_res[12][21] <= _WIRE_17[21] @[BinaryDesigns2.scala 192:46]
    node _T_286 = bits(result_reg_r[6], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_287 = bits(result_reg_r[6], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_288 = bits(result_reg_r[6], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_289 = bits(result_reg_r[6], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_290 = bits(result_reg_r[6], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_291 = bits(result_reg_r[6], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_292 = bits(result_reg_r[6], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_293 = bits(result_reg_r[6], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_294 = bits(result_reg_r[6], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_295 = bits(result_reg_r[6], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_296 = bits(result_reg_r[6], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_297 = bits(result_reg_r[6], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_298 = bits(result_reg_r[6], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_299 = bits(result_reg_r[6], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_300 = bits(result_reg_r[6], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_301 = bits(result_reg_r[6], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_302 = bits(result_reg_r[6], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_303 = bits(result_reg_r[6], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_304 = bits(result_reg_r[6], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_305 = bits(result_reg_r[6], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_306 = bits(result_reg_r[6], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_307 = bits(result_reg_r[6], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_18 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_18[0] <= _T_286 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[1] <= _T_287 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[2] <= _T_288 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[3] <= _T_289 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[4] <= _T_290 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[5] <= _T_291 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[6] <= _T_292 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[7] <= _T_293 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[8] <= _T_294 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[9] <= _T_295 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[10] <= _T_296 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[11] <= _T_297 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[12] <= _T_298 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[13] <= _T_299 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[14] <= _T_300 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[15] <= _T_301 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[16] <= _T_302 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[17] <= _T_303 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[18] <= _T_304 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[19] <= _T_305 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[20] <= _T_306 @[BinaryDesigns2.scala 192:56]
    _WIRE_18[21] <= _T_307 @[BinaryDesigns2.scala 192:56]
    wire_res[13][0] <= _WIRE_18[0] @[BinaryDesigns2.scala 192:46]
    wire_res[13][1] <= _WIRE_18[1] @[BinaryDesigns2.scala 192:46]
    wire_res[13][2] <= _WIRE_18[2] @[BinaryDesigns2.scala 192:46]
    wire_res[13][3] <= _WIRE_18[3] @[BinaryDesigns2.scala 192:46]
    wire_res[13][4] <= _WIRE_18[4] @[BinaryDesigns2.scala 192:46]
    wire_res[13][5] <= _WIRE_18[5] @[BinaryDesigns2.scala 192:46]
    wire_res[13][6] <= _WIRE_18[6] @[BinaryDesigns2.scala 192:46]
    wire_res[13][7] <= _WIRE_18[7] @[BinaryDesigns2.scala 192:46]
    wire_res[13][8] <= _WIRE_18[8] @[BinaryDesigns2.scala 192:46]
    wire_res[13][9] <= _WIRE_18[9] @[BinaryDesigns2.scala 192:46]
    wire_res[13][10] <= _WIRE_18[10] @[BinaryDesigns2.scala 192:46]
    wire_res[13][11] <= _WIRE_18[11] @[BinaryDesigns2.scala 192:46]
    wire_res[13][12] <= _WIRE_18[12] @[BinaryDesigns2.scala 192:46]
    wire_res[13][13] <= _WIRE_18[13] @[BinaryDesigns2.scala 192:46]
    wire_res[13][14] <= _WIRE_18[14] @[BinaryDesigns2.scala 192:46]
    wire_res[13][15] <= _WIRE_18[15] @[BinaryDesigns2.scala 192:46]
    wire_res[13][16] <= _WIRE_18[16] @[BinaryDesigns2.scala 192:46]
    wire_res[13][17] <= _WIRE_18[17] @[BinaryDesigns2.scala 192:46]
    wire_res[13][18] <= _WIRE_18[18] @[BinaryDesigns2.scala 192:46]
    wire_res[13][19] <= _WIRE_18[19] @[BinaryDesigns2.scala 192:46]
    wire_res[13][20] <= _WIRE_18[20] @[BinaryDesigns2.scala 192:46]
    wire_res[13][21] <= _WIRE_18[21] @[BinaryDesigns2.scala 192:46]
    node _T_308 = bits(result_reg_w[7], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_309 = bits(result_reg_w[7], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_310 = bits(result_reg_w[7], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_311 = bits(result_reg_w[7], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_312 = bits(result_reg_w[7], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_313 = bits(result_reg_w[7], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_314 = bits(result_reg_w[7], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_315 = bits(result_reg_w[7], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_316 = bits(result_reg_w[7], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_317 = bits(result_reg_w[7], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_318 = bits(result_reg_w[7], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_319 = bits(result_reg_w[7], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_320 = bits(result_reg_w[7], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_321 = bits(result_reg_w[7], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_322 = bits(result_reg_w[7], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_323 = bits(result_reg_w[7], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_324 = bits(result_reg_w[7], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_325 = bits(result_reg_w[7], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_326 = bits(result_reg_w[7], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_327 = bits(result_reg_w[7], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_328 = bits(result_reg_w[7], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_329 = bits(result_reg_w[7], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_19 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_19[0] <= _T_308 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[1] <= _T_309 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[2] <= _T_310 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[3] <= _T_311 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[4] <= _T_312 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[5] <= _T_313 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[6] <= _T_314 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[7] <= _T_315 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[8] <= _T_316 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[9] <= _T_317 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[10] <= _T_318 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[11] <= _T_319 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[12] <= _T_320 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[13] <= _T_321 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[14] <= _T_322 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[15] <= _T_323 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[16] <= _T_324 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[17] <= _T_325 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[18] <= _T_326 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[19] <= _T_327 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[20] <= _T_328 @[BinaryDesigns2.scala 192:56]
    _WIRE_19[21] <= _T_329 @[BinaryDesigns2.scala 192:56]
    wire_res[14][0] <= _WIRE_19[0] @[BinaryDesigns2.scala 192:46]
    wire_res[14][1] <= _WIRE_19[1] @[BinaryDesigns2.scala 192:46]
    wire_res[14][2] <= _WIRE_19[2] @[BinaryDesigns2.scala 192:46]
    wire_res[14][3] <= _WIRE_19[3] @[BinaryDesigns2.scala 192:46]
    wire_res[14][4] <= _WIRE_19[4] @[BinaryDesigns2.scala 192:46]
    wire_res[14][5] <= _WIRE_19[5] @[BinaryDesigns2.scala 192:46]
    wire_res[14][6] <= _WIRE_19[6] @[BinaryDesigns2.scala 192:46]
    wire_res[14][7] <= _WIRE_19[7] @[BinaryDesigns2.scala 192:46]
    wire_res[14][8] <= _WIRE_19[8] @[BinaryDesigns2.scala 192:46]
    wire_res[14][9] <= _WIRE_19[9] @[BinaryDesigns2.scala 192:46]
    wire_res[14][10] <= _WIRE_19[10] @[BinaryDesigns2.scala 192:46]
    wire_res[14][11] <= _WIRE_19[11] @[BinaryDesigns2.scala 192:46]
    wire_res[14][12] <= _WIRE_19[12] @[BinaryDesigns2.scala 192:46]
    wire_res[14][13] <= _WIRE_19[13] @[BinaryDesigns2.scala 192:46]
    wire_res[14][14] <= _WIRE_19[14] @[BinaryDesigns2.scala 192:46]
    wire_res[14][15] <= _WIRE_19[15] @[BinaryDesigns2.scala 192:46]
    wire_res[14][16] <= _WIRE_19[16] @[BinaryDesigns2.scala 192:46]
    wire_res[14][17] <= _WIRE_19[17] @[BinaryDesigns2.scala 192:46]
    wire_res[14][18] <= _WIRE_19[18] @[BinaryDesigns2.scala 192:46]
    wire_res[14][19] <= _WIRE_19[19] @[BinaryDesigns2.scala 192:46]
    wire_res[14][20] <= _WIRE_19[20] @[BinaryDesigns2.scala 192:46]
    wire_res[14][21] <= _WIRE_19[21] @[BinaryDesigns2.scala 192:46]
    node _T_330 = bits(result_reg_r[7], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_331 = bits(result_reg_r[7], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_332 = bits(result_reg_r[7], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_333 = bits(result_reg_r[7], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_334 = bits(result_reg_r[7], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_335 = bits(result_reg_r[7], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_336 = bits(result_reg_r[7], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_337 = bits(result_reg_r[7], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_338 = bits(result_reg_r[7], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_339 = bits(result_reg_r[7], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_340 = bits(result_reg_r[7], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_341 = bits(result_reg_r[7], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_342 = bits(result_reg_r[7], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_343 = bits(result_reg_r[7], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_344 = bits(result_reg_r[7], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_345 = bits(result_reg_r[7], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_346 = bits(result_reg_r[7], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_347 = bits(result_reg_r[7], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_348 = bits(result_reg_r[7], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_349 = bits(result_reg_r[7], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_350 = bits(result_reg_r[7], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_351 = bits(result_reg_r[7], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_20 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_20[0] <= _T_330 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[1] <= _T_331 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[2] <= _T_332 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[3] <= _T_333 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[4] <= _T_334 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[5] <= _T_335 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[6] <= _T_336 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[7] <= _T_337 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[8] <= _T_338 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[9] <= _T_339 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[10] <= _T_340 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[11] <= _T_341 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[12] <= _T_342 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[13] <= _T_343 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[14] <= _T_344 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[15] <= _T_345 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[16] <= _T_346 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[17] <= _T_347 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[18] <= _T_348 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[19] <= _T_349 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[20] <= _T_350 @[BinaryDesigns2.scala 192:56]
    _WIRE_20[21] <= _T_351 @[BinaryDesigns2.scala 192:56]
    wire_res[15][0] <= _WIRE_20[0] @[BinaryDesigns2.scala 192:46]
    wire_res[15][1] <= _WIRE_20[1] @[BinaryDesigns2.scala 192:46]
    wire_res[15][2] <= _WIRE_20[2] @[BinaryDesigns2.scala 192:46]
    wire_res[15][3] <= _WIRE_20[3] @[BinaryDesigns2.scala 192:46]
    wire_res[15][4] <= _WIRE_20[4] @[BinaryDesigns2.scala 192:46]
    wire_res[15][5] <= _WIRE_20[5] @[BinaryDesigns2.scala 192:46]
    wire_res[15][6] <= _WIRE_20[6] @[BinaryDesigns2.scala 192:46]
    wire_res[15][7] <= _WIRE_20[7] @[BinaryDesigns2.scala 192:46]
    wire_res[15][8] <= _WIRE_20[8] @[BinaryDesigns2.scala 192:46]
    wire_res[15][9] <= _WIRE_20[9] @[BinaryDesigns2.scala 192:46]
    wire_res[15][10] <= _WIRE_20[10] @[BinaryDesigns2.scala 192:46]
    wire_res[15][11] <= _WIRE_20[11] @[BinaryDesigns2.scala 192:46]
    wire_res[15][12] <= _WIRE_20[12] @[BinaryDesigns2.scala 192:46]
    wire_res[15][13] <= _WIRE_20[13] @[BinaryDesigns2.scala 192:46]
    wire_res[15][14] <= _WIRE_20[14] @[BinaryDesigns2.scala 192:46]
    wire_res[15][15] <= _WIRE_20[15] @[BinaryDesigns2.scala 192:46]
    wire_res[15][16] <= _WIRE_20[16] @[BinaryDesigns2.scala 192:46]
    wire_res[15][17] <= _WIRE_20[17] @[BinaryDesigns2.scala 192:46]
    wire_res[15][18] <= _WIRE_20[18] @[BinaryDesigns2.scala 192:46]
    wire_res[15][19] <= _WIRE_20[19] @[BinaryDesigns2.scala 192:46]
    wire_res[15][20] <= _WIRE_20[20] @[BinaryDesigns2.scala 192:46]
    wire_res[15][21] <= _WIRE_20[21] @[BinaryDesigns2.scala 192:46]
    node _T_352 = bits(result_reg_w[8], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_353 = bits(result_reg_w[8], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_354 = bits(result_reg_w[8], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_355 = bits(result_reg_w[8], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_356 = bits(result_reg_w[8], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_357 = bits(result_reg_w[8], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_358 = bits(result_reg_w[8], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_359 = bits(result_reg_w[8], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_360 = bits(result_reg_w[8], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_361 = bits(result_reg_w[8], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_362 = bits(result_reg_w[8], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_363 = bits(result_reg_w[8], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_364 = bits(result_reg_w[8], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_365 = bits(result_reg_w[8], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_366 = bits(result_reg_w[8], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_367 = bits(result_reg_w[8], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_368 = bits(result_reg_w[8], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_369 = bits(result_reg_w[8], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_370 = bits(result_reg_w[8], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_371 = bits(result_reg_w[8], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_372 = bits(result_reg_w[8], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_373 = bits(result_reg_w[8], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_21 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_21[0] <= _T_352 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[1] <= _T_353 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[2] <= _T_354 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[3] <= _T_355 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[4] <= _T_356 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[5] <= _T_357 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[6] <= _T_358 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[7] <= _T_359 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[8] <= _T_360 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[9] <= _T_361 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[10] <= _T_362 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[11] <= _T_363 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[12] <= _T_364 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[13] <= _T_365 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[14] <= _T_366 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[15] <= _T_367 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[16] <= _T_368 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[17] <= _T_369 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[18] <= _T_370 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[19] <= _T_371 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[20] <= _T_372 @[BinaryDesigns2.scala 192:56]
    _WIRE_21[21] <= _T_373 @[BinaryDesigns2.scala 192:56]
    wire_res[16][0] <= _WIRE_21[0] @[BinaryDesigns2.scala 192:46]
    wire_res[16][1] <= _WIRE_21[1] @[BinaryDesigns2.scala 192:46]
    wire_res[16][2] <= _WIRE_21[2] @[BinaryDesigns2.scala 192:46]
    wire_res[16][3] <= _WIRE_21[3] @[BinaryDesigns2.scala 192:46]
    wire_res[16][4] <= _WIRE_21[4] @[BinaryDesigns2.scala 192:46]
    wire_res[16][5] <= _WIRE_21[5] @[BinaryDesigns2.scala 192:46]
    wire_res[16][6] <= _WIRE_21[6] @[BinaryDesigns2.scala 192:46]
    wire_res[16][7] <= _WIRE_21[7] @[BinaryDesigns2.scala 192:46]
    wire_res[16][8] <= _WIRE_21[8] @[BinaryDesigns2.scala 192:46]
    wire_res[16][9] <= _WIRE_21[9] @[BinaryDesigns2.scala 192:46]
    wire_res[16][10] <= _WIRE_21[10] @[BinaryDesigns2.scala 192:46]
    wire_res[16][11] <= _WIRE_21[11] @[BinaryDesigns2.scala 192:46]
    wire_res[16][12] <= _WIRE_21[12] @[BinaryDesigns2.scala 192:46]
    wire_res[16][13] <= _WIRE_21[13] @[BinaryDesigns2.scala 192:46]
    wire_res[16][14] <= _WIRE_21[14] @[BinaryDesigns2.scala 192:46]
    wire_res[16][15] <= _WIRE_21[15] @[BinaryDesigns2.scala 192:46]
    wire_res[16][16] <= _WIRE_21[16] @[BinaryDesigns2.scala 192:46]
    wire_res[16][17] <= _WIRE_21[17] @[BinaryDesigns2.scala 192:46]
    wire_res[16][18] <= _WIRE_21[18] @[BinaryDesigns2.scala 192:46]
    wire_res[16][19] <= _WIRE_21[19] @[BinaryDesigns2.scala 192:46]
    wire_res[16][20] <= _WIRE_21[20] @[BinaryDesigns2.scala 192:46]
    wire_res[16][21] <= _WIRE_21[21] @[BinaryDesigns2.scala 192:46]
    node _T_374 = bits(result_reg_r[8], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_375 = bits(result_reg_r[8], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_376 = bits(result_reg_r[8], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_377 = bits(result_reg_r[8], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_378 = bits(result_reg_r[8], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_379 = bits(result_reg_r[8], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_380 = bits(result_reg_r[8], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_381 = bits(result_reg_r[8], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_382 = bits(result_reg_r[8], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_383 = bits(result_reg_r[8], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_384 = bits(result_reg_r[8], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_385 = bits(result_reg_r[8], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_386 = bits(result_reg_r[8], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_387 = bits(result_reg_r[8], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_388 = bits(result_reg_r[8], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_389 = bits(result_reg_r[8], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_390 = bits(result_reg_r[8], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_391 = bits(result_reg_r[8], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_392 = bits(result_reg_r[8], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_393 = bits(result_reg_r[8], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_394 = bits(result_reg_r[8], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_395 = bits(result_reg_r[8], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_22 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_22[0] <= _T_374 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[1] <= _T_375 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[2] <= _T_376 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[3] <= _T_377 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[4] <= _T_378 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[5] <= _T_379 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[6] <= _T_380 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[7] <= _T_381 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[8] <= _T_382 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[9] <= _T_383 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[10] <= _T_384 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[11] <= _T_385 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[12] <= _T_386 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[13] <= _T_387 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[14] <= _T_388 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[15] <= _T_389 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[16] <= _T_390 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[17] <= _T_391 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[18] <= _T_392 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[19] <= _T_393 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[20] <= _T_394 @[BinaryDesigns2.scala 192:56]
    _WIRE_22[21] <= _T_395 @[BinaryDesigns2.scala 192:56]
    wire_res[17][0] <= _WIRE_22[0] @[BinaryDesigns2.scala 192:46]
    wire_res[17][1] <= _WIRE_22[1] @[BinaryDesigns2.scala 192:46]
    wire_res[17][2] <= _WIRE_22[2] @[BinaryDesigns2.scala 192:46]
    wire_res[17][3] <= _WIRE_22[3] @[BinaryDesigns2.scala 192:46]
    wire_res[17][4] <= _WIRE_22[4] @[BinaryDesigns2.scala 192:46]
    wire_res[17][5] <= _WIRE_22[5] @[BinaryDesigns2.scala 192:46]
    wire_res[17][6] <= _WIRE_22[6] @[BinaryDesigns2.scala 192:46]
    wire_res[17][7] <= _WIRE_22[7] @[BinaryDesigns2.scala 192:46]
    wire_res[17][8] <= _WIRE_22[8] @[BinaryDesigns2.scala 192:46]
    wire_res[17][9] <= _WIRE_22[9] @[BinaryDesigns2.scala 192:46]
    wire_res[17][10] <= _WIRE_22[10] @[BinaryDesigns2.scala 192:46]
    wire_res[17][11] <= _WIRE_22[11] @[BinaryDesigns2.scala 192:46]
    wire_res[17][12] <= _WIRE_22[12] @[BinaryDesigns2.scala 192:46]
    wire_res[17][13] <= _WIRE_22[13] @[BinaryDesigns2.scala 192:46]
    wire_res[17][14] <= _WIRE_22[14] @[BinaryDesigns2.scala 192:46]
    wire_res[17][15] <= _WIRE_22[15] @[BinaryDesigns2.scala 192:46]
    wire_res[17][16] <= _WIRE_22[16] @[BinaryDesigns2.scala 192:46]
    wire_res[17][17] <= _WIRE_22[17] @[BinaryDesigns2.scala 192:46]
    wire_res[17][18] <= _WIRE_22[18] @[BinaryDesigns2.scala 192:46]
    wire_res[17][19] <= _WIRE_22[19] @[BinaryDesigns2.scala 192:46]
    wire_res[17][20] <= _WIRE_22[20] @[BinaryDesigns2.scala 192:46]
    wire_res[17][21] <= _WIRE_22[21] @[BinaryDesigns2.scala 192:46]
    node _T_396 = bits(result_reg_w[9], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_397 = bits(result_reg_w[9], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_398 = bits(result_reg_w[9], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_399 = bits(result_reg_w[9], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_400 = bits(result_reg_w[9], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_401 = bits(result_reg_w[9], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_402 = bits(result_reg_w[9], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_403 = bits(result_reg_w[9], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_404 = bits(result_reg_w[9], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_405 = bits(result_reg_w[9], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_406 = bits(result_reg_w[9], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_407 = bits(result_reg_w[9], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_408 = bits(result_reg_w[9], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_409 = bits(result_reg_w[9], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_410 = bits(result_reg_w[9], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_411 = bits(result_reg_w[9], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_412 = bits(result_reg_w[9], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_413 = bits(result_reg_w[9], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_414 = bits(result_reg_w[9], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_415 = bits(result_reg_w[9], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_416 = bits(result_reg_w[9], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_417 = bits(result_reg_w[9], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_23 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_23[0] <= _T_396 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[1] <= _T_397 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[2] <= _T_398 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[3] <= _T_399 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[4] <= _T_400 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[5] <= _T_401 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[6] <= _T_402 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[7] <= _T_403 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[8] <= _T_404 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[9] <= _T_405 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[10] <= _T_406 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[11] <= _T_407 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[12] <= _T_408 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[13] <= _T_409 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[14] <= _T_410 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[15] <= _T_411 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[16] <= _T_412 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[17] <= _T_413 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[18] <= _T_414 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[19] <= _T_415 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[20] <= _T_416 @[BinaryDesigns2.scala 192:56]
    _WIRE_23[21] <= _T_417 @[BinaryDesigns2.scala 192:56]
    wire_res[18][0] <= _WIRE_23[0] @[BinaryDesigns2.scala 192:46]
    wire_res[18][1] <= _WIRE_23[1] @[BinaryDesigns2.scala 192:46]
    wire_res[18][2] <= _WIRE_23[2] @[BinaryDesigns2.scala 192:46]
    wire_res[18][3] <= _WIRE_23[3] @[BinaryDesigns2.scala 192:46]
    wire_res[18][4] <= _WIRE_23[4] @[BinaryDesigns2.scala 192:46]
    wire_res[18][5] <= _WIRE_23[5] @[BinaryDesigns2.scala 192:46]
    wire_res[18][6] <= _WIRE_23[6] @[BinaryDesigns2.scala 192:46]
    wire_res[18][7] <= _WIRE_23[7] @[BinaryDesigns2.scala 192:46]
    wire_res[18][8] <= _WIRE_23[8] @[BinaryDesigns2.scala 192:46]
    wire_res[18][9] <= _WIRE_23[9] @[BinaryDesigns2.scala 192:46]
    wire_res[18][10] <= _WIRE_23[10] @[BinaryDesigns2.scala 192:46]
    wire_res[18][11] <= _WIRE_23[11] @[BinaryDesigns2.scala 192:46]
    wire_res[18][12] <= _WIRE_23[12] @[BinaryDesigns2.scala 192:46]
    wire_res[18][13] <= _WIRE_23[13] @[BinaryDesigns2.scala 192:46]
    wire_res[18][14] <= _WIRE_23[14] @[BinaryDesigns2.scala 192:46]
    wire_res[18][15] <= _WIRE_23[15] @[BinaryDesigns2.scala 192:46]
    wire_res[18][16] <= _WIRE_23[16] @[BinaryDesigns2.scala 192:46]
    wire_res[18][17] <= _WIRE_23[17] @[BinaryDesigns2.scala 192:46]
    wire_res[18][18] <= _WIRE_23[18] @[BinaryDesigns2.scala 192:46]
    wire_res[18][19] <= _WIRE_23[19] @[BinaryDesigns2.scala 192:46]
    wire_res[18][20] <= _WIRE_23[20] @[BinaryDesigns2.scala 192:46]
    wire_res[18][21] <= _WIRE_23[21] @[BinaryDesigns2.scala 192:46]
    node _T_418 = bits(result_reg_r[9], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_419 = bits(result_reg_r[9], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_420 = bits(result_reg_r[9], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_421 = bits(result_reg_r[9], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_422 = bits(result_reg_r[9], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_423 = bits(result_reg_r[9], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_424 = bits(result_reg_r[9], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_425 = bits(result_reg_r[9], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_426 = bits(result_reg_r[9], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_427 = bits(result_reg_r[9], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_428 = bits(result_reg_r[9], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_429 = bits(result_reg_r[9], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_430 = bits(result_reg_r[9], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_431 = bits(result_reg_r[9], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_432 = bits(result_reg_r[9], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_433 = bits(result_reg_r[9], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_434 = bits(result_reg_r[9], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_435 = bits(result_reg_r[9], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_436 = bits(result_reg_r[9], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_437 = bits(result_reg_r[9], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_438 = bits(result_reg_r[9], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_439 = bits(result_reg_r[9], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_24 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_24[0] <= _T_418 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[1] <= _T_419 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[2] <= _T_420 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[3] <= _T_421 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[4] <= _T_422 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[5] <= _T_423 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[6] <= _T_424 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[7] <= _T_425 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[8] <= _T_426 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[9] <= _T_427 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[10] <= _T_428 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[11] <= _T_429 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[12] <= _T_430 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[13] <= _T_431 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[14] <= _T_432 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[15] <= _T_433 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[16] <= _T_434 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[17] <= _T_435 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[18] <= _T_436 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[19] <= _T_437 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[20] <= _T_438 @[BinaryDesigns2.scala 192:56]
    _WIRE_24[21] <= _T_439 @[BinaryDesigns2.scala 192:56]
    wire_res[19][0] <= _WIRE_24[0] @[BinaryDesigns2.scala 192:46]
    wire_res[19][1] <= _WIRE_24[1] @[BinaryDesigns2.scala 192:46]
    wire_res[19][2] <= _WIRE_24[2] @[BinaryDesigns2.scala 192:46]
    wire_res[19][3] <= _WIRE_24[3] @[BinaryDesigns2.scala 192:46]
    wire_res[19][4] <= _WIRE_24[4] @[BinaryDesigns2.scala 192:46]
    wire_res[19][5] <= _WIRE_24[5] @[BinaryDesigns2.scala 192:46]
    wire_res[19][6] <= _WIRE_24[6] @[BinaryDesigns2.scala 192:46]
    wire_res[19][7] <= _WIRE_24[7] @[BinaryDesigns2.scala 192:46]
    wire_res[19][8] <= _WIRE_24[8] @[BinaryDesigns2.scala 192:46]
    wire_res[19][9] <= _WIRE_24[9] @[BinaryDesigns2.scala 192:46]
    wire_res[19][10] <= _WIRE_24[10] @[BinaryDesigns2.scala 192:46]
    wire_res[19][11] <= _WIRE_24[11] @[BinaryDesigns2.scala 192:46]
    wire_res[19][12] <= _WIRE_24[12] @[BinaryDesigns2.scala 192:46]
    wire_res[19][13] <= _WIRE_24[13] @[BinaryDesigns2.scala 192:46]
    wire_res[19][14] <= _WIRE_24[14] @[BinaryDesigns2.scala 192:46]
    wire_res[19][15] <= _WIRE_24[15] @[BinaryDesigns2.scala 192:46]
    wire_res[19][16] <= _WIRE_24[16] @[BinaryDesigns2.scala 192:46]
    wire_res[19][17] <= _WIRE_24[17] @[BinaryDesigns2.scala 192:46]
    wire_res[19][18] <= _WIRE_24[18] @[BinaryDesigns2.scala 192:46]
    wire_res[19][19] <= _WIRE_24[19] @[BinaryDesigns2.scala 192:46]
    wire_res[19][20] <= _WIRE_24[20] @[BinaryDesigns2.scala 192:46]
    wire_res[19][21] <= _WIRE_24[21] @[BinaryDesigns2.scala 192:46]
    node _T_440 = bits(result_reg_w[10], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_441 = bits(result_reg_w[10], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_442 = bits(result_reg_w[10], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_443 = bits(result_reg_w[10], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_444 = bits(result_reg_w[10], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_445 = bits(result_reg_w[10], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_446 = bits(result_reg_w[10], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_447 = bits(result_reg_w[10], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_448 = bits(result_reg_w[10], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_449 = bits(result_reg_w[10], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_450 = bits(result_reg_w[10], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_451 = bits(result_reg_w[10], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_452 = bits(result_reg_w[10], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_453 = bits(result_reg_w[10], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_454 = bits(result_reg_w[10], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_455 = bits(result_reg_w[10], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_456 = bits(result_reg_w[10], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_457 = bits(result_reg_w[10], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_458 = bits(result_reg_w[10], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_459 = bits(result_reg_w[10], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_460 = bits(result_reg_w[10], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_461 = bits(result_reg_w[10], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_25 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_25[0] <= _T_440 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[1] <= _T_441 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[2] <= _T_442 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[3] <= _T_443 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[4] <= _T_444 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[5] <= _T_445 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[6] <= _T_446 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[7] <= _T_447 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[8] <= _T_448 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[9] <= _T_449 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[10] <= _T_450 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[11] <= _T_451 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[12] <= _T_452 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[13] <= _T_453 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[14] <= _T_454 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[15] <= _T_455 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[16] <= _T_456 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[17] <= _T_457 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[18] <= _T_458 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[19] <= _T_459 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[20] <= _T_460 @[BinaryDesigns2.scala 192:56]
    _WIRE_25[21] <= _T_461 @[BinaryDesigns2.scala 192:56]
    wire_res[20][0] <= _WIRE_25[0] @[BinaryDesigns2.scala 192:46]
    wire_res[20][1] <= _WIRE_25[1] @[BinaryDesigns2.scala 192:46]
    wire_res[20][2] <= _WIRE_25[2] @[BinaryDesigns2.scala 192:46]
    wire_res[20][3] <= _WIRE_25[3] @[BinaryDesigns2.scala 192:46]
    wire_res[20][4] <= _WIRE_25[4] @[BinaryDesigns2.scala 192:46]
    wire_res[20][5] <= _WIRE_25[5] @[BinaryDesigns2.scala 192:46]
    wire_res[20][6] <= _WIRE_25[6] @[BinaryDesigns2.scala 192:46]
    wire_res[20][7] <= _WIRE_25[7] @[BinaryDesigns2.scala 192:46]
    wire_res[20][8] <= _WIRE_25[8] @[BinaryDesigns2.scala 192:46]
    wire_res[20][9] <= _WIRE_25[9] @[BinaryDesigns2.scala 192:46]
    wire_res[20][10] <= _WIRE_25[10] @[BinaryDesigns2.scala 192:46]
    wire_res[20][11] <= _WIRE_25[11] @[BinaryDesigns2.scala 192:46]
    wire_res[20][12] <= _WIRE_25[12] @[BinaryDesigns2.scala 192:46]
    wire_res[20][13] <= _WIRE_25[13] @[BinaryDesigns2.scala 192:46]
    wire_res[20][14] <= _WIRE_25[14] @[BinaryDesigns2.scala 192:46]
    wire_res[20][15] <= _WIRE_25[15] @[BinaryDesigns2.scala 192:46]
    wire_res[20][16] <= _WIRE_25[16] @[BinaryDesigns2.scala 192:46]
    wire_res[20][17] <= _WIRE_25[17] @[BinaryDesigns2.scala 192:46]
    wire_res[20][18] <= _WIRE_25[18] @[BinaryDesigns2.scala 192:46]
    wire_res[20][19] <= _WIRE_25[19] @[BinaryDesigns2.scala 192:46]
    wire_res[20][20] <= _WIRE_25[20] @[BinaryDesigns2.scala 192:46]
    wire_res[20][21] <= _WIRE_25[21] @[BinaryDesigns2.scala 192:46]
    node _T_462 = bits(result_reg_r[10], 0, 0) @[BinaryDesigns2.scala 192:62]
    node _T_463 = bits(result_reg_r[10], 1, 1) @[BinaryDesigns2.scala 192:62]
    node _T_464 = bits(result_reg_r[10], 2, 2) @[BinaryDesigns2.scala 192:62]
    node _T_465 = bits(result_reg_r[10], 3, 3) @[BinaryDesigns2.scala 192:62]
    node _T_466 = bits(result_reg_r[10], 4, 4) @[BinaryDesigns2.scala 192:62]
    node _T_467 = bits(result_reg_r[10], 5, 5) @[BinaryDesigns2.scala 192:62]
    node _T_468 = bits(result_reg_r[10], 6, 6) @[BinaryDesigns2.scala 192:62]
    node _T_469 = bits(result_reg_r[10], 7, 7) @[BinaryDesigns2.scala 192:62]
    node _T_470 = bits(result_reg_r[10], 8, 8) @[BinaryDesigns2.scala 192:62]
    node _T_471 = bits(result_reg_r[10], 9, 9) @[BinaryDesigns2.scala 192:62]
    node _T_472 = bits(result_reg_r[10], 10, 10) @[BinaryDesigns2.scala 192:62]
    node _T_473 = bits(result_reg_r[10], 11, 11) @[BinaryDesigns2.scala 192:62]
    node _T_474 = bits(result_reg_r[10], 12, 12) @[BinaryDesigns2.scala 192:62]
    node _T_475 = bits(result_reg_r[10], 13, 13) @[BinaryDesigns2.scala 192:62]
    node _T_476 = bits(result_reg_r[10], 14, 14) @[BinaryDesigns2.scala 192:62]
    node _T_477 = bits(result_reg_r[10], 15, 15) @[BinaryDesigns2.scala 192:62]
    node _T_478 = bits(result_reg_r[10], 16, 16) @[BinaryDesigns2.scala 192:62]
    node _T_479 = bits(result_reg_r[10], 17, 17) @[BinaryDesigns2.scala 192:62]
    node _T_480 = bits(result_reg_r[10], 18, 18) @[BinaryDesigns2.scala 192:62]
    node _T_481 = bits(result_reg_r[10], 19, 19) @[BinaryDesigns2.scala 192:62]
    node _T_482 = bits(result_reg_r[10], 20, 20) @[BinaryDesigns2.scala 192:62]
    node _T_483 = bits(result_reg_r[10], 21, 21) @[BinaryDesigns2.scala 192:62]
    wire _WIRE_26 : UInt<1>[22] @[BinaryDesigns2.scala 192:56]
    _WIRE_26[0] <= _T_462 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[1] <= _T_463 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[2] <= _T_464 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[3] <= _T_465 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[4] <= _T_466 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[5] <= _T_467 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[6] <= _T_468 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[7] <= _T_469 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[8] <= _T_470 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[9] <= _T_471 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[10] <= _T_472 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[11] <= _T_473 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[12] <= _T_474 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[13] <= _T_475 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[14] <= _T_476 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[15] <= _T_477 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[16] <= _T_478 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[17] <= _T_479 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[18] <= _T_480 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[19] <= _T_481 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[20] <= _T_482 @[BinaryDesigns2.scala 192:56]
    _WIRE_26[21] <= _T_483 @[BinaryDesigns2.scala 192:56]
    wire_res[21][0] <= _WIRE_26[0] @[BinaryDesigns2.scala 192:46]
    wire_res[21][1] <= _WIRE_26[1] @[BinaryDesigns2.scala 192:46]
    wire_res[21][2] <= _WIRE_26[2] @[BinaryDesigns2.scala 192:46]
    wire_res[21][3] <= _WIRE_26[3] @[BinaryDesigns2.scala 192:46]
    wire_res[21][4] <= _WIRE_26[4] @[BinaryDesigns2.scala 192:46]
    wire_res[21][5] <= _WIRE_26[5] @[BinaryDesigns2.scala 192:46]
    wire_res[21][6] <= _WIRE_26[6] @[BinaryDesigns2.scala 192:46]
    wire_res[21][7] <= _WIRE_26[7] @[BinaryDesigns2.scala 192:46]
    wire_res[21][8] <= _WIRE_26[8] @[BinaryDesigns2.scala 192:46]
    wire_res[21][9] <= _WIRE_26[9] @[BinaryDesigns2.scala 192:46]
    wire_res[21][10] <= _WIRE_26[10] @[BinaryDesigns2.scala 192:46]
    wire_res[21][11] <= _WIRE_26[11] @[BinaryDesigns2.scala 192:46]
    wire_res[21][12] <= _WIRE_26[12] @[BinaryDesigns2.scala 192:46]
    wire_res[21][13] <= _WIRE_26[13] @[BinaryDesigns2.scala 192:46]
    wire_res[21][14] <= _WIRE_26[14] @[BinaryDesigns2.scala 192:46]
    wire_res[21][15] <= _WIRE_26[15] @[BinaryDesigns2.scala 192:46]
    wire_res[21][16] <= _WIRE_26[16] @[BinaryDesigns2.scala 192:46]
    wire_res[21][17] <= _WIRE_26[17] @[BinaryDesigns2.scala 192:46]
    wire_res[21][18] <= _WIRE_26[18] @[BinaryDesigns2.scala 192:46]
    wire_res[21][19] <= _WIRE_26[19] @[BinaryDesigns2.scala 192:46]
    wire_res[21][20] <= _WIRE_26[20] @[BinaryDesigns2.scala 192:46]
    wire_res[21][21] <= _WIRE_26[21] @[BinaryDesigns2.scala 192:46]
    io.out_valid <= sr_out_valid_r[10] @[BinaryDesigns2.scala 194:18]
    io.out_s <= result_reg_r[10] @[BinaryDesigns2.scala 195:14]
    io.out_r <= a_aux_reg_r[10] @[BinaryDesigns2.scala 196:15]
    when io.in_ready : @[BinaryDesigns2.scala 197:22]
      when io.in_reset : @[BinaryDesigns2.scala 198:24]
        wire _WIRE_27 : UInt<22>[11] @[BinaryDesigns2.scala 199:42]
        _WIRE_27[0] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[1] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[2] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[3] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[4] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[5] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[6] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[7] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[8] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[9] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        _WIRE_27[10] <= UInt<22>("h0") @[BinaryDesigns2.scala 199:42]
        a_aux_reg_r[0] <= _WIRE_27[0] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[1] <= _WIRE_27[1] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[2] <= _WIRE_27[2] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[3] <= _WIRE_27[3] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[4] <= _WIRE_27[4] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[5] <= _WIRE_27[5] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[6] <= _WIRE_27[6] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[7] <= _WIRE_27[7] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[8] <= _WIRE_27[8] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[9] <= _WIRE_27[9] @[BinaryDesigns2.scala 199:21]
        a_aux_reg_r[10] <= _WIRE_27[10] @[BinaryDesigns2.scala 199:21]
        wire _WIRE_28 : UInt<22>[11] @[BinaryDesigns2.scala 200:42]
        _WIRE_28[0] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[1] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[2] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[3] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[4] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[5] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[6] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[7] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[8] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[9] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        _WIRE_28[10] <= UInt<22>("h0") @[BinaryDesigns2.scala 200:42]
        b_aux_reg_r[0] <= _WIRE_28[0] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[1] <= _WIRE_28[1] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[2] <= _WIRE_28[2] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[3] <= _WIRE_28[3] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[4] <= _WIRE_28[4] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[5] <= _WIRE_28[5] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[6] <= _WIRE_28[6] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[7] <= _WIRE_28[7] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[8] <= _WIRE_28[8] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[9] <= _WIRE_28[9] @[BinaryDesigns2.scala 200:21]
        b_aux_reg_r[10] <= _WIRE_28[10] @[BinaryDesigns2.scala 200:21]
        wire _WIRE_29 : UInt<22>[11] @[BinaryDesigns2.scala 201:43]
        _WIRE_29[0] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[1] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[2] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[3] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[4] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[5] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[6] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[7] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[8] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[9] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        _WIRE_29[10] <= UInt<22>("h0") @[BinaryDesigns2.scala 201:43]
        result_reg_r[0] <= _WIRE_29[0] @[BinaryDesigns2.scala 201:22]
        result_reg_r[1] <= _WIRE_29[1] @[BinaryDesigns2.scala 201:22]
        result_reg_r[2] <= _WIRE_29[2] @[BinaryDesigns2.scala 201:22]
        result_reg_r[3] <= _WIRE_29[3] @[BinaryDesigns2.scala 201:22]
        result_reg_r[4] <= _WIRE_29[4] @[BinaryDesigns2.scala 201:22]
        result_reg_r[5] <= _WIRE_29[5] @[BinaryDesigns2.scala 201:22]
        result_reg_r[6] <= _WIRE_29[6] @[BinaryDesigns2.scala 201:22]
        result_reg_r[7] <= _WIRE_29[7] @[BinaryDesigns2.scala 201:22]
        result_reg_r[8] <= _WIRE_29[8] @[BinaryDesigns2.scala 201:22]
        result_reg_r[9] <= _WIRE_29[9] @[BinaryDesigns2.scala 201:22]
        result_reg_r[10] <= _WIRE_29[10] @[BinaryDesigns2.scala 201:22]
        wire _WIRE_30 : UInt<1>[11] @[BinaryDesigns2.scala 202:45]
        _WIRE_30[0] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[1] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[2] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[3] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[4] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[5] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[6] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[7] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[8] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[9] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        _WIRE_30[10] <= UInt<1>("h0") @[BinaryDesigns2.scala 202:45]
        sr_out_valid_r[0] <= _WIRE_30[0] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[1] <= _WIRE_30[1] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[2] <= _WIRE_30[2] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[3] <= _WIRE_30[3] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[4] <= _WIRE_30[4] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[5] <= _WIRE_30[5] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[6] <= _WIRE_30[6] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[7] <= _WIRE_30[7] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[8] <= _WIRE_30[8] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[9] <= _WIRE_30[9] @[BinaryDesigns2.scala 202:24]
        sr_out_valid_r[10] <= _WIRE_30[10] @[BinaryDesigns2.scala 202:24]
      else :
        sr_out_valid_w[0] <= io.in_valid @[BinaryDesigns2.scala 204:25]
        node _T_484 = shl(io.in_b, 21) @[BinaryDesigns2.scala 210:38]
        node _T_485 = geq(io.in_a, _T_484) @[BinaryDesigns2.scala 210:26]
        when _T_485 : @[BinaryDesigns2.scala 210:63]
          node _a_aux_reg_w_0_T = shl(io.in_b, 21) @[BinaryDesigns2.scala 211:50]
          node _a_aux_reg_w_0_T_1 = sub(io.in_a, _a_aux_reg_w_0_T) @[BinaryDesigns2.scala 211:39]
          node _a_aux_reg_w_0_T_2 = tail(_a_aux_reg_w_0_T_1, 1) @[BinaryDesigns2.scala 211:39]
          a_aux_reg_w[0] <= _a_aux_reg_w_0_T_2 @[BinaryDesigns2.scala 211:28]
          init_res[21] <= UInt<1>("h1") @[BinaryDesigns2.scala 212:36]
        else :
          a_aux_reg_w[0] <= io.in_a @[BinaryDesigns2.scala 214:28]
          init_res[21] <= UInt<1>("h0") @[BinaryDesigns2.scala 215:36]
        node result_reg_w_0_lo_lo_lo = cat(init_res[1], init_res[0]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_lo_lo_hi_hi = cat(init_res[4], init_res[3]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_lo_lo_hi = cat(result_reg_w_0_lo_lo_hi_hi, init_res[2]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_lo_lo = cat(result_reg_w_0_lo_lo_hi, result_reg_w_0_lo_lo_lo) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_lo_hi_lo_hi = cat(init_res[7], init_res[6]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_lo_hi_lo = cat(result_reg_w_0_lo_hi_lo_hi, init_res[5]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_lo_hi_hi_hi = cat(init_res[10], init_res[9]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_lo_hi_hi = cat(result_reg_w_0_lo_hi_hi_hi, init_res[8]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_lo_hi = cat(result_reg_w_0_lo_hi_hi, result_reg_w_0_lo_hi_lo) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_lo = cat(result_reg_w_0_lo_hi, result_reg_w_0_lo_lo) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi_lo_lo = cat(init_res[12], init_res[11]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi_lo_hi_hi = cat(init_res[15], init_res[14]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi_lo_hi = cat(result_reg_w_0_hi_lo_hi_hi, init_res[13]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi_lo = cat(result_reg_w_0_hi_lo_hi, result_reg_w_0_hi_lo_lo) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi_hi_lo_hi = cat(init_res[18], init_res[17]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi_hi_lo = cat(result_reg_w_0_hi_hi_lo_hi, init_res[16]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi_hi_hi_hi = cat(init_res[21], init_res[20]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi_hi_hi = cat(result_reg_w_0_hi_hi_hi_hi, init_res[19]) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi_hi = cat(result_reg_w_0_hi_hi_hi, result_reg_w_0_hi_hi_lo) @[BinaryDesigns2.scala 217:39]
        node result_reg_w_0_hi = cat(result_reg_w_0_hi_hi, result_reg_w_0_hi_lo) @[BinaryDesigns2.scala 217:39]
        node _result_reg_w_0_T = cat(result_reg_w_0_hi, result_reg_w_0_lo) @[BinaryDesigns2.scala 217:39]
        result_reg_w[0] <= _result_reg_w_0_T @[BinaryDesigns2.scala 217:27]
        b_aux_reg_w[0] <= io.in_b @[BinaryDesigns2.scala 218:26]
        sr_out_valid_r[0] <= sr_out_valid_w[0] @[BinaryDesigns2.scala 223:29]
        node _T_486 = shl(b_aux_reg_w[0], 20) @[BinaryDesigns2.scala 224:56]
        node _T_487 = geq(a_aux_reg_w[0], _T_486) @[BinaryDesigns2.scala 224:35]
        when _T_487 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_0_T = shl(b_aux_reg_w[0], 20) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_0_T_1 = sub(a_aux_reg_w[0], _a_aux_reg_r_0_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_0_T_2 = tail(_a_aux_reg_r_0_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[0] <= _a_aux_reg_r_0_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[0][20] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[0] <= a_aux_reg_w[0] @[BinaryDesigns2.scala 228:28]
          wire_res[0][20] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_0_lo_lo_lo = cat(wire_res[0][1], wire_res[0][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_lo_lo_hi_hi = cat(wire_res[0][4], wire_res[0][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_lo_lo_hi = cat(result_reg_r_0_lo_lo_hi_hi, wire_res[0][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_lo_lo = cat(result_reg_r_0_lo_lo_hi, result_reg_r_0_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_lo_hi_lo_hi = cat(wire_res[0][7], wire_res[0][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_lo_hi_lo = cat(result_reg_r_0_lo_hi_lo_hi, wire_res[0][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_lo_hi_hi_hi = cat(wire_res[0][10], wire_res[0][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_lo_hi_hi = cat(result_reg_r_0_lo_hi_hi_hi, wire_res[0][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_lo_hi = cat(result_reg_r_0_lo_hi_hi, result_reg_r_0_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_lo = cat(result_reg_r_0_lo_hi, result_reg_r_0_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi_lo_lo = cat(wire_res[0][12], wire_res[0][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi_lo_hi_hi = cat(wire_res[0][15], wire_res[0][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi_lo_hi = cat(result_reg_r_0_hi_lo_hi_hi, wire_res[0][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi_lo = cat(result_reg_r_0_hi_lo_hi, result_reg_r_0_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi_hi_lo_hi = cat(wire_res[0][18], wire_res[0][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi_hi_lo = cat(result_reg_r_0_hi_hi_lo_hi, wire_res[0][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi_hi_hi_hi = cat(wire_res[0][21], wire_res[0][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi_hi_hi = cat(result_reg_r_0_hi_hi_hi_hi, wire_res[0][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi_hi = cat(result_reg_r_0_hi_hi_hi, result_reg_r_0_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_0_hi = cat(result_reg_r_0_hi_hi, result_reg_r_0_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_0_T = cat(result_reg_r_0_hi, result_reg_r_0_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[0] <= _result_reg_r_0_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[0] <= b_aux_reg_w[0] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[1] <= sr_out_valid_r[0] @[BinaryDesigns2.scala 223:29]
        node _T_488 = shl(b_aux_reg_r[0], 19) @[BinaryDesigns2.scala 224:56]
        node _T_489 = geq(a_aux_reg_r[0], _T_488) @[BinaryDesigns2.scala 224:35]
        when _T_489 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_1_T = shl(b_aux_reg_r[0], 19) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_1_T_1 = sub(a_aux_reg_r[0], _a_aux_reg_w_1_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_1_T_2 = tail(_a_aux_reg_w_1_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[1] <= _a_aux_reg_w_1_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[1][19] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[1] <= a_aux_reg_r[0] @[BinaryDesigns2.scala 228:28]
          wire_res[1][19] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_1_lo_lo_lo = cat(wire_res[1][1], wire_res[1][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_lo_lo_hi_hi = cat(wire_res[1][4], wire_res[1][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_lo_lo_hi = cat(result_reg_w_1_lo_lo_hi_hi, wire_res[1][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_lo_lo = cat(result_reg_w_1_lo_lo_hi, result_reg_w_1_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_lo_hi_lo_hi = cat(wire_res[1][7], wire_res[1][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_lo_hi_lo = cat(result_reg_w_1_lo_hi_lo_hi, wire_res[1][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_lo_hi_hi_hi = cat(wire_res[1][10], wire_res[1][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_lo_hi_hi = cat(result_reg_w_1_lo_hi_hi_hi, wire_res[1][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_lo_hi = cat(result_reg_w_1_lo_hi_hi, result_reg_w_1_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_lo = cat(result_reg_w_1_lo_hi, result_reg_w_1_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi_lo_lo = cat(wire_res[1][12], wire_res[1][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi_lo_hi_hi = cat(wire_res[1][15], wire_res[1][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi_lo_hi = cat(result_reg_w_1_hi_lo_hi_hi, wire_res[1][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi_lo = cat(result_reg_w_1_hi_lo_hi, result_reg_w_1_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi_hi_lo_hi = cat(wire_res[1][18], wire_res[1][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi_hi_lo = cat(result_reg_w_1_hi_hi_lo_hi, wire_res[1][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi_hi_hi_hi = cat(wire_res[1][21], wire_res[1][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi_hi_hi = cat(result_reg_w_1_hi_hi_hi_hi, wire_res[1][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi_hi = cat(result_reg_w_1_hi_hi_hi, result_reg_w_1_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_1_hi = cat(result_reg_w_1_hi_hi, result_reg_w_1_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_1_T = cat(result_reg_w_1_hi, result_reg_w_1_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[1] <= _result_reg_w_1_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[1] <= b_aux_reg_r[0] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[1] <= sr_out_valid_w[1] @[BinaryDesigns2.scala 223:29]
        node _T_490 = shl(b_aux_reg_w[1], 18) @[BinaryDesigns2.scala 224:56]
        node _T_491 = geq(a_aux_reg_w[1], _T_490) @[BinaryDesigns2.scala 224:35]
        when _T_491 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_1_T = shl(b_aux_reg_w[1], 18) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_1_T_1 = sub(a_aux_reg_w[1], _a_aux_reg_r_1_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_1_T_2 = tail(_a_aux_reg_r_1_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[1] <= _a_aux_reg_r_1_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[2][18] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[1] <= a_aux_reg_w[1] @[BinaryDesigns2.scala 228:28]
          wire_res[2][18] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_1_lo_lo_lo = cat(wire_res[2][1], wire_res[2][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_lo_lo_hi_hi = cat(wire_res[2][4], wire_res[2][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_lo_lo_hi = cat(result_reg_r_1_lo_lo_hi_hi, wire_res[2][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_lo_lo = cat(result_reg_r_1_lo_lo_hi, result_reg_r_1_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_lo_hi_lo_hi = cat(wire_res[2][7], wire_res[2][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_lo_hi_lo = cat(result_reg_r_1_lo_hi_lo_hi, wire_res[2][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_lo_hi_hi_hi = cat(wire_res[2][10], wire_res[2][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_lo_hi_hi = cat(result_reg_r_1_lo_hi_hi_hi, wire_res[2][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_lo_hi = cat(result_reg_r_1_lo_hi_hi, result_reg_r_1_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_lo = cat(result_reg_r_1_lo_hi, result_reg_r_1_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi_lo_lo = cat(wire_res[2][12], wire_res[2][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi_lo_hi_hi = cat(wire_res[2][15], wire_res[2][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi_lo_hi = cat(result_reg_r_1_hi_lo_hi_hi, wire_res[2][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi_lo = cat(result_reg_r_1_hi_lo_hi, result_reg_r_1_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi_hi_lo_hi = cat(wire_res[2][18], wire_res[2][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi_hi_lo = cat(result_reg_r_1_hi_hi_lo_hi, wire_res[2][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi_hi_hi_hi = cat(wire_res[2][21], wire_res[2][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi_hi_hi = cat(result_reg_r_1_hi_hi_hi_hi, wire_res[2][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi_hi = cat(result_reg_r_1_hi_hi_hi, result_reg_r_1_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_1_hi = cat(result_reg_r_1_hi_hi, result_reg_r_1_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_1_T = cat(result_reg_r_1_hi, result_reg_r_1_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[1] <= _result_reg_r_1_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[1] <= b_aux_reg_w[1] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[2] <= sr_out_valid_r[1] @[BinaryDesigns2.scala 223:29]
        node _T_492 = shl(b_aux_reg_r[1], 17) @[BinaryDesigns2.scala 224:56]
        node _T_493 = geq(a_aux_reg_r[1], _T_492) @[BinaryDesigns2.scala 224:35]
        when _T_493 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_2_T = shl(b_aux_reg_r[1], 17) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_2_T_1 = sub(a_aux_reg_r[1], _a_aux_reg_w_2_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_2_T_2 = tail(_a_aux_reg_w_2_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[2] <= _a_aux_reg_w_2_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[3][17] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[2] <= a_aux_reg_r[1] @[BinaryDesigns2.scala 228:28]
          wire_res[3][17] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_2_lo_lo_lo = cat(wire_res[3][1], wire_res[3][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_lo_lo_hi_hi = cat(wire_res[3][4], wire_res[3][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_lo_lo_hi = cat(result_reg_w_2_lo_lo_hi_hi, wire_res[3][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_lo_lo = cat(result_reg_w_2_lo_lo_hi, result_reg_w_2_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_lo_hi_lo_hi = cat(wire_res[3][7], wire_res[3][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_lo_hi_lo = cat(result_reg_w_2_lo_hi_lo_hi, wire_res[3][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_lo_hi_hi_hi = cat(wire_res[3][10], wire_res[3][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_lo_hi_hi = cat(result_reg_w_2_lo_hi_hi_hi, wire_res[3][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_lo_hi = cat(result_reg_w_2_lo_hi_hi, result_reg_w_2_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_lo = cat(result_reg_w_2_lo_hi, result_reg_w_2_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi_lo_lo = cat(wire_res[3][12], wire_res[3][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi_lo_hi_hi = cat(wire_res[3][15], wire_res[3][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi_lo_hi = cat(result_reg_w_2_hi_lo_hi_hi, wire_res[3][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi_lo = cat(result_reg_w_2_hi_lo_hi, result_reg_w_2_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi_hi_lo_hi = cat(wire_res[3][18], wire_res[3][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi_hi_lo = cat(result_reg_w_2_hi_hi_lo_hi, wire_res[3][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi_hi_hi_hi = cat(wire_res[3][21], wire_res[3][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi_hi_hi = cat(result_reg_w_2_hi_hi_hi_hi, wire_res[3][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi_hi = cat(result_reg_w_2_hi_hi_hi, result_reg_w_2_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_2_hi = cat(result_reg_w_2_hi_hi, result_reg_w_2_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_2_T = cat(result_reg_w_2_hi, result_reg_w_2_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[2] <= _result_reg_w_2_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[2] <= b_aux_reg_r[1] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[2] <= sr_out_valid_w[2] @[BinaryDesigns2.scala 223:29]
        node _T_494 = shl(b_aux_reg_w[2], 16) @[BinaryDesigns2.scala 224:56]
        node _T_495 = geq(a_aux_reg_w[2], _T_494) @[BinaryDesigns2.scala 224:35]
        when _T_495 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_2_T = shl(b_aux_reg_w[2], 16) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_2_T_1 = sub(a_aux_reg_w[2], _a_aux_reg_r_2_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_2_T_2 = tail(_a_aux_reg_r_2_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[2] <= _a_aux_reg_r_2_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[4][16] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[2] <= a_aux_reg_w[2] @[BinaryDesigns2.scala 228:28]
          wire_res[4][16] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_2_lo_lo_lo = cat(wire_res[4][1], wire_res[4][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_lo_lo_hi_hi = cat(wire_res[4][4], wire_res[4][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_lo_lo_hi = cat(result_reg_r_2_lo_lo_hi_hi, wire_res[4][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_lo_lo = cat(result_reg_r_2_lo_lo_hi, result_reg_r_2_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_lo_hi_lo_hi = cat(wire_res[4][7], wire_res[4][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_lo_hi_lo = cat(result_reg_r_2_lo_hi_lo_hi, wire_res[4][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_lo_hi_hi_hi = cat(wire_res[4][10], wire_res[4][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_lo_hi_hi = cat(result_reg_r_2_lo_hi_hi_hi, wire_res[4][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_lo_hi = cat(result_reg_r_2_lo_hi_hi, result_reg_r_2_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_lo = cat(result_reg_r_2_lo_hi, result_reg_r_2_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi_lo_lo = cat(wire_res[4][12], wire_res[4][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi_lo_hi_hi = cat(wire_res[4][15], wire_res[4][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi_lo_hi = cat(result_reg_r_2_hi_lo_hi_hi, wire_res[4][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi_lo = cat(result_reg_r_2_hi_lo_hi, result_reg_r_2_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi_hi_lo_hi = cat(wire_res[4][18], wire_res[4][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi_hi_lo = cat(result_reg_r_2_hi_hi_lo_hi, wire_res[4][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi_hi_hi_hi = cat(wire_res[4][21], wire_res[4][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi_hi_hi = cat(result_reg_r_2_hi_hi_hi_hi, wire_res[4][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi_hi = cat(result_reg_r_2_hi_hi_hi, result_reg_r_2_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_2_hi = cat(result_reg_r_2_hi_hi, result_reg_r_2_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_2_T = cat(result_reg_r_2_hi, result_reg_r_2_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[2] <= _result_reg_r_2_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[2] <= b_aux_reg_w[2] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[3] <= sr_out_valid_r[2] @[BinaryDesigns2.scala 223:29]
        node _T_496 = shl(b_aux_reg_r[2], 15) @[BinaryDesigns2.scala 224:56]
        node _T_497 = geq(a_aux_reg_r[2], _T_496) @[BinaryDesigns2.scala 224:35]
        when _T_497 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_3_T = shl(b_aux_reg_r[2], 15) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_3_T_1 = sub(a_aux_reg_r[2], _a_aux_reg_w_3_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_3_T_2 = tail(_a_aux_reg_w_3_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[3] <= _a_aux_reg_w_3_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[5][15] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[3] <= a_aux_reg_r[2] @[BinaryDesigns2.scala 228:28]
          wire_res[5][15] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_3_lo_lo_lo = cat(wire_res[5][1], wire_res[5][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_lo_lo_hi_hi = cat(wire_res[5][4], wire_res[5][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_lo_lo_hi = cat(result_reg_w_3_lo_lo_hi_hi, wire_res[5][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_lo_lo = cat(result_reg_w_3_lo_lo_hi, result_reg_w_3_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_lo_hi_lo_hi = cat(wire_res[5][7], wire_res[5][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_lo_hi_lo = cat(result_reg_w_3_lo_hi_lo_hi, wire_res[5][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_lo_hi_hi_hi = cat(wire_res[5][10], wire_res[5][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_lo_hi_hi = cat(result_reg_w_3_lo_hi_hi_hi, wire_res[5][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_lo_hi = cat(result_reg_w_3_lo_hi_hi, result_reg_w_3_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_lo = cat(result_reg_w_3_lo_hi, result_reg_w_3_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi_lo_lo = cat(wire_res[5][12], wire_res[5][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi_lo_hi_hi = cat(wire_res[5][15], wire_res[5][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi_lo_hi = cat(result_reg_w_3_hi_lo_hi_hi, wire_res[5][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi_lo = cat(result_reg_w_3_hi_lo_hi, result_reg_w_3_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi_hi_lo_hi = cat(wire_res[5][18], wire_res[5][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi_hi_lo = cat(result_reg_w_3_hi_hi_lo_hi, wire_res[5][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi_hi_hi_hi = cat(wire_res[5][21], wire_res[5][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi_hi_hi = cat(result_reg_w_3_hi_hi_hi_hi, wire_res[5][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi_hi = cat(result_reg_w_3_hi_hi_hi, result_reg_w_3_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_3_hi = cat(result_reg_w_3_hi_hi, result_reg_w_3_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_3_T = cat(result_reg_w_3_hi, result_reg_w_3_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[3] <= _result_reg_w_3_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[3] <= b_aux_reg_r[2] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[3] <= sr_out_valid_w[3] @[BinaryDesigns2.scala 223:29]
        node _T_498 = shl(b_aux_reg_w[3], 14) @[BinaryDesigns2.scala 224:56]
        node _T_499 = geq(a_aux_reg_w[3], _T_498) @[BinaryDesigns2.scala 224:35]
        when _T_499 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_3_T = shl(b_aux_reg_w[3], 14) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_3_T_1 = sub(a_aux_reg_w[3], _a_aux_reg_r_3_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_3_T_2 = tail(_a_aux_reg_r_3_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[3] <= _a_aux_reg_r_3_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[6][14] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[3] <= a_aux_reg_w[3] @[BinaryDesigns2.scala 228:28]
          wire_res[6][14] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_3_lo_lo_lo = cat(wire_res[6][1], wire_res[6][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_lo_lo_hi_hi = cat(wire_res[6][4], wire_res[6][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_lo_lo_hi = cat(result_reg_r_3_lo_lo_hi_hi, wire_res[6][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_lo_lo = cat(result_reg_r_3_lo_lo_hi, result_reg_r_3_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_lo_hi_lo_hi = cat(wire_res[6][7], wire_res[6][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_lo_hi_lo = cat(result_reg_r_3_lo_hi_lo_hi, wire_res[6][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_lo_hi_hi_hi = cat(wire_res[6][10], wire_res[6][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_lo_hi_hi = cat(result_reg_r_3_lo_hi_hi_hi, wire_res[6][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_lo_hi = cat(result_reg_r_3_lo_hi_hi, result_reg_r_3_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_lo = cat(result_reg_r_3_lo_hi, result_reg_r_3_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi_lo_lo = cat(wire_res[6][12], wire_res[6][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi_lo_hi_hi = cat(wire_res[6][15], wire_res[6][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi_lo_hi = cat(result_reg_r_3_hi_lo_hi_hi, wire_res[6][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi_lo = cat(result_reg_r_3_hi_lo_hi, result_reg_r_3_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi_hi_lo_hi = cat(wire_res[6][18], wire_res[6][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi_hi_lo = cat(result_reg_r_3_hi_hi_lo_hi, wire_res[6][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi_hi_hi_hi = cat(wire_res[6][21], wire_res[6][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi_hi_hi = cat(result_reg_r_3_hi_hi_hi_hi, wire_res[6][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi_hi = cat(result_reg_r_3_hi_hi_hi, result_reg_r_3_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_3_hi = cat(result_reg_r_3_hi_hi, result_reg_r_3_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_3_T = cat(result_reg_r_3_hi, result_reg_r_3_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[3] <= _result_reg_r_3_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[3] <= b_aux_reg_w[3] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[4] <= sr_out_valid_r[3] @[BinaryDesigns2.scala 223:29]
        node _T_500 = shl(b_aux_reg_r[3], 13) @[BinaryDesigns2.scala 224:56]
        node _T_501 = geq(a_aux_reg_r[3], _T_500) @[BinaryDesigns2.scala 224:35]
        when _T_501 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_4_T = shl(b_aux_reg_r[3], 13) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_4_T_1 = sub(a_aux_reg_r[3], _a_aux_reg_w_4_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_4_T_2 = tail(_a_aux_reg_w_4_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[4] <= _a_aux_reg_w_4_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[7][13] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[4] <= a_aux_reg_r[3] @[BinaryDesigns2.scala 228:28]
          wire_res[7][13] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_4_lo_lo_lo = cat(wire_res[7][1], wire_res[7][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_lo_lo_hi_hi = cat(wire_res[7][4], wire_res[7][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_lo_lo_hi = cat(result_reg_w_4_lo_lo_hi_hi, wire_res[7][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_lo_lo = cat(result_reg_w_4_lo_lo_hi, result_reg_w_4_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_lo_hi_lo_hi = cat(wire_res[7][7], wire_res[7][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_lo_hi_lo = cat(result_reg_w_4_lo_hi_lo_hi, wire_res[7][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_lo_hi_hi_hi = cat(wire_res[7][10], wire_res[7][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_lo_hi_hi = cat(result_reg_w_4_lo_hi_hi_hi, wire_res[7][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_lo_hi = cat(result_reg_w_4_lo_hi_hi, result_reg_w_4_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_lo = cat(result_reg_w_4_lo_hi, result_reg_w_4_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi_lo_lo = cat(wire_res[7][12], wire_res[7][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi_lo_hi_hi = cat(wire_res[7][15], wire_res[7][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi_lo_hi = cat(result_reg_w_4_hi_lo_hi_hi, wire_res[7][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi_lo = cat(result_reg_w_4_hi_lo_hi, result_reg_w_4_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi_hi_lo_hi = cat(wire_res[7][18], wire_res[7][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi_hi_lo = cat(result_reg_w_4_hi_hi_lo_hi, wire_res[7][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi_hi_hi_hi = cat(wire_res[7][21], wire_res[7][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi_hi_hi = cat(result_reg_w_4_hi_hi_hi_hi, wire_res[7][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi_hi = cat(result_reg_w_4_hi_hi_hi, result_reg_w_4_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_4_hi = cat(result_reg_w_4_hi_hi, result_reg_w_4_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_4_T = cat(result_reg_w_4_hi, result_reg_w_4_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[4] <= _result_reg_w_4_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[4] <= b_aux_reg_r[3] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[4] <= sr_out_valid_w[4] @[BinaryDesigns2.scala 223:29]
        node _T_502 = shl(b_aux_reg_w[4], 12) @[BinaryDesigns2.scala 224:56]
        node _T_503 = geq(a_aux_reg_w[4], _T_502) @[BinaryDesigns2.scala 224:35]
        when _T_503 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_4_T = shl(b_aux_reg_w[4], 12) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_4_T_1 = sub(a_aux_reg_w[4], _a_aux_reg_r_4_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_4_T_2 = tail(_a_aux_reg_r_4_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[4] <= _a_aux_reg_r_4_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[8][12] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[4] <= a_aux_reg_w[4] @[BinaryDesigns2.scala 228:28]
          wire_res[8][12] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_4_lo_lo_lo = cat(wire_res[8][1], wire_res[8][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_lo_lo_hi_hi = cat(wire_res[8][4], wire_res[8][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_lo_lo_hi = cat(result_reg_r_4_lo_lo_hi_hi, wire_res[8][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_lo_lo = cat(result_reg_r_4_lo_lo_hi, result_reg_r_4_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_lo_hi_lo_hi = cat(wire_res[8][7], wire_res[8][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_lo_hi_lo = cat(result_reg_r_4_lo_hi_lo_hi, wire_res[8][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_lo_hi_hi_hi = cat(wire_res[8][10], wire_res[8][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_lo_hi_hi = cat(result_reg_r_4_lo_hi_hi_hi, wire_res[8][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_lo_hi = cat(result_reg_r_4_lo_hi_hi, result_reg_r_4_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_lo = cat(result_reg_r_4_lo_hi, result_reg_r_4_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi_lo_lo = cat(wire_res[8][12], wire_res[8][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi_lo_hi_hi = cat(wire_res[8][15], wire_res[8][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi_lo_hi = cat(result_reg_r_4_hi_lo_hi_hi, wire_res[8][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi_lo = cat(result_reg_r_4_hi_lo_hi, result_reg_r_4_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi_hi_lo_hi = cat(wire_res[8][18], wire_res[8][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi_hi_lo = cat(result_reg_r_4_hi_hi_lo_hi, wire_res[8][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi_hi_hi_hi = cat(wire_res[8][21], wire_res[8][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi_hi_hi = cat(result_reg_r_4_hi_hi_hi_hi, wire_res[8][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi_hi = cat(result_reg_r_4_hi_hi_hi, result_reg_r_4_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_4_hi = cat(result_reg_r_4_hi_hi, result_reg_r_4_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_4_T = cat(result_reg_r_4_hi, result_reg_r_4_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[4] <= _result_reg_r_4_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[4] <= b_aux_reg_w[4] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[5] <= sr_out_valid_r[4] @[BinaryDesigns2.scala 223:29]
        node _T_504 = shl(b_aux_reg_r[4], 11) @[BinaryDesigns2.scala 224:56]
        node _T_505 = geq(a_aux_reg_r[4], _T_504) @[BinaryDesigns2.scala 224:35]
        when _T_505 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_5_T = shl(b_aux_reg_r[4], 11) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_5_T_1 = sub(a_aux_reg_r[4], _a_aux_reg_w_5_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_5_T_2 = tail(_a_aux_reg_w_5_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[5] <= _a_aux_reg_w_5_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[9][11] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[5] <= a_aux_reg_r[4] @[BinaryDesigns2.scala 228:28]
          wire_res[9][11] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_5_lo_lo_lo = cat(wire_res[9][1], wire_res[9][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_lo_lo_hi_hi = cat(wire_res[9][4], wire_res[9][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_lo_lo_hi = cat(result_reg_w_5_lo_lo_hi_hi, wire_res[9][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_lo_lo = cat(result_reg_w_5_lo_lo_hi, result_reg_w_5_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_lo_hi_lo_hi = cat(wire_res[9][7], wire_res[9][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_lo_hi_lo = cat(result_reg_w_5_lo_hi_lo_hi, wire_res[9][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_lo_hi_hi_hi = cat(wire_res[9][10], wire_res[9][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_lo_hi_hi = cat(result_reg_w_5_lo_hi_hi_hi, wire_res[9][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_lo_hi = cat(result_reg_w_5_lo_hi_hi, result_reg_w_5_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_lo = cat(result_reg_w_5_lo_hi, result_reg_w_5_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi_lo_lo = cat(wire_res[9][12], wire_res[9][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi_lo_hi_hi = cat(wire_res[9][15], wire_res[9][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi_lo_hi = cat(result_reg_w_5_hi_lo_hi_hi, wire_res[9][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi_lo = cat(result_reg_w_5_hi_lo_hi, result_reg_w_5_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi_hi_lo_hi = cat(wire_res[9][18], wire_res[9][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi_hi_lo = cat(result_reg_w_5_hi_hi_lo_hi, wire_res[9][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi_hi_hi_hi = cat(wire_res[9][21], wire_res[9][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi_hi_hi = cat(result_reg_w_5_hi_hi_hi_hi, wire_res[9][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi_hi = cat(result_reg_w_5_hi_hi_hi, result_reg_w_5_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_5_hi = cat(result_reg_w_5_hi_hi, result_reg_w_5_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_5_T = cat(result_reg_w_5_hi, result_reg_w_5_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[5] <= _result_reg_w_5_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[5] <= b_aux_reg_r[4] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[5] <= sr_out_valid_w[5] @[BinaryDesigns2.scala 223:29]
        node _T_506 = shl(b_aux_reg_w[5], 10) @[BinaryDesigns2.scala 224:56]
        node _T_507 = geq(a_aux_reg_w[5], _T_506) @[BinaryDesigns2.scala 224:35]
        when _T_507 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_5_T = shl(b_aux_reg_w[5], 10) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_5_T_1 = sub(a_aux_reg_w[5], _a_aux_reg_r_5_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_5_T_2 = tail(_a_aux_reg_r_5_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[5] <= _a_aux_reg_r_5_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[10][10] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[5] <= a_aux_reg_w[5] @[BinaryDesigns2.scala 228:28]
          wire_res[10][10] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_5_lo_lo_lo = cat(wire_res[10][1], wire_res[10][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_lo_lo_hi_hi = cat(wire_res[10][4], wire_res[10][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_lo_lo_hi = cat(result_reg_r_5_lo_lo_hi_hi, wire_res[10][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_lo_lo = cat(result_reg_r_5_lo_lo_hi, result_reg_r_5_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_lo_hi_lo_hi = cat(wire_res[10][7], wire_res[10][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_lo_hi_lo = cat(result_reg_r_5_lo_hi_lo_hi, wire_res[10][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_lo_hi_hi_hi = cat(wire_res[10][10], wire_res[10][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_lo_hi_hi = cat(result_reg_r_5_lo_hi_hi_hi, wire_res[10][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_lo_hi = cat(result_reg_r_5_lo_hi_hi, result_reg_r_5_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_lo = cat(result_reg_r_5_lo_hi, result_reg_r_5_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi_lo_lo = cat(wire_res[10][12], wire_res[10][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi_lo_hi_hi = cat(wire_res[10][15], wire_res[10][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi_lo_hi = cat(result_reg_r_5_hi_lo_hi_hi, wire_res[10][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi_lo = cat(result_reg_r_5_hi_lo_hi, result_reg_r_5_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi_hi_lo_hi = cat(wire_res[10][18], wire_res[10][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi_hi_lo = cat(result_reg_r_5_hi_hi_lo_hi, wire_res[10][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi_hi_hi_hi = cat(wire_res[10][21], wire_res[10][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi_hi_hi = cat(result_reg_r_5_hi_hi_hi_hi, wire_res[10][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi_hi = cat(result_reg_r_5_hi_hi_hi, result_reg_r_5_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_5_hi = cat(result_reg_r_5_hi_hi, result_reg_r_5_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_5_T = cat(result_reg_r_5_hi, result_reg_r_5_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[5] <= _result_reg_r_5_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[5] <= b_aux_reg_w[5] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[6] <= sr_out_valid_r[5] @[BinaryDesigns2.scala 223:29]
        node _T_508 = shl(b_aux_reg_r[5], 9) @[BinaryDesigns2.scala 224:56]
        node _T_509 = geq(a_aux_reg_r[5], _T_508) @[BinaryDesigns2.scala 224:35]
        when _T_509 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_6_T = shl(b_aux_reg_r[5], 9) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_6_T_1 = sub(a_aux_reg_r[5], _a_aux_reg_w_6_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_6_T_2 = tail(_a_aux_reg_w_6_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[6] <= _a_aux_reg_w_6_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[11][9] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[6] <= a_aux_reg_r[5] @[BinaryDesigns2.scala 228:28]
          wire_res[11][9] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_6_lo_lo_lo = cat(wire_res[11][1], wire_res[11][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_lo_lo_hi_hi = cat(wire_res[11][4], wire_res[11][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_lo_lo_hi = cat(result_reg_w_6_lo_lo_hi_hi, wire_res[11][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_lo_lo = cat(result_reg_w_6_lo_lo_hi, result_reg_w_6_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_lo_hi_lo_hi = cat(wire_res[11][7], wire_res[11][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_lo_hi_lo = cat(result_reg_w_6_lo_hi_lo_hi, wire_res[11][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_lo_hi_hi_hi = cat(wire_res[11][10], wire_res[11][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_lo_hi_hi = cat(result_reg_w_6_lo_hi_hi_hi, wire_res[11][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_lo_hi = cat(result_reg_w_6_lo_hi_hi, result_reg_w_6_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_lo = cat(result_reg_w_6_lo_hi, result_reg_w_6_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi_lo_lo = cat(wire_res[11][12], wire_res[11][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi_lo_hi_hi = cat(wire_res[11][15], wire_res[11][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi_lo_hi = cat(result_reg_w_6_hi_lo_hi_hi, wire_res[11][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi_lo = cat(result_reg_w_6_hi_lo_hi, result_reg_w_6_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi_hi_lo_hi = cat(wire_res[11][18], wire_res[11][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi_hi_lo = cat(result_reg_w_6_hi_hi_lo_hi, wire_res[11][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi_hi_hi_hi = cat(wire_res[11][21], wire_res[11][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi_hi_hi = cat(result_reg_w_6_hi_hi_hi_hi, wire_res[11][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi_hi = cat(result_reg_w_6_hi_hi_hi, result_reg_w_6_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_6_hi = cat(result_reg_w_6_hi_hi, result_reg_w_6_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_6_T = cat(result_reg_w_6_hi, result_reg_w_6_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[6] <= _result_reg_w_6_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[6] <= b_aux_reg_r[5] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[6] <= sr_out_valid_w[6] @[BinaryDesigns2.scala 223:29]
        node _T_510 = shl(b_aux_reg_w[6], 8) @[BinaryDesigns2.scala 224:56]
        node _T_511 = geq(a_aux_reg_w[6], _T_510) @[BinaryDesigns2.scala 224:35]
        when _T_511 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_6_T = shl(b_aux_reg_w[6], 8) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_6_T_1 = sub(a_aux_reg_w[6], _a_aux_reg_r_6_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_6_T_2 = tail(_a_aux_reg_r_6_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[6] <= _a_aux_reg_r_6_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[12][8] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[6] <= a_aux_reg_w[6] @[BinaryDesigns2.scala 228:28]
          wire_res[12][8] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_6_lo_lo_lo = cat(wire_res[12][1], wire_res[12][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_lo_lo_hi_hi = cat(wire_res[12][4], wire_res[12][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_lo_lo_hi = cat(result_reg_r_6_lo_lo_hi_hi, wire_res[12][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_lo_lo = cat(result_reg_r_6_lo_lo_hi, result_reg_r_6_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_lo_hi_lo_hi = cat(wire_res[12][7], wire_res[12][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_lo_hi_lo = cat(result_reg_r_6_lo_hi_lo_hi, wire_res[12][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_lo_hi_hi_hi = cat(wire_res[12][10], wire_res[12][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_lo_hi_hi = cat(result_reg_r_6_lo_hi_hi_hi, wire_res[12][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_lo_hi = cat(result_reg_r_6_lo_hi_hi, result_reg_r_6_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_lo = cat(result_reg_r_6_lo_hi, result_reg_r_6_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi_lo_lo = cat(wire_res[12][12], wire_res[12][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi_lo_hi_hi = cat(wire_res[12][15], wire_res[12][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi_lo_hi = cat(result_reg_r_6_hi_lo_hi_hi, wire_res[12][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi_lo = cat(result_reg_r_6_hi_lo_hi, result_reg_r_6_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi_hi_lo_hi = cat(wire_res[12][18], wire_res[12][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi_hi_lo = cat(result_reg_r_6_hi_hi_lo_hi, wire_res[12][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi_hi_hi_hi = cat(wire_res[12][21], wire_res[12][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi_hi_hi = cat(result_reg_r_6_hi_hi_hi_hi, wire_res[12][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi_hi = cat(result_reg_r_6_hi_hi_hi, result_reg_r_6_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_6_hi = cat(result_reg_r_6_hi_hi, result_reg_r_6_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_6_T = cat(result_reg_r_6_hi, result_reg_r_6_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[6] <= _result_reg_r_6_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[6] <= b_aux_reg_w[6] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[7] <= sr_out_valid_r[6] @[BinaryDesigns2.scala 223:29]
        node _T_512 = shl(b_aux_reg_r[6], 7) @[BinaryDesigns2.scala 224:56]
        node _T_513 = geq(a_aux_reg_r[6], _T_512) @[BinaryDesigns2.scala 224:35]
        when _T_513 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_7_T = shl(b_aux_reg_r[6], 7) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_7_T_1 = sub(a_aux_reg_r[6], _a_aux_reg_w_7_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_7_T_2 = tail(_a_aux_reg_w_7_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[7] <= _a_aux_reg_w_7_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[13][7] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[7] <= a_aux_reg_r[6] @[BinaryDesigns2.scala 228:28]
          wire_res[13][7] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_7_lo_lo_lo = cat(wire_res[13][1], wire_res[13][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_lo_lo_hi_hi = cat(wire_res[13][4], wire_res[13][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_lo_lo_hi = cat(result_reg_w_7_lo_lo_hi_hi, wire_res[13][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_lo_lo = cat(result_reg_w_7_lo_lo_hi, result_reg_w_7_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_lo_hi_lo_hi = cat(wire_res[13][7], wire_res[13][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_lo_hi_lo = cat(result_reg_w_7_lo_hi_lo_hi, wire_res[13][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_lo_hi_hi_hi = cat(wire_res[13][10], wire_res[13][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_lo_hi_hi = cat(result_reg_w_7_lo_hi_hi_hi, wire_res[13][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_lo_hi = cat(result_reg_w_7_lo_hi_hi, result_reg_w_7_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_lo = cat(result_reg_w_7_lo_hi, result_reg_w_7_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi_lo_lo = cat(wire_res[13][12], wire_res[13][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi_lo_hi_hi = cat(wire_res[13][15], wire_res[13][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi_lo_hi = cat(result_reg_w_7_hi_lo_hi_hi, wire_res[13][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi_lo = cat(result_reg_w_7_hi_lo_hi, result_reg_w_7_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi_hi_lo_hi = cat(wire_res[13][18], wire_res[13][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi_hi_lo = cat(result_reg_w_7_hi_hi_lo_hi, wire_res[13][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi_hi_hi_hi = cat(wire_res[13][21], wire_res[13][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi_hi_hi = cat(result_reg_w_7_hi_hi_hi_hi, wire_res[13][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi_hi = cat(result_reg_w_7_hi_hi_hi, result_reg_w_7_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_7_hi = cat(result_reg_w_7_hi_hi, result_reg_w_7_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_7_T = cat(result_reg_w_7_hi, result_reg_w_7_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[7] <= _result_reg_w_7_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[7] <= b_aux_reg_r[6] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[7] <= sr_out_valid_w[7] @[BinaryDesigns2.scala 223:29]
        node _T_514 = shl(b_aux_reg_w[7], 6) @[BinaryDesigns2.scala 224:56]
        node _T_515 = geq(a_aux_reg_w[7], _T_514) @[BinaryDesigns2.scala 224:35]
        when _T_515 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_7_T = shl(b_aux_reg_w[7], 6) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_7_T_1 = sub(a_aux_reg_w[7], _a_aux_reg_r_7_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_7_T_2 = tail(_a_aux_reg_r_7_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[7] <= _a_aux_reg_r_7_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[14][6] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[7] <= a_aux_reg_w[7] @[BinaryDesigns2.scala 228:28]
          wire_res[14][6] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_7_lo_lo_lo = cat(wire_res[14][1], wire_res[14][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_lo_lo_hi_hi = cat(wire_res[14][4], wire_res[14][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_lo_lo_hi = cat(result_reg_r_7_lo_lo_hi_hi, wire_res[14][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_lo_lo = cat(result_reg_r_7_lo_lo_hi, result_reg_r_7_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_lo_hi_lo_hi = cat(wire_res[14][7], wire_res[14][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_lo_hi_lo = cat(result_reg_r_7_lo_hi_lo_hi, wire_res[14][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_lo_hi_hi_hi = cat(wire_res[14][10], wire_res[14][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_lo_hi_hi = cat(result_reg_r_7_lo_hi_hi_hi, wire_res[14][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_lo_hi = cat(result_reg_r_7_lo_hi_hi, result_reg_r_7_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_lo = cat(result_reg_r_7_lo_hi, result_reg_r_7_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi_lo_lo = cat(wire_res[14][12], wire_res[14][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi_lo_hi_hi = cat(wire_res[14][15], wire_res[14][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi_lo_hi = cat(result_reg_r_7_hi_lo_hi_hi, wire_res[14][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi_lo = cat(result_reg_r_7_hi_lo_hi, result_reg_r_7_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi_hi_lo_hi = cat(wire_res[14][18], wire_res[14][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi_hi_lo = cat(result_reg_r_7_hi_hi_lo_hi, wire_res[14][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi_hi_hi_hi = cat(wire_res[14][21], wire_res[14][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi_hi_hi = cat(result_reg_r_7_hi_hi_hi_hi, wire_res[14][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi_hi = cat(result_reg_r_7_hi_hi_hi, result_reg_r_7_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_7_hi = cat(result_reg_r_7_hi_hi, result_reg_r_7_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_7_T = cat(result_reg_r_7_hi, result_reg_r_7_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[7] <= _result_reg_r_7_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[7] <= b_aux_reg_w[7] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[8] <= sr_out_valid_r[7] @[BinaryDesigns2.scala 223:29]
        node _T_516 = shl(b_aux_reg_r[7], 5) @[BinaryDesigns2.scala 224:56]
        node _T_517 = geq(a_aux_reg_r[7], _T_516) @[BinaryDesigns2.scala 224:35]
        when _T_517 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_8_T = shl(b_aux_reg_r[7], 5) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_8_T_1 = sub(a_aux_reg_r[7], _a_aux_reg_w_8_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_8_T_2 = tail(_a_aux_reg_w_8_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[8] <= _a_aux_reg_w_8_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[15][5] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[8] <= a_aux_reg_r[7] @[BinaryDesigns2.scala 228:28]
          wire_res[15][5] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_8_lo_lo_lo = cat(wire_res[15][1], wire_res[15][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_lo_lo_hi_hi = cat(wire_res[15][4], wire_res[15][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_lo_lo_hi = cat(result_reg_w_8_lo_lo_hi_hi, wire_res[15][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_lo_lo = cat(result_reg_w_8_lo_lo_hi, result_reg_w_8_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_lo_hi_lo_hi = cat(wire_res[15][7], wire_res[15][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_lo_hi_lo = cat(result_reg_w_8_lo_hi_lo_hi, wire_res[15][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_lo_hi_hi_hi = cat(wire_res[15][10], wire_res[15][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_lo_hi_hi = cat(result_reg_w_8_lo_hi_hi_hi, wire_res[15][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_lo_hi = cat(result_reg_w_8_lo_hi_hi, result_reg_w_8_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_lo = cat(result_reg_w_8_lo_hi, result_reg_w_8_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi_lo_lo = cat(wire_res[15][12], wire_res[15][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi_lo_hi_hi = cat(wire_res[15][15], wire_res[15][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi_lo_hi = cat(result_reg_w_8_hi_lo_hi_hi, wire_res[15][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi_lo = cat(result_reg_w_8_hi_lo_hi, result_reg_w_8_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi_hi_lo_hi = cat(wire_res[15][18], wire_res[15][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi_hi_lo = cat(result_reg_w_8_hi_hi_lo_hi, wire_res[15][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi_hi_hi_hi = cat(wire_res[15][21], wire_res[15][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi_hi_hi = cat(result_reg_w_8_hi_hi_hi_hi, wire_res[15][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi_hi = cat(result_reg_w_8_hi_hi_hi, result_reg_w_8_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_8_hi = cat(result_reg_w_8_hi_hi, result_reg_w_8_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_8_T = cat(result_reg_w_8_hi, result_reg_w_8_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[8] <= _result_reg_w_8_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[8] <= b_aux_reg_r[7] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[8] <= sr_out_valid_w[8] @[BinaryDesigns2.scala 223:29]
        node _T_518 = shl(b_aux_reg_w[8], 4) @[BinaryDesigns2.scala 224:56]
        node _T_519 = geq(a_aux_reg_w[8], _T_518) @[BinaryDesigns2.scala 224:35]
        when _T_519 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_8_T = shl(b_aux_reg_w[8], 4) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_8_T_1 = sub(a_aux_reg_w[8], _a_aux_reg_r_8_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_8_T_2 = tail(_a_aux_reg_r_8_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[8] <= _a_aux_reg_r_8_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[16][4] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[8] <= a_aux_reg_w[8] @[BinaryDesigns2.scala 228:28]
          wire_res[16][4] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_8_lo_lo_lo = cat(wire_res[16][1], wire_res[16][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_lo_lo_hi_hi = cat(wire_res[16][4], wire_res[16][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_lo_lo_hi = cat(result_reg_r_8_lo_lo_hi_hi, wire_res[16][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_lo_lo = cat(result_reg_r_8_lo_lo_hi, result_reg_r_8_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_lo_hi_lo_hi = cat(wire_res[16][7], wire_res[16][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_lo_hi_lo = cat(result_reg_r_8_lo_hi_lo_hi, wire_res[16][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_lo_hi_hi_hi = cat(wire_res[16][10], wire_res[16][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_lo_hi_hi = cat(result_reg_r_8_lo_hi_hi_hi, wire_res[16][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_lo_hi = cat(result_reg_r_8_lo_hi_hi, result_reg_r_8_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_lo = cat(result_reg_r_8_lo_hi, result_reg_r_8_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi_lo_lo = cat(wire_res[16][12], wire_res[16][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi_lo_hi_hi = cat(wire_res[16][15], wire_res[16][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi_lo_hi = cat(result_reg_r_8_hi_lo_hi_hi, wire_res[16][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi_lo = cat(result_reg_r_8_hi_lo_hi, result_reg_r_8_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi_hi_lo_hi = cat(wire_res[16][18], wire_res[16][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi_hi_lo = cat(result_reg_r_8_hi_hi_lo_hi, wire_res[16][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi_hi_hi_hi = cat(wire_res[16][21], wire_res[16][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi_hi_hi = cat(result_reg_r_8_hi_hi_hi_hi, wire_res[16][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi_hi = cat(result_reg_r_8_hi_hi_hi, result_reg_r_8_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_8_hi = cat(result_reg_r_8_hi_hi, result_reg_r_8_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_8_T = cat(result_reg_r_8_hi, result_reg_r_8_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[8] <= _result_reg_r_8_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[8] <= b_aux_reg_w[8] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[9] <= sr_out_valid_r[8] @[BinaryDesigns2.scala 223:29]
        node _T_520 = shl(b_aux_reg_r[8], 3) @[BinaryDesigns2.scala 224:56]
        node _T_521 = geq(a_aux_reg_r[8], _T_520) @[BinaryDesigns2.scala 224:35]
        when _T_521 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_9_T = shl(b_aux_reg_r[8], 3) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_9_T_1 = sub(a_aux_reg_r[8], _a_aux_reg_w_9_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_9_T_2 = tail(_a_aux_reg_w_9_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[9] <= _a_aux_reg_w_9_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[17][3] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[9] <= a_aux_reg_r[8] @[BinaryDesigns2.scala 228:28]
          wire_res[17][3] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_9_lo_lo_lo = cat(wire_res[17][1], wire_res[17][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_lo_lo_hi_hi = cat(wire_res[17][4], wire_res[17][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_lo_lo_hi = cat(result_reg_w_9_lo_lo_hi_hi, wire_res[17][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_lo_lo = cat(result_reg_w_9_lo_lo_hi, result_reg_w_9_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_lo_hi_lo_hi = cat(wire_res[17][7], wire_res[17][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_lo_hi_lo = cat(result_reg_w_9_lo_hi_lo_hi, wire_res[17][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_lo_hi_hi_hi = cat(wire_res[17][10], wire_res[17][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_lo_hi_hi = cat(result_reg_w_9_lo_hi_hi_hi, wire_res[17][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_lo_hi = cat(result_reg_w_9_lo_hi_hi, result_reg_w_9_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_lo = cat(result_reg_w_9_lo_hi, result_reg_w_9_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi_lo_lo = cat(wire_res[17][12], wire_res[17][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi_lo_hi_hi = cat(wire_res[17][15], wire_res[17][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi_lo_hi = cat(result_reg_w_9_hi_lo_hi_hi, wire_res[17][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi_lo = cat(result_reg_w_9_hi_lo_hi, result_reg_w_9_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi_hi_lo_hi = cat(wire_res[17][18], wire_res[17][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi_hi_lo = cat(result_reg_w_9_hi_hi_lo_hi, wire_res[17][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi_hi_hi_hi = cat(wire_res[17][21], wire_res[17][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi_hi_hi = cat(result_reg_w_9_hi_hi_hi_hi, wire_res[17][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi_hi = cat(result_reg_w_9_hi_hi_hi, result_reg_w_9_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_9_hi = cat(result_reg_w_9_hi_hi, result_reg_w_9_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_9_T = cat(result_reg_w_9_hi, result_reg_w_9_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[9] <= _result_reg_w_9_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[9] <= b_aux_reg_r[8] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[9] <= sr_out_valid_w[9] @[BinaryDesigns2.scala 223:29]
        node _T_522 = shl(b_aux_reg_w[9], 2) @[BinaryDesigns2.scala 224:56]
        node _T_523 = geq(a_aux_reg_w[9], _T_522) @[BinaryDesigns2.scala 224:35]
        when _T_523 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_9_T = shl(b_aux_reg_w[9], 2) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_9_T_1 = sub(a_aux_reg_w[9], _a_aux_reg_r_9_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_9_T_2 = tail(_a_aux_reg_r_9_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[9] <= _a_aux_reg_r_9_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[18][2] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[9] <= a_aux_reg_w[9] @[BinaryDesigns2.scala 228:28]
          wire_res[18][2] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_9_lo_lo_lo = cat(wire_res[18][1], wire_res[18][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_lo_lo_hi_hi = cat(wire_res[18][4], wire_res[18][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_lo_lo_hi = cat(result_reg_r_9_lo_lo_hi_hi, wire_res[18][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_lo_lo = cat(result_reg_r_9_lo_lo_hi, result_reg_r_9_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_lo_hi_lo_hi = cat(wire_res[18][7], wire_res[18][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_lo_hi_lo = cat(result_reg_r_9_lo_hi_lo_hi, wire_res[18][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_lo_hi_hi_hi = cat(wire_res[18][10], wire_res[18][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_lo_hi_hi = cat(result_reg_r_9_lo_hi_hi_hi, wire_res[18][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_lo_hi = cat(result_reg_r_9_lo_hi_hi, result_reg_r_9_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_lo = cat(result_reg_r_9_lo_hi, result_reg_r_9_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi_lo_lo = cat(wire_res[18][12], wire_res[18][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi_lo_hi_hi = cat(wire_res[18][15], wire_res[18][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi_lo_hi = cat(result_reg_r_9_hi_lo_hi_hi, wire_res[18][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi_lo = cat(result_reg_r_9_hi_lo_hi, result_reg_r_9_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi_hi_lo_hi = cat(wire_res[18][18], wire_res[18][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi_hi_lo = cat(result_reg_r_9_hi_hi_lo_hi, wire_res[18][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi_hi_hi_hi = cat(wire_res[18][21], wire_res[18][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi_hi_hi = cat(result_reg_r_9_hi_hi_hi_hi, wire_res[18][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi_hi = cat(result_reg_r_9_hi_hi_hi, result_reg_r_9_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_9_hi = cat(result_reg_r_9_hi_hi, result_reg_r_9_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_9_T = cat(result_reg_r_9_hi, result_reg_r_9_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[9] <= _result_reg_r_9_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[9] <= b_aux_reg_w[9] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_w[10] <= sr_out_valid_r[9] @[BinaryDesigns2.scala 223:29]
        node _T_524 = shl(b_aux_reg_r[9], 1) @[BinaryDesigns2.scala 224:56]
        node _T_525 = geq(a_aux_reg_r[9], _T_524) @[BinaryDesigns2.scala 224:35]
        when _T_525 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_w_10_T = shl(b_aux_reg_r[9], 1) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_w_10_T_1 = sub(a_aux_reg_r[9], _a_aux_reg_w_10_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_w_10_T_2 = tail(_a_aux_reg_w_10_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_w[10] <= _a_aux_reg_w_10_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[19][1] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_w[10] <= a_aux_reg_r[9] @[BinaryDesigns2.scala 228:28]
          wire_res[19][1] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_w_10_lo_lo_lo = cat(wire_res[19][1], wire_res[19][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_lo_lo_hi_hi = cat(wire_res[19][4], wire_res[19][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_lo_lo_hi = cat(result_reg_w_10_lo_lo_hi_hi, wire_res[19][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_lo_lo = cat(result_reg_w_10_lo_lo_hi, result_reg_w_10_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_lo_hi_lo_hi = cat(wire_res[19][7], wire_res[19][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_lo_hi_lo = cat(result_reg_w_10_lo_hi_lo_hi, wire_res[19][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_lo_hi_hi_hi = cat(wire_res[19][10], wire_res[19][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_lo_hi_hi = cat(result_reg_w_10_lo_hi_hi_hi, wire_res[19][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_lo_hi = cat(result_reg_w_10_lo_hi_hi, result_reg_w_10_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_lo = cat(result_reg_w_10_lo_hi, result_reg_w_10_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi_lo_lo = cat(wire_res[19][12], wire_res[19][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi_lo_hi_hi = cat(wire_res[19][15], wire_res[19][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi_lo_hi = cat(result_reg_w_10_hi_lo_hi_hi, wire_res[19][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi_lo = cat(result_reg_w_10_hi_lo_hi, result_reg_w_10_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi_hi_lo_hi = cat(wire_res[19][18], wire_res[19][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi_hi_lo = cat(result_reg_w_10_hi_hi_lo_hi, wire_res[19][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi_hi_hi_hi = cat(wire_res[19][21], wire_res[19][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi_hi_hi = cat(result_reg_w_10_hi_hi_hi_hi, wire_res[19][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi_hi = cat(result_reg_w_10_hi_hi_hi, result_reg_w_10_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_w_10_hi = cat(result_reg_w_10_hi_hi, result_reg_w_10_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_w_10_T = cat(result_reg_w_10_hi, result_reg_w_10_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_w[10] <= _result_reg_w_10_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_w[10] <= b_aux_reg_r[9] @[BinaryDesigns2.scala 232:26]
        sr_out_valid_r[10] <= sr_out_valid_w[10] @[BinaryDesigns2.scala 223:29]
        node _T_526 = shl(b_aux_reg_w[10], 0) @[BinaryDesigns2.scala 224:56]
        node _T_527 = geq(a_aux_reg_w[10], _T_526) @[BinaryDesigns2.scala 224:35]
        when _T_527 : @[BinaryDesigns2.scala 224:81]
          node _a_aux_reg_r_10_T = shl(b_aux_reg_w[10], 0) @[BinaryDesigns2.scala 225:68]
          node _a_aux_reg_r_10_T_1 = sub(a_aux_reg_w[10], _a_aux_reg_r_10_T) @[BinaryDesigns2.scala 225:48]
          node _a_aux_reg_r_10_T_2 = tail(_a_aux_reg_r_10_T_1, 1) @[BinaryDesigns2.scala 225:48]
          a_aux_reg_r[10] <= _a_aux_reg_r_10_T_2 @[BinaryDesigns2.scala 225:28]
          wire_res[20][0] <= UInt<1>("h1") @[BinaryDesigns2.scala 226:43]
        else :
          a_aux_reg_r[10] <= a_aux_reg_w[10] @[BinaryDesigns2.scala 228:28]
          wire_res[20][0] <= UInt<1>("h0") @[BinaryDesigns2.scala 229:43]
        node result_reg_r_10_lo_lo_lo = cat(wire_res[20][1], wire_res[20][0]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_lo_lo_hi_hi = cat(wire_res[20][4], wire_res[20][3]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_lo_lo_hi = cat(result_reg_r_10_lo_lo_hi_hi, wire_res[20][2]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_lo_lo = cat(result_reg_r_10_lo_lo_hi, result_reg_r_10_lo_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_lo_hi_lo_hi = cat(wire_res[20][7], wire_res[20][6]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_lo_hi_lo = cat(result_reg_r_10_lo_hi_lo_hi, wire_res[20][5]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_lo_hi_hi_hi = cat(wire_res[20][10], wire_res[20][9]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_lo_hi_hi = cat(result_reg_r_10_lo_hi_hi_hi, wire_res[20][8]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_lo_hi = cat(result_reg_r_10_lo_hi_hi, result_reg_r_10_lo_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_lo = cat(result_reg_r_10_lo_hi, result_reg_r_10_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi_lo_lo = cat(wire_res[20][12], wire_res[20][11]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi_lo_hi_hi = cat(wire_res[20][15], wire_res[20][14]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi_lo_hi = cat(result_reg_r_10_hi_lo_hi_hi, wire_res[20][13]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi_lo = cat(result_reg_r_10_hi_lo_hi, result_reg_r_10_hi_lo_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi_hi_lo_hi = cat(wire_res[20][18], wire_res[20][17]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi_hi_lo = cat(result_reg_r_10_hi_hi_lo_hi, wire_res[20][16]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi_hi_hi_hi = cat(wire_res[20][21], wire_res[20][20]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi_hi_hi = cat(result_reg_r_10_hi_hi_hi_hi, wire_res[20][19]) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi_hi = cat(result_reg_r_10_hi_hi_hi, result_reg_r_10_hi_hi_lo) @[BinaryDesigns2.scala 231:46]
        node result_reg_r_10_hi = cat(result_reg_r_10_hi_hi, result_reg_r_10_hi_lo) @[BinaryDesigns2.scala 231:46]
        node _result_reg_r_10_T = cat(result_reg_r_10_hi, result_reg_r_10_lo) @[BinaryDesigns2.scala 231:46]
        result_reg_r[10] <= _result_reg_r_10_T @[BinaryDesigns2.scala 231:27]
        b_aux_reg_r[10] <= b_aux_reg_w[10] @[BinaryDesigns2.scala 232:26]

  module FP_divider_bw16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_en : UInt<1>, flip in_valid : UInt<1>, flip in_a : UInt<16>, flip in_b : UInt<16>, out_s : UInt<16>, out_valid : UInt<1>}

    wire sign_wire : UInt<1>[2] @[FloatingPointDesigns2.scala 464:25]
    node _sign_wire_0_T = bits(io.in_a, 15, 15) @[FloatingPointDesigns2.scala 465:28]
    sign_wire[0] <= _sign_wire_0_T @[FloatingPointDesigns2.scala 465:18]
    node _sign_wire_1_T = bits(io.in_b, 15, 15) @[FloatingPointDesigns2.scala 466:28]
    sign_wire[1] <= _sign_wire_1_T @[FloatingPointDesigns2.scala 466:18]
    wire exp_wire : UInt<5>[2] @[FloatingPointDesigns2.scala 469:24]
    node _T = bits(io.in_a, 14, 10) @[FloatingPointDesigns2.scala 470:17]
    node _T_1 = gt(_T, UInt<5>("h1e")) @[FloatingPointDesigns2.scala 470:36]
    when _T_1 : @[FloatingPointDesigns2.scala 470:47]
      exp_wire[0] <= UInt<5>("h1e") @[FloatingPointDesigns2.scala 471:19]
    else :
      node _T_2 = bits(io.in_a, 14, 10) @[FloatingPointDesigns2.scala 472:23]
      node _T_3 = lt(_T_2, UInt<5>("h1")) @[FloatingPointDesigns2.scala 472:39]
      when _T_3 : @[FloatingPointDesigns2.scala 472:49]
        exp_wire[0] <= UInt<5>("h1") @[FloatingPointDesigns2.scala 473:19]
      else :
        node _exp_wire_0_T = bits(io.in_a, 14, 10) @[FloatingPointDesigns2.scala 475:29]
        exp_wire[0] <= _exp_wire_0_T @[FloatingPointDesigns2.scala 475:19]
    node _T_4 = bits(io.in_b, 14, 10) @[FloatingPointDesigns2.scala 477:17]
    node _T_5 = gt(_T_4, UInt<5>("h1e")) @[FloatingPointDesigns2.scala 477:36]
    when _T_5 : @[FloatingPointDesigns2.scala 477:47]
      exp_wire[1] <= UInt<5>("h1e") @[FloatingPointDesigns2.scala 478:19]
    else :
      node _T_6 = bits(io.in_b, 14, 10) @[FloatingPointDesigns2.scala 479:23]
      node _T_7 = lt(_T_6, UInt<5>("h1")) @[FloatingPointDesigns2.scala 479:39]
      when _T_7 : @[FloatingPointDesigns2.scala 479:49]
        exp_wire[1] <= UInt<5>("h1") @[FloatingPointDesigns2.scala 480:19]
      else :
        node _exp_wire_1_T = bits(io.in_b, 14, 10) @[FloatingPointDesigns2.scala 482:29]
        exp_wire[1] <= _exp_wire_1_T @[FloatingPointDesigns2.scala 482:19]
    wire frac_wire : UInt<10>[2] @[FloatingPointDesigns2.scala 486:25]
    node _frac_wire_0_T = bits(io.in_a, 9, 0) @[FloatingPointDesigns2.scala 487:28]
    frac_wire[0] <= _frac_wire_0_T @[FloatingPointDesigns2.scala 487:18]
    node _frac_wire_1_T = bits(io.in_b, 9, 0) @[FloatingPointDesigns2.scala 488:28]
    frac_wire[1] <= _frac_wire_1_T @[FloatingPointDesigns2.scala 488:18]
    wire whole_frac_wire : UInt<11>[2] @[FloatingPointDesigns2.scala 491:31]
    node _whole_frac_wire_0_T = cat(UInt<1>("h1"), frac_wire[0]) @[FloatingPointDesigns2.scala 492:31]
    whole_frac_wire[0] <= _whole_frac_wire_0_T @[FloatingPointDesigns2.scala 492:24]
    node _whole_frac_wire_1_T = cat(UInt<1>("h1"), frac_wire[1]) @[FloatingPointDesigns2.scala 493:31]
    whole_frac_wire[1] <= _whole_frac_wire_1_T @[FloatingPointDesigns2.scala 493:24]
    wire new_sign_wire : UInt<1> @[FloatingPointDesigns2.scala 495:29]
    node _new_sign_wire_T = xor(sign_wire[0], sign_wire[1]) @[FloatingPointDesigns2.scala 496:35]
    new_sign_wire <= _new_sign_wire_T @[FloatingPointDesigns2.scala 496:19]
    inst postProcess_exp_subtractor of full_subtractor @[FloatingPointDesigns2.scala 499:44]
    postProcess_exp_subtractor.clock <= clock
    postProcess_exp_subtractor.reset <= reset
    postProcess_exp_subtractor.io.in_a <= exp_wire[0] @[FloatingPointDesigns2.scala 500:40]
    node _postProcess_exp_subtractor_io_in_b_T = sub(exp_wire[1], UInt<5>("hf")) @[FloatingPointDesigns2.scala 501:55]
    node _postProcess_exp_subtractor_io_in_b_T_1 = tail(_postProcess_exp_subtractor_io_in_b_T, 1) @[FloatingPointDesigns2.scala 501:55]
    postProcess_exp_subtractor.io.in_b <= _postProcess_exp_subtractor_io_in_b_T_1 @[FloatingPointDesigns2.scala 501:40]
    postProcess_exp_subtractor.io.in_c <= UInt<1>("h0") @[FloatingPointDesigns2.scala 502:40]
    inst divider_BW22_v3 of divider_BW22_v3 @[FloatingPointDesigns2.scala 504:30]
    divider_BW22_v3.clock <= clock
    divider_BW22_v3.reset <= reset
    divider_BW22_v3.io.in_ready <= io.in_en @[FloatingPointDesigns2.scala 505:27]
    divider_BW22_v3.io.in_reset <= UInt<1>("h0") @[FloatingPointDesigns2.scala 506:27]
    divider_BW22_v3.io.in_valid <= io.in_valid @[FloatingPointDesigns2.scala 507:27]
    node _T_8 = cat(whole_frac_wire[0], UInt<11>("h0")) @[FloatingPointDesigns2.scala 508:45]
    divider_BW22_v3.io.in_a <= _T_8 @[FloatingPointDesigns2.scala 508:23]
    divider_BW22_v3.io.in_b <= whole_frac_wire[1] @[FloatingPointDesigns2.scala 509:23]
    node _uo_check_T = lt(exp_wire[1], UInt<5>("hf")) @[FloatingPointDesigns2.scala 511:46]
    reg uo_check_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r <= _uo_check_T @[Reg.scala 17:22]
    reg uo_check_r_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r_1) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r_1 <= uo_check_r @[Reg.scala 17:22]
    reg uo_check_r_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r_2) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r_2 <= uo_check_r_1 @[Reg.scala 17:22]
    reg uo_check_r_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r_3) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r_3 <= uo_check_r_2 @[Reg.scala 17:22]
    reg uo_check_r_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r_4) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r_4 <= uo_check_r_3 @[Reg.scala 17:22]
    reg uo_check_r_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r_5) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r_5 <= uo_check_r_4 @[Reg.scala 17:22]
    reg uo_check_r_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r_6) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r_6 <= uo_check_r_5 @[Reg.scala 17:22]
    reg uo_check_r_7 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r_7) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r_7 <= uo_check_r_6 @[Reg.scala 17:22]
    reg uo_check_r_8 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r_8) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r_8 <= uo_check_r_7 @[Reg.scala 17:22]
    reg uo_check_r_9 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check_r_9) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check_r_9 <= uo_check_r_8 @[Reg.scala 17:22]
    reg uo_check : UInt<1>, clock with :
      reset => (UInt<1>("h0"), uo_check) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      uo_check <= uo_check_r_9 @[Reg.scala 17:22]
    node _carry_flag_T = bits(postProcess_exp_subtractor.io.out_c, 0, 0) @[FloatingPointDesigns2.scala 512:72]
    reg carry_flag_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r <= _carry_flag_T @[Reg.scala 17:22]
    reg carry_flag_r_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r_1) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r_1 <= carry_flag_r @[Reg.scala 17:22]
    reg carry_flag_r_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r_2) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r_2 <= carry_flag_r_1 @[Reg.scala 17:22]
    reg carry_flag_r_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r_3) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r_3 <= carry_flag_r_2 @[Reg.scala 17:22]
    reg carry_flag_r_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r_4) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r_4 <= carry_flag_r_3 @[Reg.scala 17:22]
    reg carry_flag_r_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r_5) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r_5 <= carry_flag_r_4 @[Reg.scala 17:22]
    reg carry_flag_r_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r_6) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r_6 <= carry_flag_r_5 @[Reg.scala 17:22]
    reg carry_flag_r_7 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r_7) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r_7 <= carry_flag_r_6 @[Reg.scala 17:22]
    reg carry_flag_r_8 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r_8) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r_8 <= carry_flag_r_7 @[Reg.scala 17:22]
    reg carry_flag_r_9 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag_r_9) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag_r_9 <= carry_flag_r_8 @[Reg.scala 17:22]
    reg carry_flag : UInt<1>, clock with :
      reset => (UInt<1>("h0"), carry_flag) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      carry_flag <= carry_flag_r_9 @[Reg.scala 17:22]
    node msb_check = bits(divider_BW22_v3.io.out_s, 11, 11) @[FloatingPointDesigns2.scala 513:39]
    reg exp_sum_r : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r <= postProcess_exp_subtractor.io.out_s @[Reg.scala 17:22]
    reg exp_sum_r_1 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r_1) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r_1 <= exp_sum_r @[Reg.scala 17:22]
    reg exp_sum_r_2 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r_2) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r_2 <= exp_sum_r_1 @[Reg.scala 17:22]
    reg exp_sum_r_3 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r_3) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r_3 <= exp_sum_r_2 @[Reg.scala 17:22]
    reg exp_sum_r_4 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r_4) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r_4 <= exp_sum_r_3 @[Reg.scala 17:22]
    reg exp_sum_r_5 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r_5) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r_5 <= exp_sum_r_4 @[Reg.scala 17:22]
    reg exp_sum_r_6 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r_6) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r_6 <= exp_sum_r_5 @[Reg.scala 17:22]
    reg exp_sum_r_7 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r_7) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r_7 <= exp_sum_r_6 @[Reg.scala 17:22]
    reg exp_sum_r_8 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r_8) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r_8 <= exp_sum_r_7 @[Reg.scala 17:22]
    reg exp_sum_r_9 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum_r_9) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum_r_9 <= exp_sum_r_8 @[Reg.scala 17:22]
    reg exp_sum : UInt<5>, clock with :
      reset => (UInt<1>("h0"), exp_sum) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      exp_sum <= exp_sum_r_9 @[Reg.scala 17:22]
    reg new_sign_reg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r <= new_sign_wire @[Reg.scala 17:22]
    reg new_sign_reg_r_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r_1) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r_1 <= new_sign_reg_r @[Reg.scala 17:22]
    reg new_sign_reg_r_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r_2) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r_2 <= new_sign_reg_r_1 @[Reg.scala 17:22]
    reg new_sign_reg_r_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r_3) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r_3 <= new_sign_reg_r_2 @[Reg.scala 17:22]
    reg new_sign_reg_r_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r_4) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r_4 <= new_sign_reg_r_3 @[Reg.scala 17:22]
    reg new_sign_reg_r_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r_5) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r_5 <= new_sign_reg_r_4 @[Reg.scala 17:22]
    reg new_sign_reg_r_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r_6) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r_6 <= new_sign_reg_r_5 @[Reg.scala 17:22]
    reg new_sign_reg_r_7 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r_7) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r_7 <= new_sign_reg_r_6 @[Reg.scala 17:22]
    reg new_sign_reg_r_8 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r_8) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r_8 <= new_sign_reg_r_7 @[Reg.scala 17:22]
    reg new_sign_reg_r_9 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg_r_9) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg_r_9 <= new_sign_reg_r_8 @[Reg.scala 17:22]
    reg new_sign_reg : UInt<1>, clock with :
      reset => (UInt<1>("h0"), new_sign_reg) @[Reg.scala 16:16]
    when io.in_en : @[Reg.scala 17:18]
      new_sign_reg <= new_sign_reg_r_9 @[Reg.scala 17:22]
    node _u_flag_reg_T = eq(carry_flag, UInt<1>("h0")) @[FloatingPointDesigns2.scala 519:35]
    node _u_flag_reg_T_1 = eq(msb_check, UInt<1>("h0")) @[FloatingPointDesigns2.scala 519:64]
    node _u_flag_reg_T_2 = sub(exp_sum, _u_flag_reg_T_1) @[FloatingPointDesigns2.scala 519:60]
    node _u_flag_reg_T_3 = asUInt(_u_flag_reg_T_2) @[FloatingPointDesigns2.scala 519:60]
    node _u_flag_reg_T_4 = gt(_u_flag_reg_T_3, UInt<5>("h1e")) @[FloatingPointDesigns2.scala 519:84]
    node _u_flag_reg_T_5 = or(_u_flag_reg_T, _u_flag_reg_T_4) @[FloatingPointDesigns2.scala 519:47]
    node u_flag_reg = mux(uo_check, _u_flag_reg_T_5, UInt<1>("h0")) @[FloatingPointDesigns2.scala 519:25]
    node _o_flag_reg_T = eq(uo_check, UInt<1>("h0")) @[FloatingPointDesigns2.scala 520:26]
    node _o_flag_reg_T_1 = eq(msb_check, UInt<1>("h0")) @[FloatingPointDesigns2.scala 520:64]
    node _o_flag_reg_T_2 = sub(exp_sum, _o_flag_reg_T_1) @[FloatingPointDesigns2.scala 520:60]
    node _o_flag_reg_T_3 = asUInt(_o_flag_reg_T_2) @[FloatingPointDesigns2.scala 520:60]
    node _o_flag_reg_T_4 = lt(_o_flag_reg_T_3, UInt<5>("h1")) @[FloatingPointDesigns2.scala 520:84]
    node _o_flag_reg_T_5 = or(carry_flag, _o_flag_reg_T_4) @[FloatingPointDesigns2.scala 520:47]
    node o_flag_reg = mux(_o_flag_reg_T, _o_flag_reg_T_5, UInt<1>("h0")) @[FloatingPointDesigns2.scala 520:25]
    io.out_valid <= divider_BW22_v3.io.out_valid @[FloatingPointDesigns2.scala 524:18]
    node _out_exp_T = sub(exp_sum, UInt<1>("h1")) @[FloatingPointDesigns2.scala 526:109]
    node _out_exp_T_1 = tail(_out_exp_T, 1) @[FloatingPointDesigns2.scala 526:109]
    node _out_exp_T_2 = mux(msb_check, exp_sum, _out_exp_T_1) @[FloatingPointDesigns2.scala 526:72]
    node _out_exp_T_3 = mux(o_flag_reg, UInt<5>("h1"), _out_exp_T_2) @[FloatingPointDesigns2.scala 526:47]
    node out_exp = mux(u_flag_reg, UInt<5>("h1e"), _out_exp_T_3) @[FloatingPointDesigns2.scala 526:22]
    node _out_frac_T = bits(divider_BW22_v3.io.out_s, 10, 1) @[FloatingPointDesigns2.scala 527:98]
    node _out_frac_T_1 = bits(divider_BW22_v3.io.out_s, 9, 0) @[FloatingPointDesigns2.scala 527:125]
    node _out_frac_T_2 = mux(msb_check, _out_frac_T, _out_frac_T_1) @[FloatingPointDesigns2.scala 527:74]
    node _out_frac_T_3 = mux(o_flag_reg, UInt<10>("h0"), _out_frac_T_2) @[FloatingPointDesigns2.scala 527:49]
    node out_frac = mux(u_flag_reg, UInt<10>("h3ff"), _out_frac_T_3) @[FloatingPointDesigns2.scala 527:23]
    node _io_out_s_T = cat(new_sign_reg, out_exp) @[FloatingPointDesigns2.scala 528:26]
    node _io_out_s_T_1 = cat(_io_out_s_T, out_frac) @[FloatingPointDesigns2.scala 528:37]
    io.out_s <= _io_out_s_T_1 @[FloatingPointDesigns2.scala 528:14]

  module leadingOneDetector :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<10>, out : UInt<4>}

    node _T = bits(io.in, 9, 9) @[BinaryDesigns.scala 13:13]
    node _T_1 = bits(io.in, 8, 8) @[BinaryDesigns.scala 13:13]
    node _T_2 = bits(io.in, 7, 7) @[BinaryDesigns.scala 13:13]
    node _T_3 = bits(io.in, 6, 6) @[BinaryDesigns.scala 13:13]
    node _T_4 = bits(io.in, 5, 5) @[BinaryDesigns.scala 13:13]
    node _T_5 = bits(io.in, 4, 4) @[BinaryDesigns.scala 13:13]
    node _T_6 = bits(io.in, 3, 3) @[BinaryDesigns.scala 13:13]
    node _T_7 = bits(io.in, 2, 2) @[BinaryDesigns.scala 13:13]
    node _T_8 = bits(io.in, 1, 1) @[BinaryDesigns.scala 13:13]
    node _T_9 = bits(io.in, 0, 0) @[BinaryDesigns.scala 13:13]
    node _hotValue_T = mux(_T_8, UInt<2>("h2"), UInt<1>("h1")) @[Mux.scala 47:70]
    node _hotValue_T_1 = mux(_T_7, UInt<2>("h3"), _hotValue_T) @[Mux.scala 47:70]
    node _hotValue_T_2 = mux(_T_6, UInt<3>("h4"), _hotValue_T_1) @[Mux.scala 47:70]
    node _hotValue_T_3 = mux(_T_5, UInt<3>("h5"), _hotValue_T_2) @[Mux.scala 47:70]
    node _hotValue_T_4 = mux(_T_4, UInt<3>("h6"), _hotValue_T_3) @[Mux.scala 47:70]
    node _hotValue_T_5 = mux(_T_3, UInt<3>("h7"), _hotValue_T_4) @[Mux.scala 47:70]
    node _hotValue_T_6 = mux(_T_2, UInt<4>("h8"), _hotValue_T_5) @[Mux.scala 47:70]
    node _hotValue_T_7 = mux(_T_1, UInt<4>("h9"), _hotValue_T_6) @[Mux.scala 47:70]
    node hotValue = mux(_T, UInt<4>("ha"), _hotValue_T_7) @[Mux.scala 47:70]
    io.out <= hotValue @[BinaryDesigns.scala 16:12]

  module FP_extract :
    input clock : Clock
    input reset : Reset
    output io : { flip in_a : UInt<16>, out_frac : UInt<16>, out : UInt<16>}

    wire result_frac : UInt<16> @[FloatingPointDesigns.scala 884:27]
    wire expr : UInt<16> @[FloatingPointDesigns.scala 885:20]
    expr <= UInt<1>("h0") @[FloatingPointDesigns.scala 886:10]
    wire exp : UInt<5> @[FloatingPointDesigns.scala 887:19]
    node _exp_T = bits(io.in_a, 14, 10) @[FloatingPointDesigns.scala 888:19]
    exp <= _exp_T @[FloatingPointDesigns.scala 888:9]
    wire mant : UInt<10> @[FloatingPointDesigns.scala 889:20]
    node _mant_T = bits(io.in_a, 9, 0) @[FloatingPointDesigns.scala 890:20]
    mant <= _mant_T @[FloatingPointDesigns.scala 890:10]
    wire whole_mant : UInt<11> @[FloatingPointDesigns.scala 891:26]
    node _whole_mant_T = bits(io.in_a, 9, 0) @[FloatingPointDesigns.scala 892:38]
    node _whole_mant_T_1 = cat(UInt<1>("h1"), _whole_mant_T) @[FloatingPointDesigns.scala 892:28]
    whole_mant <= _whole_mant_T_1 @[FloatingPointDesigns.scala 892:16]
    result_frac <= io.in_a @[FloatingPointDesigns.scala 893:17]
    inst leadingOne of leadingOneDetector @[FloatingPointDesigns.scala 894:28]
    leadingOne.clock <= clock
    leadingOne.reset <= reset
    leadingOne.io.in <= mant @[FloatingPointDesigns.scala 895:22]
    node _T = gt(exp, UInt<4>("hf")) @[FloatingPointDesigns.scala 896:14]
    when _T : @[FloatingPointDesigns.scala 896:24]
      wire subres : UInt<5> @[FloatingPointDesigns.scala 897:24]
      node _subres_T = sub(exp, UInt<4>("hf")) @[FloatingPointDesigns.scala 898:21]
      node _subres_T_1 = tail(_subres_T, 1) @[FloatingPointDesigns.scala 898:21]
      subres <= _subres_T_1 @[FloatingPointDesigns.scala 898:14]
      node _expr_T = sub(UInt<4>("ha"), subres) @[FloatingPointDesigns.scala 899:41]
      node _expr_T_1 = tail(_expr_T, 1) @[FloatingPointDesigns.scala 899:41]
      node _expr_T_2 = dshr(whole_mant, _expr_T_1) @[FloatingPointDesigns.scala 899:26]
      expr <= _expr_T_2 @[FloatingPointDesigns.scala 899:12]
      wire firstshiftf : UInt<10> @[FloatingPointDesigns.scala 900:29]
      node _firstshiftf_T = dshl(mant, subres) @[FloatingPointDesigns.scala 901:27]
      firstshiftf <= _firstshiftf_T @[FloatingPointDesigns.scala 901:19]
      leadingOne.io.in <= firstshiftf @[FloatingPointDesigns.scala 902:24]
      wire new_exp : UInt<5> @[FloatingPointDesigns.scala 903:25]
      node _new_exp_T = sub(UInt<4>("ha"), leadingOne.io.out) @[FloatingPointDesigns.scala 904:39]
      node _new_exp_T_1 = tail(_new_exp_T, 1) @[FloatingPointDesigns.scala 904:39]
      node _new_exp_T_2 = add(_new_exp_T_1, UInt<1>("h1")) @[FloatingPointDesigns.scala 904:59]
      node _new_exp_T_3 = tail(_new_exp_T_2, 1) @[FloatingPointDesigns.scala 904:59]
      node _new_exp_T_4 = sub(UInt<4>("hf"), _new_exp_T_3) @[FloatingPointDesigns.scala 904:25]
      node _new_exp_T_5 = tail(_new_exp_T_4, 1) @[FloatingPointDesigns.scala 904:25]
      new_exp <= _new_exp_T_5 @[FloatingPointDesigns.scala 904:15]
      wire new_mant : UInt<10> @[FloatingPointDesigns.scala 905:26]
      node _new_mant_T = sub(UInt<4>("ha"), leadingOne.io.out) @[FloatingPointDesigns.scala 906:46]
      node _new_mant_T_1 = tail(_new_mant_T, 1) @[FloatingPointDesigns.scala 906:46]
      node _new_mant_T_2 = add(_new_mant_T_1, UInt<1>("h1")) @[FloatingPointDesigns.scala 906:66]
      node _new_mant_T_3 = tail(_new_mant_T_2, 1) @[FloatingPointDesigns.scala 906:66]
      node _new_mant_T_4 = dshl(firstshiftf, _new_mant_T_3) @[FloatingPointDesigns.scala 906:31]
      new_mant <= _new_mant_T_4 @[FloatingPointDesigns.scala 906:16]
      node _result_frac_T = bits(io.in_a, 15, 15) @[FloatingPointDesigns.scala 907:29]
      node _result_frac_T_1 = cat(_result_frac_T, new_exp) @[FloatingPointDesigns.scala 907:36]
      node _result_frac_T_2 = cat(_result_frac_T_1, new_mant) @[FloatingPointDesigns.scala 907:47]
      result_frac <= _result_frac_T_2 @[FloatingPointDesigns.scala 907:19]
    else :
      node _T_1 = lt(exp, UInt<4>("hf")) @[FloatingPointDesigns.scala 908:20]
      when _T_1 : @[FloatingPointDesigns.scala 908:29]
        result_frac <= io.in_a @[FloatingPointDesigns.scala 909:19]
      else :
        expr <= UInt<1>("h1") @[FloatingPointDesigns.scala 911:12]
        wire new_exp_1 : UInt<5> @[FloatingPointDesigns.scala 912:25]
        node _new_exp_T_6 = sub(UInt<4>("ha"), leadingOne.io.out) @[FloatingPointDesigns.scala 913:36]
        node _new_exp_T_7 = tail(_new_exp_T_6, 1) @[FloatingPointDesigns.scala 913:36]
        node _new_exp_T_8 = add(_new_exp_T_7, UInt<1>("h1")) @[FloatingPointDesigns.scala 913:56]
        node _new_exp_T_9 = tail(_new_exp_T_8, 1) @[FloatingPointDesigns.scala 913:56]
        node _new_exp_T_10 = sub(exp, _new_exp_T_9) @[FloatingPointDesigns.scala 913:22]
        node _new_exp_T_11 = tail(_new_exp_T_10, 1) @[FloatingPointDesigns.scala 913:22]
        new_exp_1 <= _new_exp_T_11 @[FloatingPointDesigns.scala 913:15]
        wire new_mant_1 : UInt<10> @[FloatingPointDesigns.scala 914:26]
        node _new_mant_T_5 = sub(UInt<4>("ha"), leadingOne.io.out) @[FloatingPointDesigns.scala 915:39]
        node _new_mant_T_6 = tail(_new_mant_T_5, 1) @[FloatingPointDesigns.scala 915:39]
        node _new_mant_T_7 = add(_new_mant_T_6, UInt<1>("h1")) @[FloatingPointDesigns.scala 915:59]
        node _new_mant_T_8 = tail(_new_mant_T_7, 1) @[FloatingPointDesigns.scala 915:59]
        node _new_mant_T_9 = dshl(mant, _new_mant_T_8) @[FloatingPointDesigns.scala 915:24]
        new_mant_1 <= _new_mant_T_9 @[FloatingPointDesigns.scala 915:16]
        node _result_frac_T_3 = bits(io.in_a, 15, 15) @[FloatingPointDesigns.scala 916:29]
        node _result_frac_T_4 = cat(_result_frac_T_3, new_exp_1) @[FloatingPointDesigns.scala 916:36]
        node _result_frac_T_5 = cat(_result_frac_T_4, new_mant_1) @[FloatingPointDesigns.scala 916:47]
        result_frac <= _result_frac_T_5 @[FloatingPointDesigns.scala 916:19]
    io.out_frac <= result_frac @[FloatingPointDesigns.scala 918:17]
    io.out <= expr @[FloatingPointDesigns.scala 919:12]

  module multiplier :
    input clock : Clock
    input reset : Reset
    output io : { flip in_a : UInt<11>, flip in_b : UInt<11>, out_s : UInt<22>}

    wire result : UInt<22> @[BinaryDesigns2.scala 151:22]
    node _result_T = mul(io.in_a, io.in_b) @[BinaryDesigns2.scala 152:23]
    result <= _result_T @[BinaryDesigns2.scala 152:12]
    io.out_s <= result @[BinaryDesigns2.scala 153:14]

  module full_subtractor_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_a : UInt<5>, flip in_b : UInt<5>, flip in_c : UInt<1>, out_s : UInt<5>, out_c : UInt<1>}

    wire result : UInt<6> @[BinaryDesigns2.scala 139:22]
    node _result_T = sub(io.in_a, io.in_b) @[BinaryDesigns2.scala 140:23]
    node _result_T_1 = asUInt(_result_T) @[BinaryDesigns2.scala 140:23]
    node _result_T_2 = sub(_result_T_1, io.in_c) @[BinaryDesigns2.scala 140:34]
    node _result_T_3 = asUInt(_result_T_2) @[BinaryDesigns2.scala 140:34]
    result <= _result_T_3 @[BinaryDesigns2.scala 140:12]
    node _io_out_s_T = bits(result, 4, 0) @[BinaryDesigns2.scala 141:23]
    io.out_s <= _io_out_s_T @[BinaryDesigns2.scala 141:14]
    node _io_out_c_T = bits(result, 5, 5) @[BinaryDesigns2.scala 142:23]
    io.out_c <= _io_out_c_T @[BinaryDesigns2.scala 142:14]

  module twoscomplement :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<5>, out : UInt<5>}

    wire x : UInt<5> @[BinaryDesigns2.scala 95:17]
    node _x_T = not(io.in) @[BinaryDesigns2.scala 96:16]
    node _x_T_1 = add(UInt<1>("h1"), _x_T) @[BinaryDesigns2.scala 96:14]
    node _x_T_2 = tail(_x_T_1, 1) @[BinaryDesigns2.scala 96:14]
    x <= _x_T_2 @[BinaryDesigns2.scala 96:7]
    io.out <= x @[BinaryDesigns2.scala 97:12]

  module full_adder :
    input clock : Clock
    input reset : Reset
    output io : { flip in_a : UInt<5>, flip in_b : UInt<5>, flip in_c : UInt<1>, out_s : UInt<5>, out_c : UInt<1>}

    wire result : UInt<6> @[BinaryDesigns2.scala 125:22]
    node _result_T = add(io.in_a, io.in_b) @[BinaryDesigns2.scala 126:23]
    node _result_T_1 = add(_result_T, io.in_c) @[BinaryDesigns2.scala 126:34]
    result <= _result_T_1 @[BinaryDesigns2.scala 126:12]
    node _io_out_s_T = bits(result, 4, 0) @[BinaryDesigns2.scala 127:23]
    io.out_s <= _io_out_s_T @[BinaryDesigns2.scala 127:14]
    node _io_out_c_T = bits(result, 5, 5) @[BinaryDesigns2.scala 128:23]
    io.out_c <= _io_out_c_T @[BinaryDesigns2.scala 128:14]

  module FP_multiplier_bw16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_en : UInt<1>, flip in_a : UInt<16>, flip in_b : UInt<16>, out_s : UInt<16>}

    wire sign_wire : UInt<1>[2] @[FloatingPointDesigns2.scala 302:25]
    node _sign_wire_0_T = bits(io.in_a, 15, 15) @[FloatingPointDesigns2.scala 303:28]
    sign_wire[0] <= _sign_wire_0_T @[FloatingPointDesigns2.scala 303:18]
    node _sign_wire_1_T = bits(io.in_b, 15, 15) @[FloatingPointDesigns2.scala 304:28]
    sign_wire[1] <= _sign_wire_1_T @[FloatingPointDesigns2.scala 304:18]
    wire exp_wire : UInt<5>[2] @[FloatingPointDesigns2.scala 307:24]
    node _T = bits(io.in_a, 14, 10) @[FloatingPointDesigns2.scala 308:17]
    node _T_1 = sub(UInt<6>("h20"), UInt<2>("h2")) @[FloatingPointDesigns2.scala 308:64]
    node _T_2 = tail(_T_1, 1) @[FloatingPointDesigns2.scala 308:64]
    node _T_3 = gt(_T, _T_2) @[FloatingPointDesigns2.scala 308:36]
    when _T_3 : @[FloatingPointDesigns2.scala 308:71]
      node _exp_wire_0_T = sub(UInt<6>("h20"), UInt<2>("h2")) @[FloatingPointDesigns2.scala 309:48]
      node _exp_wire_0_T_1 = tail(_exp_wire_0_T, 1) @[FloatingPointDesigns2.scala 309:48]
      exp_wire[0] <= _exp_wire_0_T_1 @[FloatingPointDesigns2.scala 309:19]
    else :
      node _T_4 = bits(io.in_a, 14, 10) @[FloatingPointDesigns2.scala 310:23]
      node _T_5 = lt(_T_4, UInt<1>("h1")) @[FloatingPointDesigns2.scala 310:39]
      when _T_5 : @[FloatingPointDesigns2.scala 310:45]
        exp_wire[0] <= UInt<1>("h1") @[FloatingPointDesigns2.scala 311:19]
      else :
        node _exp_wire_0_T_2 = bits(io.in_a, 14, 10) @[FloatingPointDesigns2.scala 313:29]
        exp_wire[0] <= _exp_wire_0_T_2 @[FloatingPointDesigns2.scala 313:19]
    node _T_6 = bits(io.in_b, 14, 10) @[FloatingPointDesigns2.scala 315:17]
    node _T_7 = sub(UInt<6>("h20"), UInt<2>("h2")) @[FloatingPointDesigns2.scala 315:64]
    node _T_8 = tail(_T_7, 1) @[FloatingPointDesigns2.scala 315:64]
    node _T_9 = gt(_T_6, _T_8) @[FloatingPointDesigns2.scala 315:36]
    when _T_9 : @[FloatingPointDesigns2.scala 315:71]
      node _exp_wire_1_T = sub(UInt<6>("h20"), UInt<2>("h2")) @[FloatingPointDesigns2.scala 316:48]
      node _exp_wire_1_T_1 = tail(_exp_wire_1_T, 1) @[FloatingPointDesigns2.scala 316:48]
      exp_wire[1] <= _exp_wire_1_T_1 @[FloatingPointDesigns2.scala 316:19]
    else :
      node _T_10 = bits(io.in_b, 14, 10) @[FloatingPointDesigns2.scala 317:23]
      node _T_11 = lt(_T_10, UInt<1>("h1")) @[FloatingPointDesigns2.scala 317:39]
      when _T_11 : @[FloatingPointDesigns2.scala 317:45]
        exp_wire[1] <= UInt<1>("h1") @[FloatingPointDesigns2.scala 318:19]
      else :
        node _exp_wire_1_T_2 = bits(io.in_b, 14, 10) @[FloatingPointDesigns2.scala 320:29]
        exp_wire[1] <= _exp_wire_1_T_2 @[FloatingPointDesigns2.scala 320:19]
    wire frac_wire : UInt<10>[2] @[FloatingPointDesigns2.scala 324:25]
    node _frac_wire_0_T = bits(io.in_a, 9, 0) @[FloatingPointDesigns2.scala 325:28]
    frac_wire[0] <= _frac_wire_0_T @[FloatingPointDesigns2.scala 325:18]
    node _frac_wire_1_T = bits(io.in_b, 9, 0) @[FloatingPointDesigns2.scala 326:28]
    frac_wire[1] <= _frac_wire_1_T @[FloatingPointDesigns2.scala 326:18]
    wire whole_frac_wire : UInt<11>[2] @[FloatingPointDesigns2.scala 329:31]
    node _whole_frac_wire_0_T = cat(UInt<1>("h1"), frac_wire[0]) @[FloatingPointDesigns2.scala 330:31]
    whole_frac_wire[0] <= _whole_frac_wire_0_T @[FloatingPointDesigns2.scala 330:24]
    node _whole_frac_wire_1_T = cat(UInt<1>("h1"), frac_wire[1]) @[FloatingPointDesigns2.scala 331:31]
    whole_frac_wire[1] <= _whole_frac_wire_1_T @[FloatingPointDesigns2.scala 331:24]
    wire _sign_reg_WIRE : UInt<1>[2] @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE[0] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE[1] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    wire _sign_reg_WIRE_1 : UInt<1>[2] @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE_1[0] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE_1[1] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    wire _sign_reg_WIRE_2 : UInt<1>[2] @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE_2[0] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE_2[1] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    wire _sign_reg_WIRE_3 : UInt<1>[2] @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE_3[0] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE_3[1] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    wire _sign_reg_WIRE_4 : UInt<1>[2] @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE_4[0] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    _sign_reg_WIRE_4[1] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 333:59]
    wire _sign_reg_WIRE_5 : UInt<1>[2][5] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[0][0] <= _sign_reg_WIRE[0] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[0][1] <= _sign_reg_WIRE[1] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[1][0] <= _sign_reg_WIRE_1[0] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[1][1] <= _sign_reg_WIRE_1[1] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[2][0] <= _sign_reg_WIRE_2[0] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[2][1] <= _sign_reg_WIRE_2[1] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[3][0] <= _sign_reg_WIRE_3[0] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[3][1] <= _sign_reg_WIRE_3[1] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[4][0] <= _sign_reg_WIRE_4[0] @[FloatingPointDesigns2.scala 333:43]
    _sign_reg_WIRE_5[4][1] <= _sign_reg_WIRE_4[1] @[FloatingPointDesigns2.scala 333:43]
    reg sign_reg : UInt<1>[2][5], clock with :
      reset => (reset, _sign_reg_WIRE_5) @[FloatingPointDesigns2.scala 333:27]
    wire _exp_reg_WIRE : UInt<5>[2] @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    wire _exp_reg_WIRE_1 : UInt<5>[2] @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_1[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_1[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    wire _exp_reg_WIRE_2 : UInt<5>[2] @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_2[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_2[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    wire _exp_reg_WIRE_3 : UInt<5>[2] @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_3[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_3[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    wire _exp_reg_WIRE_4 : UInt<5>[2] @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_4[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_4[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    wire _exp_reg_WIRE_5 : UInt<5>[2] @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_5[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_5[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    wire _exp_reg_WIRE_6 : UInt<5>[2] @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_6[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_6[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    wire _exp_reg_WIRE_7 : UInt<5>[2] @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_7[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_7[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    wire _exp_reg_WIRE_8 : UInt<5>[2] @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_8[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    _exp_reg_WIRE_8[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 334:58]
    wire _exp_reg_WIRE_9 : UInt<5>[2][9] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[0][0] <= _exp_reg_WIRE[0] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[0][1] <= _exp_reg_WIRE[1] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[1][0] <= _exp_reg_WIRE_1[0] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[1][1] <= _exp_reg_WIRE_1[1] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[2][0] <= _exp_reg_WIRE_2[0] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[2][1] <= _exp_reg_WIRE_2[1] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[3][0] <= _exp_reg_WIRE_3[0] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[3][1] <= _exp_reg_WIRE_3[1] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[4][0] <= _exp_reg_WIRE_4[0] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[4][1] <= _exp_reg_WIRE_4[1] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[5][0] <= _exp_reg_WIRE_5[0] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[5][1] <= _exp_reg_WIRE_5[1] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[6][0] <= _exp_reg_WIRE_6[0] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[6][1] <= _exp_reg_WIRE_6[1] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[7][0] <= _exp_reg_WIRE_7[0] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[7][1] <= _exp_reg_WIRE_7[1] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[8][0] <= _exp_reg_WIRE_8[0] @[FloatingPointDesigns2.scala 334:42]
    _exp_reg_WIRE_9[8][1] <= _exp_reg_WIRE_8[1] @[FloatingPointDesigns2.scala 334:42]
    reg exp_reg : UInt<5>[2][9], clock with :
      reset => (reset, _exp_reg_WIRE_9) @[FloatingPointDesigns2.scala 334:26]
    wire _whole_frac_reg_WIRE : UInt<11>[2] @[FloatingPointDesigns2.scala 335:65]
    _whole_frac_reg_WIRE[0] <= UInt<11>("h0") @[FloatingPointDesigns2.scala 335:65]
    _whole_frac_reg_WIRE[1] <= UInt<11>("h0") @[FloatingPointDesigns2.scala 335:65]
    wire _whole_frac_reg_WIRE_1 : UInt<11>[2] @[FloatingPointDesigns2.scala 335:65]
    _whole_frac_reg_WIRE_1[0] <= UInt<11>("h0") @[FloatingPointDesigns2.scala 335:65]
    _whole_frac_reg_WIRE_1[1] <= UInt<11>("h0") @[FloatingPointDesigns2.scala 335:65]
    wire _whole_frac_reg_WIRE_2 : UInt<11>[2][2] @[FloatingPointDesigns2.scala 335:49]
    _whole_frac_reg_WIRE_2[0][0] <= _whole_frac_reg_WIRE[0] @[FloatingPointDesigns2.scala 335:49]
    _whole_frac_reg_WIRE_2[0][1] <= _whole_frac_reg_WIRE[1] @[FloatingPointDesigns2.scala 335:49]
    _whole_frac_reg_WIRE_2[1][0] <= _whole_frac_reg_WIRE_1[0] @[FloatingPointDesigns2.scala 335:49]
    _whole_frac_reg_WIRE_2[1][1] <= _whole_frac_reg_WIRE_1[1] @[FloatingPointDesigns2.scala 335:49]
    reg whole_frac_reg : UInt<11>[2][2], clock with :
      reset => (reset, _whole_frac_reg_WIRE_2) @[FloatingPointDesigns2.scala 335:33]
    inst frac_multiplier of multiplier @[FloatingPointDesigns2.scala 337:33]
    frac_multiplier.clock <= clock
    frac_multiplier.reset <= reset
    frac_multiplier.io.in_a <= whole_frac_reg[1][0] @[FloatingPointDesigns2.scala 338:29]
    frac_multiplier.io.in_b <= whole_frac_reg[1][1] @[FloatingPointDesigns2.scala 339:29]
    wire _frac_multiplier_out_reg_WIRE : UInt<22>[6] @[FloatingPointDesigns2.scala 341:58]
    _frac_multiplier_out_reg_WIRE[0] <= UInt<22>("h0") @[FloatingPointDesigns2.scala 341:58]
    _frac_multiplier_out_reg_WIRE[1] <= UInt<22>("h0") @[FloatingPointDesigns2.scala 341:58]
    _frac_multiplier_out_reg_WIRE[2] <= UInt<22>("h0") @[FloatingPointDesigns2.scala 341:58]
    _frac_multiplier_out_reg_WIRE[3] <= UInt<22>("h0") @[FloatingPointDesigns2.scala 341:58]
    _frac_multiplier_out_reg_WIRE[4] <= UInt<22>("h0") @[FloatingPointDesigns2.scala 341:58]
    _frac_multiplier_out_reg_WIRE[5] <= UInt<22>("h0") @[FloatingPointDesigns2.scala 341:58]
    reg frac_multiplier_out_reg : UInt<22>[6], clock with :
      reset => (reset, _frac_multiplier_out_reg_WIRE) @[FloatingPointDesigns2.scala 341:42]
    inst postProcess_exp_subtractor of full_subtractor_1 @[FloatingPointDesigns2.scala 344:44]
    postProcess_exp_subtractor.clock <= clock
    postProcess_exp_subtractor.reset <= reset
    postProcess_exp_subtractor.io.in_a <= UInt<4>("hf") @[FloatingPointDesigns2.scala 345:40]
    postProcess_exp_subtractor.io.in_b <= exp_reg[2][1] @[FloatingPointDesigns2.scala 346:40]
    postProcess_exp_subtractor.io.in_c <= UInt<1>("h0") @[FloatingPointDesigns2.scala 347:40]
    wire _postProcess_exp_sub_out_sum_reg_WIRE : UInt<5>[1] @[FloatingPointDesigns2.scala 349:66]
    _postProcess_exp_sub_out_sum_reg_WIRE[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 349:66]
    reg postProcess_exp_sub_out_sum_reg : UInt<5>[1], clock with :
      reset => (reset, _postProcess_exp_sub_out_sum_reg_WIRE) @[FloatingPointDesigns2.scala 349:50]
    wire _postProcess_exp_sub_out_carry_reg_WIRE : UInt<1>[1] @[FloatingPointDesigns2.scala 350:68]
    _postProcess_exp_sub_out_carry_reg_WIRE[0] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 350:68]
    reg postProcess_exp_sub_out_carry_reg : UInt<1>[1], clock with :
      reset => (reset, _postProcess_exp_sub_out_carry_reg_WIRE) @[FloatingPointDesigns2.scala 350:52]
    inst postProcess_cmpl of twoscomplement @[FloatingPointDesigns2.scala 353:34]
    postProcess_cmpl.clock <= clock
    postProcess_cmpl.reset <= reset
    postProcess_cmpl.io.in <= postProcess_exp_sub_out_sum_reg[0] @[FloatingPointDesigns2.scala 354:28]
    wire _postProcess_cmpl_out_reg_WIRE : UInt<5>[3] @[FloatingPointDesigns2.scala 356:59]
    _postProcess_cmpl_out_reg_WIRE[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 356:59]
    _postProcess_cmpl_out_reg_WIRE[1] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 356:59]
    _postProcess_cmpl_out_reg_WIRE[2] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 356:59]
    reg postProcess_cmpl_out_reg : UInt<5>[3], clock with :
      reset => (reset, _postProcess_cmpl_out_reg_WIRE) @[FloatingPointDesigns2.scala 356:43]
    wire new_sign_wire : UInt<1> @[FloatingPointDesigns2.scala 358:29]
    node _new_sign_wire_T = xor(sign_reg[4][0], sign_reg[4][1]) @[FloatingPointDesigns2.scala 359:37]
    new_sign_wire <= _new_sign_wire_T @[FloatingPointDesigns2.scala 359:19]
    wire _new_sign_reg_WIRE : UInt<1>[4] @[FloatingPointDesigns2.scala 361:47]
    _new_sign_reg_WIRE[0] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 361:47]
    _new_sign_reg_WIRE[1] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 361:47]
    _new_sign_reg_WIRE[2] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 361:47]
    _new_sign_reg_WIRE[3] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 361:47]
    reg new_sign_reg : UInt<1>[4], clock with :
      reset => (reset, _new_sign_reg_WIRE) @[FloatingPointDesigns2.scala 361:31]
    wire postProcessInstruction_wire : UInt<1> @[FloatingPointDesigns2.scala 363:43]
    node _postProcessInstruction_wire_T = lt(exp_reg[5][1], UInt<4>("hf")) @[FloatingPointDesigns2.scala 364:51]
    postProcessInstruction_wire <= _postProcessInstruction_wire_T @[FloatingPointDesigns2.scala 364:33]
    wire _postProcessInstruction_reg_WIRE : UInt<1>[2] @[FloatingPointDesigns2.scala 366:61]
    _postProcessInstruction_reg_WIRE[0] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 366:61]
    _postProcessInstruction_reg_WIRE[1] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 366:61]
    reg postProcessInstruction_reg : UInt<1>[2], clock with :
      reset => (reset, _postProcessInstruction_reg_WIRE) @[FloatingPointDesigns2.scala 366:45]
    inst postProcess_exp_adder of full_adder @[FloatingPointDesigns2.scala 370:39]
    postProcess_exp_adder.clock <= clock
    postProcess_exp_adder.reset <= reset
    postProcess_exp_adder.io.in_c <= UInt<1>("h0") @[FloatingPointDesigns2.scala 371:35]
    node _T_12 = bits(frac_multiplier_out_reg[4], 21, 21) @[FloatingPointDesigns2.scala 373:36]
    node _T_13 = eq(_T_12, UInt<1>("h1")) @[FloatingPointDesigns2.scala 373:63]
    when _T_13 : @[FloatingPointDesigns2.scala 373:72]
      node _postProcess_exp_adder_io_in_a_T = add(exp_reg[6][0], UInt<1>("h1")) @[FloatingPointDesigns2.scala 374:54]
      node _postProcess_exp_adder_io_in_a_T_1 = tail(_postProcess_exp_adder_io_in_a_T, 1) @[FloatingPointDesigns2.scala 374:54]
      postProcess_exp_adder.io.in_a <= _postProcess_exp_adder_io_in_a_T_1 @[FloatingPointDesigns2.scala 374:37]
      postProcess_exp_adder.io.in_b <= postProcess_cmpl_out_reg[2] @[FloatingPointDesigns2.scala 375:37]
    else :
      postProcess_exp_adder.io.in_a <= exp_reg[6][0] @[FloatingPointDesigns2.scala 377:37]
      postProcess_exp_adder.io.in_b <= postProcess_cmpl_out_reg[2] @[FloatingPointDesigns2.scala 378:37]
    wire _postProcess_exp_adder_out_sum_reg_WIRE : UInt<5>[1] @[FloatingPointDesigns2.scala 381:68]
    _postProcess_exp_adder_out_sum_reg_WIRE[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 381:68]
    reg postProcess_exp_adder_out_sum_reg : UInt<5>[1], clock with :
      reset => (reset, _postProcess_exp_adder_out_sum_reg_WIRE) @[FloatingPointDesigns2.scala 381:52]
    wire _postProcess_exp_adder_out_carry_reg_WIRE : UInt<1>[1] @[FloatingPointDesigns2.scala 382:70]
    _postProcess_exp_adder_out_carry_reg_WIRE[0] <= UInt<1>("h0") @[FloatingPointDesigns2.scala 382:70]
    reg postProcess_exp_adder_out_carry_reg : UInt<1>[1], clock with :
      reset => (reset, _postProcess_exp_adder_out_carry_reg_WIRE) @[FloatingPointDesigns2.scala 382:54]
    wire _new_exp_reg_WIRE : UInt<5>[1] @[FloatingPointDesigns2.scala 384:46]
    _new_exp_reg_WIRE[0] <= UInt<5>("h0") @[FloatingPointDesigns2.scala 384:46]
    reg new_exp_reg : UInt<5>[1], clock with :
      reset => (reset, _new_exp_reg_WIRE) @[FloatingPointDesigns2.scala 384:30]
    wire _new_frac_reg_WIRE : UInt<10>[1] @[FloatingPointDesigns2.scala 385:47]
    _new_frac_reg_WIRE[0] <= UInt<10>("h0") @[FloatingPointDesigns2.scala 385:47]
    reg new_frac_reg : UInt<10>[1], clock with :
      reset => (reset, _new_frac_reg_WIRE) @[FloatingPointDesigns2.scala 385:31]
    reg output_result_reg : UInt<16>, clock with :
      reset => (reset, UInt<16>("h0")) @[FloatingPointDesigns2.scala 387:36]
    when io.in_en : @[FloatingPointDesigns2.scala 389:19]
      node _new_exp_reg_0_T = bits(postProcess_exp_adder_out_carry_reg[0], 0, 0) @[FloatingPointDesigns2.scala 390:104]
      node _new_exp_reg_0_T_1 = eq(_new_exp_reg_0_T, UInt<1>("h0")) @[FloatingPointDesigns2.scala 390:64]
      node _new_exp_reg_0_T_2 = mux(_new_exp_reg_0_T_1, UInt<1>("h1"), postProcess_exp_adder_out_sum_reg[0]) @[FloatingPointDesigns2.scala 390:63]
      node _new_exp_reg_0_T_3 = bits(postProcess_exp_adder_out_carry_reg[0], 0, 0) @[FloatingPointDesigns2.scala 390:199]
      node _new_exp_reg_0_T_4 = gt(postProcess_exp_adder_out_sum_reg[0], UInt<5>("h1e")) @[FloatingPointDesigns2.scala 390:246]
      node _new_exp_reg_0_T_5 = or(_new_exp_reg_0_T_3, _new_exp_reg_0_T_4) @[FloatingPointDesigns2.scala 390:206]
      node _new_exp_reg_0_T_6 = mux(_new_exp_reg_0_T_5, UInt<5>("h1e"), postProcess_exp_adder_out_sum_reg[0]) @[FloatingPointDesigns2.scala 390:159]
      node _new_exp_reg_0_T_7 = mux(postProcessInstruction_reg[1], _new_exp_reg_0_T_2, _new_exp_reg_0_T_6) @[FloatingPointDesigns2.scala 390:28]
      new_exp_reg[0] <= _new_exp_reg_0_T_7 @[FloatingPointDesigns2.scala 390:22]
      node _T_14 = bits(frac_multiplier_out_reg[5], 21, 21) @[FloatingPointDesigns2.scala 391:38]
      node _T_15 = eq(_T_14, UInt<1>("h1")) @[FloatingPointDesigns2.scala 391:65]
      when _T_15 : @[FloatingPointDesigns2.scala 391:74]
        node _new_frac_reg_0_T = bits(postProcess_exp_adder_out_carry_reg[0], 0, 0) @[FloatingPointDesigns2.scala 392:107]
        node _new_frac_reg_0_T_1 = eq(_new_frac_reg_0_T, UInt<1>("h0")) @[FloatingPointDesigns2.scala 392:67]
        node _new_frac_reg_0_T_2 = bits(frac_multiplier_out_reg[5], 20, 11) @[FloatingPointDesigns2.scala 392:146]
        node _new_frac_reg_0_T_3 = mux(_new_frac_reg_0_T_1, UInt<1>("h0"), _new_frac_reg_0_T_2) @[FloatingPointDesigns2.scala 392:66]
        node _new_frac_reg_0_T_4 = bits(postProcess_exp_adder_out_carry_reg[0], 0, 0) @[FloatingPointDesigns2.scala 392:232]
        node _new_frac_reg_0_T_5 = gt(postProcess_exp_adder_out_sum_reg[0], UInt<5>("h1e")) @[FloatingPointDesigns2.scala 392:279]
        node _new_frac_reg_0_T_6 = or(_new_frac_reg_0_T_4, _new_frac_reg_0_T_5) @[FloatingPointDesigns2.scala 392:239]
        node _new_frac_reg_0_T_7 = bits(frac_multiplier_out_reg[5], 20, 11) @[FloatingPointDesigns2.scala 392:373]
        node _new_frac_reg_0_T_8 = mux(_new_frac_reg_0_T_6, UInt<10>("h3ff"), _new_frac_reg_0_T_7) @[FloatingPointDesigns2.scala 392:192]
        node _new_frac_reg_0_T_9 = mux(postProcessInstruction_reg[1], _new_frac_reg_0_T_3, _new_frac_reg_0_T_8) @[FloatingPointDesigns2.scala 392:31]
        new_frac_reg[0] <= _new_frac_reg_0_T_9 @[FloatingPointDesigns2.scala 392:25]
      else :
        node _new_frac_reg_0_T_10 = bits(postProcess_exp_adder_out_carry_reg[0], 0, 0) @[FloatingPointDesigns2.scala 394:107]
        node _new_frac_reg_0_T_11 = eq(_new_frac_reg_0_T_10, UInt<1>("h0")) @[FloatingPointDesigns2.scala 394:67]
        node _new_frac_reg_0_T_12 = bits(frac_multiplier_out_reg[5], 19, 10) @[FloatingPointDesigns2.scala 394:146]
        node _new_frac_reg_0_T_13 = mux(_new_frac_reg_0_T_11, UInt<1>("h0"), _new_frac_reg_0_T_12) @[FloatingPointDesigns2.scala 394:66]
        node _new_frac_reg_0_T_14 = bits(postProcess_exp_adder_out_carry_reg[0], 0, 0) @[FloatingPointDesigns2.scala 394:228]
        node _new_frac_reg_0_T_15 = gt(postProcess_exp_adder_out_sum_reg[0], UInt<5>("h1e")) @[FloatingPointDesigns2.scala 394:275]
        node _new_frac_reg_0_T_16 = or(_new_frac_reg_0_T_14, _new_frac_reg_0_T_15) @[FloatingPointDesigns2.scala 394:235]
        node _new_frac_reg_0_T_17 = bits(frac_multiplier_out_reg[5], 19, 10) @[FloatingPointDesigns2.scala 394:369]
        node _new_frac_reg_0_T_18 = mux(_new_frac_reg_0_T_16, UInt<10>("h3ff"), _new_frac_reg_0_T_17) @[FloatingPointDesigns2.scala 394:188]
        node _new_frac_reg_0_T_19 = mux(postProcessInstruction_reg[1], _new_frac_reg_0_T_13, _new_frac_reg_0_T_18) @[FloatingPointDesigns2.scala 394:31]
        new_frac_reg[0] <= _new_frac_reg_0_T_19 @[FloatingPointDesigns2.scala 394:25]
      sign_reg[0][0] <= sign_wire[0] @[FloatingPointDesigns2.scala 396:19]
      sign_reg[0][1] <= sign_wire[1] @[FloatingPointDesigns2.scala 396:19]
      exp_reg[0][0] <= exp_wire[0] @[FloatingPointDesigns2.scala 397:18]
      exp_reg[0][1] <= exp_wire[1] @[FloatingPointDesigns2.scala 397:18]
      whole_frac_reg[0][0] <= whole_frac_wire[0] @[FloatingPointDesigns2.scala 398:25]
      whole_frac_reg[0][1] <= whole_frac_wire[1] @[FloatingPointDesigns2.scala 398:25]
      frac_multiplier_out_reg[0] <= frac_multiplier.io.out_s @[FloatingPointDesigns2.scala 399:34]
      postProcess_exp_sub_out_sum_reg[0] <= postProcess_exp_subtractor.io.out_s @[FloatingPointDesigns2.scala 400:42]
      postProcess_exp_sub_out_carry_reg[0] <= postProcess_exp_subtractor.io.out_c @[FloatingPointDesigns2.scala 401:44]
      postProcess_cmpl_out_reg[0] <= postProcess_cmpl.io.out @[FloatingPointDesigns2.scala 402:35]
      new_sign_reg[0] <= new_sign_wire @[FloatingPointDesigns2.scala 403:23]
      postProcessInstruction_reg[0] <= postProcessInstruction_wire @[FloatingPointDesigns2.scala 404:37]
      postProcess_exp_adder_out_sum_reg[0] <= postProcess_exp_adder.io.out_s @[FloatingPointDesigns2.scala 405:44]
      postProcess_exp_adder_out_carry_reg[0] <= postProcess_exp_adder.io.out_c @[FloatingPointDesigns2.scala 406:46]
      exp_reg[1][0] <= exp_reg[0][0] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[1][1] <= exp_reg[0][1] @[FloatingPointDesigns2.scala 408:20]
      frac_multiplier_out_reg[1] <= frac_multiplier_out_reg[0] @[FloatingPointDesigns2.scala 410:38]
      sign_reg[1][0] <= sign_reg[0][0] @[FloatingPointDesigns2.scala 412:25]
      sign_reg[1][1] <= sign_reg[0][1] @[FloatingPointDesigns2.scala 412:25]
      new_sign_reg[1] <= new_sign_reg[0] @[FloatingPointDesigns2.scala 414:31]
      postProcess_cmpl_out_reg[1] <= postProcess_cmpl_out_reg[0] @[FloatingPointDesigns2.scala 416:45]
      whole_frac_reg[1][0] <= whole_frac_reg[0][0] @[FloatingPointDesigns2.scala 418:37]
      whole_frac_reg[1][1] <= whole_frac_reg[0][1] @[FloatingPointDesigns2.scala 418:37]
      postProcessInstruction_reg[1] <= postProcessInstruction_reg[0] @[FloatingPointDesigns2.scala 419:49]
      exp_reg[2][0] <= exp_reg[1][0] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[2][1] <= exp_reg[1][1] @[FloatingPointDesigns2.scala 408:20]
      frac_multiplier_out_reg[2] <= frac_multiplier_out_reg[1] @[FloatingPointDesigns2.scala 410:38]
      sign_reg[2][0] <= sign_reg[1][0] @[FloatingPointDesigns2.scala 412:25]
      sign_reg[2][1] <= sign_reg[1][1] @[FloatingPointDesigns2.scala 412:25]
      new_sign_reg[2] <= new_sign_reg[1] @[FloatingPointDesigns2.scala 414:31]
      postProcess_cmpl_out_reg[2] <= postProcess_cmpl_out_reg[1] @[FloatingPointDesigns2.scala 416:45]
      exp_reg[3][0] <= exp_reg[2][0] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[3][1] <= exp_reg[2][1] @[FloatingPointDesigns2.scala 408:20]
      frac_multiplier_out_reg[3] <= frac_multiplier_out_reg[2] @[FloatingPointDesigns2.scala 410:38]
      sign_reg[3][0] <= sign_reg[2][0] @[FloatingPointDesigns2.scala 412:25]
      sign_reg[3][1] <= sign_reg[2][1] @[FloatingPointDesigns2.scala 412:25]
      new_sign_reg[3] <= new_sign_reg[2] @[FloatingPointDesigns2.scala 414:31]
      exp_reg[4][0] <= exp_reg[3][0] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[4][1] <= exp_reg[3][1] @[FloatingPointDesigns2.scala 408:20]
      frac_multiplier_out_reg[4] <= frac_multiplier_out_reg[3] @[FloatingPointDesigns2.scala 410:38]
      sign_reg[4][0] <= sign_reg[3][0] @[FloatingPointDesigns2.scala 412:25]
      sign_reg[4][1] <= sign_reg[3][1] @[FloatingPointDesigns2.scala 412:25]
      exp_reg[5][0] <= exp_reg[4][0] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[5][1] <= exp_reg[4][1] @[FloatingPointDesigns2.scala 408:20]
      frac_multiplier_out_reg[5] <= frac_multiplier_out_reg[4] @[FloatingPointDesigns2.scala 410:38]
      exp_reg[6][0] <= exp_reg[5][0] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[6][1] <= exp_reg[5][1] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[7][0] <= exp_reg[6][0] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[7][1] <= exp_reg[6][1] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[8][0] <= exp_reg[7][0] @[FloatingPointDesigns2.scala 408:20]
      exp_reg[8][1] <= exp_reg[7][1] @[FloatingPointDesigns2.scala 408:20]
      node _T_16 = eq(exp_reg[8][0], UInt<1>("h0")) @[FloatingPointDesigns2.scala 426:26]
      node _T_17 = eq(exp_reg[8][1], UInt<1>("h0")) @[FloatingPointDesigns2.scala 426:51]
      node _T_18 = or(_T_16, _T_17) @[FloatingPointDesigns2.scala 426:34]
      when _T_18 : @[FloatingPointDesigns2.scala 426:60]
        output_result_reg <= UInt<1>("h0") @[FloatingPointDesigns2.scala 427:27]
      else :
        node _output_result_reg_T = cat(new_sign_reg[3], new_exp_reg[0]) @[FloatingPointDesigns2.scala 429:46]
        node _output_result_reg_T_1 = cat(_output_result_reg_T, new_frac_reg[0]) @[FloatingPointDesigns2.scala 429:64]
        output_result_reg <= _output_result_reg_T_1 @[FloatingPointDesigns2.scala 429:27]
    io.out_s <= output_result_reg @[FloatingPointDesigns2.scala 432:14]

  module TrigRangeReducer :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    inst divider of FP_divider_bw16 @[TrigRangeReducer.scala 24:23]
    divider.clock <= clock
    divider.reset <= reset
    inst extractor of FP_extract @[TrigRangeReducer.scala 25:25]
    extractor.clock <= clock
    extractor.reset <= reset
    inst mul of FP_multiplier_bw16 @[TrigRangeReducer.scala 26:19]
    mul.clock <= clock
    mul.reset <= reset
    divider.io.in_valid <= UInt<1>("h1") @[TrigRangeReducer.scala 36:23]
    divider.io.in_en <= UInt<1>("h1") @[TrigRangeReducer.scala 38:20]
    divider.io.in_a <= io.in @[TrigRangeReducer.scala 39:19]
    divider.io.in_b <= UInt<15>("h4648") @[TrigRangeReducer.scala 40:19]
    reg reg1 : UInt<16>, clock with :
      reset => (UInt<1>("h0"), reg1) @[TrigRangeReducer.scala 42:17]
    reg1 <= divider.io.out_s @[TrigRangeReducer.scala 44:8]
    extractor.io.in_a <= reg1 @[TrigRangeReducer.scala 46:21]
    mul.io.in_en <= UInt<1>("h1") @[TrigRangeReducer.scala 49:16]
    mul.io.in_a <= extractor.io.out_frac @[TrigRangeReducer.scala 50:15]
    mul.io.in_b <= UInt<15>("h4648") @[TrigRangeReducer.scala 51:15]
    io.out <= mul.io.out_s @[TrigRangeReducer.scala 52:10]

  module FloatToFixed16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    node _frac_T = bits(io.in, 9, 0) @[FixedPoint.scala 34:47]
    node frac = cat(UInt<6>("h0"), _frac_T) @[FixedPoint.scala 34:39]
    node exp = bits(io.in, 14, 10) @[FixedPoint.scala 35:25]
    node sign = bits(io.in, 15, 15) @[FixedPoint.scala 36:26]
    node _shiftamt_T = sub(exp, UInt<5>("hf")) @[FixedPoint.scala 37:23]
    node _shiftamt_T_1 = tail(_shiftamt_T, 1) @[FixedPoint.scala 37:23]
    node shiftamt = asSInt(_shiftamt_T_1) @[FixedPoint.scala 37:36]
    node _data_T = bits(shiftamt, 4, 4) @[FixedPoint.scala 39:26]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 39:30]
    node _data_T_2 = bits(frac, 15, 0) @[FixedPoint.scala 40:11]
    node _data_T_3 = or(_data_T_2, UInt<16>("h400")) @[FixedPoint.scala 40:18]
    node _data_T_4 = dshl(_data_T_3, UInt<2>("h2")) @[FixedPoint.scala 40:36]
    node _data_T_5 = sub(asSInt(UInt<1>("h0")), shiftamt) @[FixedPoint.scala 40:48]
    node _data_T_6 = tail(_data_T_5, 1) @[FixedPoint.scala 40:48]
    node _data_T_7 = asSInt(_data_T_6) @[FixedPoint.scala 40:48]
    node _data_T_8 = asUInt(_data_T_7) @[FixedPoint.scala 40:59]
    node _data_T_9 = dshr(_data_T_4, _data_T_8) @[FixedPoint.scala 40:44]
    node _data_T_10 = bits(frac, 15, 0) @[FixedPoint.scala 41:11]
    node _data_T_11 = or(_data_T_10, UInt<16>("h400")) @[FixedPoint.scala 41:18]
    node _data_T_12 = dshl(_data_T_11, UInt<2>("h2")) @[FixedPoint.scala 41:36]
    node _data_T_13 = asUInt(shiftamt) @[FixedPoint.scala 41:58]
    node _data_T_14 = dshl(_data_T_12, _data_T_13) @[FixedPoint.scala 41:44]
    node data = mux(_data_T_1, _data_T_9, _data_T_14) @[FixedPoint.scala 39:17]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 42:22]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h1")) @[FixedPoint.scala 42:27]
    node _io_out_T_2 = sub(UInt<1>("h0"), data) @[FixedPoint.scala 42:40]
    node _io_out_T_3 = tail(_io_out_T_2, 1) @[FixedPoint.scala 42:40]
    node _io_out_T_4 = mux(_io_out_T_1, _io_out_T_3, data) @[FixedPoint.scala 42:16]
    io.out <= _io_out_T_4 @[FixedPoint.scala 42:10]

  module FloatToFixed16_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    node _frac_T = bits(io.in, 9, 0) @[FixedPoint.scala 34:47]
    node frac = cat(UInt<6>("h0"), _frac_T) @[FixedPoint.scala 34:39]
    node exp = bits(io.in, 14, 10) @[FixedPoint.scala 35:25]
    node sign = bits(io.in, 15, 15) @[FixedPoint.scala 36:26]
    node _shiftamt_T = sub(exp, UInt<5>("hf")) @[FixedPoint.scala 37:23]
    node _shiftamt_T_1 = tail(_shiftamt_T, 1) @[FixedPoint.scala 37:23]
    node shiftamt = asSInt(_shiftamt_T_1) @[FixedPoint.scala 37:36]
    node _data_T = bits(shiftamt, 4, 4) @[FixedPoint.scala 39:26]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 39:30]
    node _data_T_2 = bits(frac, 15, 0) @[FixedPoint.scala 40:11]
    node _data_T_3 = or(_data_T_2, UInt<16>("h400")) @[FixedPoint.scala 40:18]
    node _data_T_4 = dshl(_data_T_3, UInt<2>("h2")) @[FixedPoint.scala 40:36]
    node _data_T_5 = sub(asSInt(UInt<1>("h0")), shiftamt) @[FixedPoint.scala 40:48]
    node _data_T_6 = tail(_data_T_5, 1) @[FixedPoint.scala 40:48]
    node _data_T_7 = asSInt(_data_T_6) @[FixedPoint.scala 40:48]
    node _data_T_8 = asUInt(_data_T_7) @[FixedPoint.scala 40:59]
    node _data_T_9 = dshr(_data_T_4, _data_T_8) @[FixedPoint.scala 40:44]
    node _data_T_10 = bits(frac, 15, 0) @[FixedPoint.scala 41:11]
    node _data_T_11 = or(_data_T_10, UInt<16>("h400")) @[FixedPoint.scala 41:18]
    node _data_T_12 = dshl(_data_T_11, UInt<2>("h2")) @[FixedPoint.scala 41:36]
    node _data_T_13 = asUInt(shiftamt) @[FixedPoint.scala 41:58]
    node _data_T_14 = dshl(_data_T_12, _data_T_13) @[FixedPoint.scala 41:44]
    node data = mux(_data_T_1, _data_T_9, _data_T_14) @[FixedPoint.scala 39:17]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 42:22]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h1")) @[FixedPoint.scala 42:27]
    node _io_out_T_2 = sub(UInt<1>("h0"), data) @[FixedPoint.scala 42:40]
    node _io_out_T_3 = tail(_io_out_T_2, 1) @[FixedPoint.scala 42:40]
    node _io_out_T_4 = mux(_io_out_T_1, _io_out_T_3, data) @[FixedPoint.scala 42:16]
    io.out <= _io_out_T_4 @[FixedPoint.scala 42:10]

  module FloatToFixed16_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    node _frac_T = bits(io.in, 9, 0) @[FixedPoint.scala 34:47]
    node frac = cat(UInt<6>("h0"), _frac_T) @[FixedPoint.scala 34:39]
    node exp = bits(io.in, 14, 10) @[FixedPoint.scala 35:25]
    node sign = bits(io.in, 15, 15) @[FixedPoint.scala 36:26]
    node _shiftamt_T = sub(exp, UInt<5>("hf")) @[FixedPoint.scala 37:23]
    node _shiftamt_T_1 = tail(_shiftamt_T, 1) @[FixedPoint.scala 37:23]
    node shiftamt = asSInt(_shiftamt_T_1) @[FixedPoint.scala 37:36]
    node _data_T = bits(shiftamt, 4, 4) @[FixedPoint.scala 39:26]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 39:30]
    node _data_T_2 = bits(frac, 15, 0) @[FixedPoint.scala 40:11]
    node _data_T_3 = or(_data_T_2, UInt<16>("h400")) @[FixedPoint.scala 40:18]
    node _data_T_4 = dshl(_data_T_3, UInt<2>("h2")) @[FixedPoint.scala 40:36]
    node _data_T_5 = sub(asSInt(UInt<1>("h0")), shiftamt) @[FixedPoint.scala 40:48]
    node _data_T_6 = tail(_data_T_5, 1) @[FixedPoint.scala 40:48]
    node _data_T_7 = asSInt(_data_T_6) @[FixedPoint.scala 40:48]
    node _data_T_8 = asUInt(_data_T_7) @[FixedPoint.scala 40:59]
    node _data_T_9 = dshr(_data_T_4, _data_T_8) @[FixedPoint.scala 40:44]
    node _data_T_10 = bits(frac, 15, 0) @[FixedPoint.scala 41:11]
    node _data_T_11 = or(_data_T_10, UInt<16>("h400")) @[FixedPoint.scala 41:18]
    node _data_T_12 = dshl(_data_T_11, UInt<2>("h2")) @[FixedPoint.scala 41:36]
    node _data_T_13 = asUInt(shiftamt) @[FixedPoint.scala 41:58]
    node _data_T_14 = dshl(_data_T_12, _data_T_13) @[FixedPoint.scala 41:44]
    node data = mux(_data_T_1, _data_T_9, _data_T_14) @[FixedPoint.scala 39:17]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 42:22]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h1")) @[FixedPoint.scala 42:27]
    node _io_out_T_2 = sub(UInt<1>("h0"), data) @[FixedPoint.scala 42:40]
    node _io_out_T_3 = tail(_io_out_T_2, 1) @[FixedPoint.scala 42:40]
    node _io_out_T_4 = mux(_io_out_T_1, _io_out_T_3, data) @[FixedPoint.scala 42:16]
    io.out <= _io_out_T_4 @[FixedPoint.scala 42:10]

  module CLZ16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<4>}

    node _bx_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 135:20]
    node _bx_T_1 = eq(_bx_T, UInt<1>("h0")) @[FixedPoint.scala 135:33]
    node _bx_T_2 = shl(io.in, 8) @[FixedPoint.scala 135:45]
    node bx = mux(_bx_T_1, _bx_T_2, io.in) @[FixedPoint.scala 135:15]
    node _cx_T = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 136:20]
    node _cx_T_1 = eq(_cx_T, UInt<1>("h0")) @[FixedPoint.scala 136:33]
    node _cx_T_2 = shl(bx, 4) @[FixedPoint.scala 136:45]
    node cx = mux(_cx_T_1, _cx_T_2, bx) @[FixedPoint.scala 136:15]
    node _dx_T = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 137:20]
    node _dx_T_1 = eq(_dx_T, UInt<1>("h0")) @[FixedPoint.scala 137:33]
    node _dx_T_2 = shl(cx, 2) @[FixedPoint.scala 137:45]
    node dx = mux(_dx_T_1, _dx_T_2, cx) @[FixedPoint.scala 137:15]
    node _io_out_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 139:18]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h0")) @[FixedPoint.scala 139:31]
    node _io_out_T_2 = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 139:48]
    node _io_out_T_3 = eq(_io_out_T_2, UInt<1>("h0")) @[FixedPoint.scala 139:61]
    node _io_out_T_4 = cat(_io_out_T_1, _io_out_T_3) @[FixedPoint.scala 139:40]
    node _io_out_T_5 = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 139:78]
    node _io_out_T_6 = eq(_io_out_T_5, UInt<1>("h0")) @[FixedPoint.scala 139:91]
    node _io_out_T_7 = cat(_io_out_T_4, _io_out_T_6) @[FixedPoint.scala 139:70]
    node _io_out_T_8 = and(dx, UInt<16>("h8000")) @[FixedPoint.scala 140:10]
    node _io_out_T_9 = eq(_io_out_T_8, UInt<1>("h0")) @[FixedPoint.scala 140:23]
    node _io_out_T_10 = cat(_io_out_T_7, _io_out_T_9) @[FixedPoint.scala 139:100]
    io.out <= _io_out_T_10 @[FixedPoint.scala 139:10]

  module FixedToFloat16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    wire sign : SInt<1> @[FixedPoint.scala 239:19]
    wire exp : SInt<5> @[FixedPoint.scala 240:17]
    wire frac : SInt<10> @[FixedPoint.scala 241:18]
    wire data : UInt<16> @[FixedPoint.scala 243:18]
    node _data_T = bits(io.in, 15, 15) @[FixedPoint.scala 244:20]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 244:25]
    node _data_T_2 = not(io.in) @[FixedPoint.scala 244:35]
    node _data_T_3 = add(_data_T_2, UInt<1>("h1")) @[FixedPoint.scala 244:50]
    node _data_T_4 = tail(_data_T_3, 1) @[FixedPoint.scala 244:50]
    node _data_T_5 = mux(_data_T_1, _data_T_4, io.in) @[FixedPoint.scala 244:14]
    data <= _data_T_5 @[FixedPoint.scala 244:8]
    node _sign_T = bits(io.in, 15, 15) @[FixedPoint.scala 245:16]
    node _sign_T_1 = asSInt(_sign_T) @[FixedPoint.scala 245:21]
    sign <= _sign_T_1 @[FixedPoint.scala 245:8]
    inst clz16 of CLZ16 @[FixedPoint.scala 247:21]
    clz16.clock <= clock
    clz16.reset <= reset
    clz16.io.in <= data @[FixedPoint.scala 248:15]
    wire leadingzeros : UInt<19> @[FixedPoint.scala 249:26]
    node _leadingzeros_T = bits(clz16.io.out, 3, 0) @[FixedPoint.scala 250:47]
    node _leadingzeros_T_1 = cat(UInt<15>("h0"), _leadingzeros_T) @[FixedPoint.scala 250:32]
    leadingzeros <= _leadingzeros_T_1 @[FixedPoint.scala 250:16]
    node _exp_T = sub(asSInt(UInt<4>("h4")), asSInt(UInt<2>("h1"))) @[FixedPoint.scala 252:16]
    node _exp_T_1 = tail(_exp_T, 1) @[FixedPoint.scala 252:16]
    node _exp_T_2 = asSInt(_exp_T_1) @[FixedPoint.scala 252:16]
    node _exp_T_3 = asSInt(leadingzeros) @[FixedPoint.scala 252:38]
    node _exp_T_4 = sub(_exp_T_2, _exp_T_3) @[FixedPoint.scala 252:23]
    node _exp_T_5 = tail(_exp_T_4, 1) @[FixedPoint.scala 252:23]
    node _exp_T_6 = asSInt(_exp_T_5) @[FixedPoint.scala 252:23]
    node _exp_T_7 = add(_exp_T_6, asSInt(UInt<5>("hf"))) @[FixedPoint.scala 252:46]
    node _exp_T_8 = tail(_exp_T_7, 1) @[FixedPoint.scala 252:46]
    node _exp_T_9 = asSInt(_exp_T_8) @[FixedPoint.scala 252:46]
    exp <= _exp_T_9 @[FixedPoint.scala 252:7]
    node _frac_T = asSInt(data) @[FixedPoint.scala 253:19]
    node _frac_T_1 = add(leadingzeros, UInt<1>("h1")) @[FixedPoint.scala 253:43]
    node _frac_T_2 = tail(_frac_T_1, 1) @[FixedPoint.scala 253:43]
    node _frac_T_3 = dshl(_frac_T, _frac_T_2) @[FixedPoint.scala 253:26]
    node _frac_T_4 = sub(UInt<5>("h10"), UInt<4>("ha")) @[FixedPoint.scala 253:75]
    node _frac_T_5 = tail(_frac_T_4, 1) @[FixedPoint.scala 253:75]
    node _frac_T_6 = dshr(_frac_T_3, _frac_T_5) @[FixedPoint.scala 253:66]
    frac <= _frac_T_6 @[FixedPoint.scala 253:8]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 255:18]
    node _io_out_T_1 = asUInt(exp) @[FixedPoint.scala 255:30]
    node _io_out_T_2 = cat(_io_out_T, _io_out_T_1) @[FixedPoint.scala 255:23]
    node _io_out_T_3 = bits(frac, 9, 0) @[FixedPoint.scala 255:44]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[FixedPoint.scala 255:37]
    io.out <= _io_out_T_4 @[FixedPoint.scala 255:10]

  module CLZ16_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<4>}

    node _bx_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 135:20]
    node _bx_T_1 = eq(_bx_T, UInt<1>("h0")) @[FixedPoint.scala 135:33]
    node _bx_T_2 = shl(io.in, 8) @[FixedPoint.scala 135:45]
    node bx = mux(_bx_T_1, _bx_T_2, io.in) @[FixedPoint.scala 135:15]
    node _cx_T = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 136:20]
    node _cx_T_1 = eq(_cx_T, UInt<1>("h0")) @[FixedPoint.scala 136:33]
    node _cx_T_2 = shl(bx, 4) @[FixedPoint.scala 136:45]
    node cx = mux(_cx_T_1, _cx_T_2, bx) @[FixedPoint.scala 136:15]
    node _dx_T = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 137:20]
    node _dx_T_1 = eq(_dx_T, UInt<1>("h0")) @[FixedPoint.scala 137:33]
    node _dx_T_2 = shl(cx, 2) @[FixedPoint.scala 137:45]
    node dx = mux(_dx_T_1, _dx_T_2, cx) @[FixedPoint.scala 137:15]
    node _io_out_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 139:18]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h0")) @[FixedPoint.scala 139:31]
    node _io_out_T_2 = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 139:48]
    node _io_out_T_3 = eq(_io_out_T_2, UInt<1>("h0")) @[FixedPoint.scala 139:61]
    node _io_out_T_4 = cat(_io_out_T_1, _io_out_T_3) @[FixedPoint.scala 139:40]
    node _io_out_T_5 = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 139:78]
    node _io_out_T_6 = eq(_io_out_T_5, UInt<1>("h0")) @[FixedPoint.scala 139:91]
    node _io_out_T_7 = cat(_io_out_T_4, _io_out_T_6) @[FixedPoint.scala 139:70]
    node _io_out_T_8 = and(dx, UInt<16>("h8000")) @[FixedPoint.scala 140:10]
    node _io_out_T_9 = eq(_io_out_T_8, UInt<1>("h0")) @[FixedPoint.scala 140:23]
    node _io_out_T_10 = cat(_io_out_T_7, _io_out_T_9) @[FixedPoint.scala 139:100]
    io.out <= _io_out_T_10 @[FixedPoint.scala 139:10]

  module FixedToFloat16_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    wire sign : SInt<1> @[FixedPoint.scala 239:19]
    wire exp : SInt<5> @[FixedPoint.scala 240:17]
    wire frac : SInt<10> @[FixedPoint.scala 241:18]
    wire data : UInt<16> @[FixedPoint.scala 243:18]
    node _data_T = bits(io.in, 15, 15) @[FixedPoint.scala 244:20]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 244:25]
    node _data_T_2 = not(io.in) @[FixedPoint.scala 244:35]
    node _data_T_3 = add(_data_T_2, UInt<1>("h1")) @[FixedPoint.scala 244:50]
    node _data_T_4 = tail(_data_T_3, 1) @[FixedPoint.scala 244:50]
    node _data_T_5 = mux(_data_T_1, _data_T_4, io.in) @[FixedPoint.scala 244:14]
    data <= _data_T_5 @[FixedPoint.scala 244:8]
    node _sign_T = bits(io.in, 15, 15) @[FixedPoint.scala 245:16]
    node _sign_T_1 = asSInt(_sign_T) @[FixedPoint.scala 245:21]
    sign <= _sign_T_1 @[FixedPoint.scala 245:8]
    inst clz16 of CLZ16_1 @[FixedPoint.scala 247:21]
    clz16.clock <= clock
    clz16.reset <= reset
    clz16.io.in <= data @[FixedPoint.scala 248:15]
    wire leadingzeros : UInt<19> @[FixedPoint.scala 249:26]
    node _leadingzeros_T = bits(clz16.io.out, 3, 0) @[FixedPoint.scala 250:47]
    node _leadingzeros_T_1 = cat(UInt<15>("h0"), _leadingzeros_T) @[FixedPoint.scala 250:32]
    leadingzeros <= _leadingzeros_T_1 @[FixedPoint.scala 250:16]
    node _exp_T = sub(asSInt(UInt<4>("h4")), asSInt(UInt<2>("h1"))) @[FixedPoint.scala 252:16]
    node _exp_T_1 = tail(_exp_T, 1) @[FixedPoint.scala 252:16]
    node _exp_T_2 = asSInt(_exp_T_1) @[FixedPoint.scala 252:16]
    node _exp_T_3 = asSInt(leadingzeros) @[FixedPoint.scala 252:38]
    node _exp_T_4 = sub(_exp_T_2, _exp_T_3) @[FixedPoint.scala 252:23]
    node _exp_T_5 = tail(_exp_T_4, 1) @[FixedPoint.scala 252:23]
    node _exp_T_6 = asSInt(_exp_T_5) @[FixedPoint.scala 252:23]
    node _exp_T_7 = add(_exp_T_6, asSInt(UInt<5>("hf"))) @[FixedPoint.scala 252:46]
    node _exp_T_8 = tail(_exp_T_7, 1) @[FixedPoint.scala 252:46]
    node _exp_T_9 = asSInt(_exp_T_8) @[FixedPoint.scala 252:46]
    exp <= _exp_T_9 @[FixedPoint.scala 252:7]
    node _frac_T = asSInt(data) @[FixedPoint.scala 253:19]
    node _frac_T_1 = add(leadingzeros, UInt<1>("h1")) @[FixedPoint.scala 253:43]
    node _frac_T_2 = tail(_frac_T_1, 1) @[FixedPoint.scala 253:43]
    node _frac_T_3 = dshl(_frac_T, _frac_T_2) @[FixedPoint.scala 253:26]
    node _frac_T_4 = sub(UInt<5>("h10"), UInt<4>("ha")) @[FixedPoint.scala 253:75]
    node _frac_T_5 = tail(_frac_T_4, 1) @[FixedPoint.scala 253:75]
    node _frac_T_6 = dshr(_frac_T_3, _frac_T_5) @[FixedPoint.scala 253:66]
    frac <= _frac_T_6 @[FixedPoint.scala 253:8]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 255:18]
    node _io_out_T_1 = asUInt(exp) @[FixedPoint.scala 255:30]
    node _io_out_T_2 = cat(_io_out_T, _io_out_T_1) @[FixedPoint.scala 255:23]
    node _io_out_T_3 = bits(frac, 9, 0) @[FixedPoint.scala 255:44]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[FixedPoint.scala 255:37]
    io.out <= _io_out_T_4 @[FixedPoint.scala 255:10]

  module CLZ16_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<4>}

    node _bx_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 135:20]
    node _bx_T_1 = eq(_bx_T, UInt<1>("h0")) @[FixedPoint.scala 135:33]
    node _bx_T_2 = shl(io.in, 8) @[FixedPoint.scala 135:45]
    node bx = mux(_bx_T_1, _bx_T_2, io.in) @[FixedPoint.scala 135:15]
    node _cx_T = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 136:20]
    node _cx_T_1 = eq(_cx_T, UInt<1>("h0")) @[FixedPoint.scala 136:33]
    node _cx_T_2 = shl(bx, 4) @[FixedPoint.scala 136:45]
    node cx = mux(_cx_T_1, _cx_T_2, bx) @[FixedPoint.scala 136:15]
    node _dx_T = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 137:20]
    node _dx_T_1 = eq(_dx_T, UInt<1>("h0")) @[FixedPoint.scala 137:33]
    node _dx_T_2 = shl(cx, 2) @[FixedPoint.scala 137:45]
    node dx = mux(_dx_T_1, _dx_T_2, cx) @[FixedPoint.scala 137:15]
    node _io_out_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 139:18]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h0")) @[FixedPoint.scala 139:31]
    node _io_out_T_2 = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 139:48]
    node _io_out_T_3 = eq(_io_out_T_2, UInt<1>("h0")) @[FixedPoint.scala 139:61]
    node _io_out_T_4 = cat(_io_out_T_1, _io_out_T_3) @[FixedPoint.scala 139:40]
    node _io_out_T_5 = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 139:78]
    node _io_out_T_6 = eq(_io_out_T_5, UInt<1>("h0")) @[FixedPoint.scala 139:91]
    node _io_out_T_7 = cat(_io_out_T_4, _io_out_T_6) @[FixedPoint.scala 139:70]
    node _io_out_T_8 = and(dx, UInt<16>("h8000")) @[FixedPoint.scala 140:10]
    node _io_out_T_9 = eq(_io_out_T_8, UInt<1>("h0")) @[FixedPoint.scala 140:23]
    node _io_out_T_10 = cat(_io_out_T_7, _io_out_T_9) @[FixedPoint.scala 139:100]
    io.out <= _io_out_T_10 @[FixedPoint.scala 139:10]

  module FixedToFloat16_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    wire sign : SInt<1> @[FixedPoint.scala 239:19]
    wire exp : SInt<5> @[FixedPoint.scala 240:17]
    wire frac : SInt<10> @[FixedPoint.scala 241:18]
    wire data : UInt<16> @[FixedPoint.scala 243:18]
    node _data_T = bits(io.in, 15, 15) @[FixedPoint.scala 244:20]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 244:25]
    node _data_T_2 = not(io.in) @[FixedPoint.scala 244:35]
    node _data_T_3 = add(_data_T_2, UInt<1>("h1")) @[FixedPoint.scala 244:50]
    node _data_T_4 = tail(_data_T_3, 1) @[FixedPoint.scala 244:50]
    node _data_T_5 = mux(_data_T_1, _data_T_4, io.in) @[FixedPoint.scala 244:14]
    data <= _data_T_5 @[FixedPoint.scala 244:8]
    node _sign_T = bits(io.in, 15, 15) @[FixedPoint.scala 245:16]
    node _sign_T_1 = asSInt(_sign_T) @[FixedPoint.scala 245:21]
    sign <= _sign_T_1 @[FixedPoint.scala 245:8]
    inst clz16 of CLZ16_2 @[FixedPoint.scala 247:21]
    clz16.clock <= clock
    clz16.reset <= reset
    clz16.io.in <= data @[FixedPoint.scala 248:15]
    wire leadingzeros : UInt<19> @[FixedPoint.scala 249:26]
    node _leadingzeros_T = bits(clz16.io.out, 3, 0) @[FixedPoint.scala 250:47]
    node _leadingzeros_T_1 = cat(UInt<15>("h0"), _leadingzeros_T) @[FixedPoint.scala 250:32]
    leadingzeros <= _leadingzeros_T_1 @[FixedPoint.scala 250:16]
    node _exp_T = sub(asSInt(UInt<4>("h4")), asSInt(UInt<2>("h1"))) @[FixedPoint.scala 252:16]
    node _exp_T_1 = tail(_exp_T, 1) @[FixedPoint.scala 252:16]
    node _exp_T_2 = asSInt(_exp_T_1) @[FixedPoint.scala 252:16]
    node _exp_T_3 = asSInt(leadingzeros) @[FixedPoint.scala 252:38]
    node _exp_T_4 = sub(_exp_T_2, _exp_T_3) @[FixedPoint.scala 252:23]
    node _exp_T_5 = tail(_exp_T_4, 1) @[FixedPoint.scala 252:23]
    node _exp_T_6 = asSInt(_exp_T_5) @[FixedPoint.scala 252:23]
    node _exp_T_7 = add(_exp_T_6, asSInt(UInt<5>("hf"))) @[FixedPoint.scala 252:46]
    node _exp_T_8 = tail(_exp_T_7, 1) @[FixedPoint.scala 252:46]
    node _exp_T_9 = asSInt(_exp_T_8) @[FixedPoint.scala 252:46]
    exp <= _exp_T_9 @[FixedPoint.scala 252:7]
    node _frac_T = asSInt(data) @[FixedPoint.scala 253:19]
    node _frac_T_1 = add(leadingzeros, UInt<1>("h1")) @[FixedPoint.scala 253:43]
    node _frac_T_2 = tail(_frac_T_1, 1) @[FixedPoint.scala 253:43]
    node _frac_T_3 = dshl(_frac_T, _frac_T_2) @[FixedPoint.scala 253:26]
    node _frac_T_4 = sub(UInt<5>("h10"), UInt<4>("ha")) @[FixedPoint.scala 253:75]
    node _frac_T_5 = tail(_frac_T_4, 1) @[FixedPoint.scala 253:75]
    node _frac_T_6 = dshr(_frac_T_3, _frac_T_5) @[FixedPoint.scala 253:66]
    frac <= _frac_T_6 @[FixedPoint.scala 253:8]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 255:18]
    node _io_out_T_1 = asUInt(exp) @[FixedPoint.scala 255:30]
    node _io_out_T_2 = cat(_io_out_T, _io_out_T_1) @[FixedPoint.scala 255:23]
    node _io_out_T_3 = bits(frac, 9, 0) @[FixedPoint.scala 255:44]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[FixedPoint.scala 255:37]
    io.out <= _io_out_T_4 @[FixedPoint.scala 255:10]

  module CORDIC :
    input clock : Clock
    input reset : Reset
    output io : { flip in_x0 : UInt<16>, flip in_y0 : UInt<16>, flip in_z0 : UInt<16>, flip in_mode : UInt<16>, out_x : UInt<16>, out_y : UInt<16>, out_z : UInt<16>, out_mode : UInt<2>}

    wire atantable16 : UInt<16>[16] @[CORDIC.scala 65:25]
    atantable16[0] <= UInt<12>("hc91") @[CORDIC.scala 66:18]
    atantable16[1] <= UInt<11>("h648") @[CORDIC.scala 67:18]
    atantable16[2] <= UInt<10>("h324") @[CORDIC.scala 68:18]
    atantable16[3] <= UInt<9>("h192") @[CORDIC.scala 69:18]
    atantable16[4] <= UInt<8>("hc9") @[CORDIC.scala 70:18]
    atantable16[5] <= UInt<7>("h65") @[CORDIC.scala 71:18]
    atantable16[6] <= UInt<6>("h32") @[CORDIC.scala 72:18]
    atantable16[7] <= UInt<5>("h19") @[CORDIC.scala 73:18]
    atantable16[8] <= UInt<4>("hd") @[CORDIC.scala 74:18]
    atantable16[9] <= UInt<3>("h6") @[CORDIC.scala 75:18]
    atantable16[10] <= UInt<2>("h3") @[CORDIC.scala 76:19]
    atantable16[11] <= UInt<2>("h2") @[CORDIC.scala 77:19]
    atantable16[12] <= UInt<1>("h1") @[CORDIC.scala 78:19]
    atantable16[13] <= UInt<1>("h0") @[CORDIC.scala 79:19]
    atantable16[14] <= UInt<1>("h0") @[CORDIC.scala 80:19]
    atantable16[15] <= UInt<1>("h0") @[CORDIC.scala 81:19]
    wire atantable : UInt<32>[32] @[CORDIC.scala 84:23]
    atantable[0] <= UInt<28>("hc90fdb0") @[CORDIC.scala 85:16]
    atantable[1] <= UInt<27>("h76b19c0") @[CORDIC.scala 86:16]
    atantable[2] <= UInt<26>("h3eb6ec0") @[CORDIC.scala 87:16]
    atantable[3] <= UInt<25>("h1fd5baa") @[CORDIC.scala 88:16]
    atantable[4] <= UInt<24>("hffaade") @[CORDIC.scala 89:16]
    atantable[5] <= UInt<23>("h7ff557") @[CORDIC.scala 90:16]
    atantable[6] <= UInt<22>("h3ffeaa") @[CORDIC.scala 91:16]
    atantable[7] <= UInt<21>("h1fffd5") @[CORDIC.scala 92:16]
    atantable[8] <= UInt<20>("hffffa") @[CORDIC.scala 93:16]
    atantable[9] <= UInt<19>("h7ffff") @[CORDIC.scala 94:16]
    atantable[10] <= UInt<18>("h3ffff") @[CORDIC.scala 95:17]
    atantable[11] <= UInt<17>("h1ffff") @[CORDIC.scala 96:17]
    atantable[12] <= UInt<17>("h10000") @[CORDIC.scala 97:17]
    atantable[13] <= UInt<16>("h8000") @[CORDIC.scala 98:17]
    atantable[14] <= UInt<15>("h4000") @[CORDIC.scala 99:17]
    atantable[15] <= UInt<14>("h2000") @[CORDIC.scala 100:17]
    atantable[16] <= UInt<13>("h1000") @[CORDIC.scala 101:17]
    atantable[17] <= UInt<12>("h800") @[CORDIC.scala 102:17]
    atantable[18] <= UInt<11>("h400") @[CORDIC.scala 103:17]
    atantable[19] <= UInt<10>("h200") @[CORDIC.scala 104:17]
    atantable[20] <= UInt<9>("h100") @[CORDIC.scala 105:17]
    atantable[21] <= UInt<8>("h80") @[CORDIC.scala 106:17]
    atantable[22] <= UInt<7>("h40") @[CORDIC.scala 107:17]
    atantable[23] <= UInt<6>("h20") @[CORDIC.scala 108:17]
    atantable[24] <= UInt<5>("h10") @[CORDIC.scala 109:17]
    atantable[25] <= UInt<4>("h8") @[CORDIC.scala 110:17]
    atantable[26] <= UInt<3>("h4") @[CORDIC.scala 111:17]
    atantable[27] <= UInt<2>("h2") @[CORDIC.scala 112:17]
    atantable[28] <= UInt<1>("h1") @[CORDIC.scala 113:17]
    atantable[29] <= UInt<1>("h0") @[CORDIC.scala 114:17]
    atantable[30] <= UInt<1>("h0") @[CORDIC.scala 115:17]
    atantable[31] <= UInt<30>("h3243f6c0") @[CORDIC.scala 116:17]
    wire atantable64 : UInt<64>[64] @[CORDIC.scala 120:25]
    atantable64[0] <= UInt<60>("hc90fdaa22168c00") @[CORDIC.scala 121:18]
    atantable64[1] <= UInt<59>("h76b19c1586ed3c0") @[CORDIC.scala 122:18]
    atantable64[2] <= UInt<58>("h3eb6ebf25901ba0") @[CORDIC.scala 123:18]
    atantable64[3] <= UInt<57>("h1fd5ba9aac2f6e0") @[CORDIC.scala 124:18]
    atantable64[4] <= UInt<56>("hffaaddb967ef50") @[CORDIC.scala 125:18]
    atantable64[5] <= UInt<55>("h7ff556eea5d894") @[CORDIC.scala 126:18]
    atantable64[6] <= UInt<54>("h3ffeaab776e536") @[CORDIC.scala 127:18]
    atantable64[7] <= UInt<53>("h1fffd555bbba97") @[CORDIC.scala 128:18]
    atantable64[8] <= UInt<52>("hffffaaaaddddb") @[CORDIC.scala 129:18]
    atantable64[9] <= UInt<51>("h7ffff55556eef") @[CORDIC.scala 130:18]
    atantable64[10] <= UInt<50>("h3ffffeaaaab77") @[CORDIC.scala 131:19]
    atantable64[11] <= UInt<49>("h1fffffd55555b") @[CORDIC.scala 132:19]
    atantable64[12] <= UInt<48>("hffffffaaaaaa") @[CORDIC.scala 133:19]
    atantable64[13] <= UInt<47>("h7ffffff55555") @[CORDIC.scala 134:19]
    atantable64[14] <= UInt<46>("h3ffffffeaaaa") @[CORDIC.scala 135:19]
    atantable64[15] <= UInt<45>("h1fffffffd555") @[CORDIC.scala 136:19]
    atantable64[16] <= UInt<44>("hffffffffaaa") @[CORDIC.scala 137:19]
    atantable64[17] <= UInt<43>("h7ffffffff55") @[CORDIC.scala 138:19]
    atantable64[18] <= UInt<42>("h3ffffffffea") @[CORDIC.scala 139:19]
    atantable64[19] <= UInt<41>("h1fffffffffd") @[CORDIC.scala 140:19]
    atantable64[20] <= UInt<40>("hffffffffff") @[CORDIC.scala 141:19]
    atantable64[21] <= UInt<39>("h7fffffffff") @[CORDIC.scala 142:19]
    atantable64[22] <= UInt<38>("h3fffffffff") @[CORDIC.scala 143:19]
    atantable64[23] <= UInt<37>("h1fffffffff") @[CORDIC.scala 144:19]
    atantable64[24] <= UInt<36>("hfffffffff") @[CORDIC.scala 145:19]
    atantable64[25] <= UInt<35>("h7ffffffff") @[CORDIC.scala 146:19]
    atantable64[26] <= UInt<34>("h3ffffffff") @[CORDIC.scala 147:19]
    atantable64[27] <= UInt<34>("h200000000") @[CORDIC.scala 148:19]
    atantable64[28] <= UInt<33>("h100000000") @[CORDIC.scala 149:19]
    atantable64[29] <= UInt<32>("h80000000") @[CORDIC.scala 150:19]
    atantable64[30] <= UInt<31>("h40000000") @[CORDIC.scala 151:19]
    atantable64[31] <= UInt<30>("h20000000") @[CORDIC.scala 152:19]
    atantable64[32] <= UInt<29>("h10000000") @[CORDIC.scala 153:19]
    atantable64[33] <= UInt<28>("h8000000") @[CORDIC.scala 154:19]
    atantable64[34] <= UInt<27>("h4000000") @[CORDIC.scala 155:19]
    atantable64[35] <= UInt<26>("h2000000") @[CORDIC.scala 156:19]
    atantable64[36] <= UInt<25>("h1000000") @[CORDIC.scala 157:19]
    atantable64[37] <= UInt<24>("h800000") @[CORDIC.scala 158:19]
    atantable64[38] <= UInt<23>("h400000") @[CORDIC.scala 159:19]
    atantable64[39] <= UInt<22>("h200000") @[CORDIC.scala 160:19]
    atantable64[40] <= UInt<21>("h100000") @[CORDIC.scala 161:19]
    atantable64[41] <= UInt<20>("h80000") @[CORDIC.scala 162:19]
    atantable64[42] <= UInt<19>("h40000") @[CORDIC.scala 163:19]
    atantable64[43] <= UInt<18>("h20000") @[CORDIC.scala 164:19]
    atantable64[44] <= UInt<17>("h10000") @[CORDIC.scala 165:19]
    atantable64[45] <= UInt<16>("h8000") @[CORDIC.scala 166:19]
    atantable64[46] <= UInt<15>("h4000") @[CORDIC.scala 167:19]
    atantable64[47] <= UInt<14>("h2000") @[CORDIC.scala 168:19]
    atantable64[48] <= UInt<13>("h1000") @[CORDIC.scala 169:19]
    atantable64[49] <= UInt<12>("h800") @[CORDIC.scala 170:19]
    atantable64[50] <= UInt<11>("h400") @[CORDIC.scala 171:19]
    atantable64[51] <= UInt<10>("h200") @[CORDIC.scala 172:19]
    atantable64[52] <= UInt<9>("h100") @[CORDIC.scala 173:19]
    atantable64[53] <= UInt<8>("h80") @[CORDIC.scala 174:19]
    atantable64[54] <= UInt<7>("h40") @[CORDIC.scala 175:19]
    atantable64[55] <= UInt<6>("h20") @[CORDIC.scala 176:19]
    atantable64[56] <= UInt<5>("h10") @[CORDIC.scala 177:19]
    atantable64[57] <= UInt<4>("h8") @[CORDIC.scala 178:19]
    atantable64[58] <= UInt<3>("h4") @[CORDIC.scala 179:19]
    atantable64[59] <= UInt<2>("h2") @[CORDIC.scala 180:19]
    atantable64[60] <= UInt<1>("h1") @[CORDIC.scala 181:19]
    atantable64[61] <= UInt<1>("h0") @[CORDIC.scala 182:19]
    atantable64[62] <= UInt<1>("h0") @[CORDIC.scala 183:19]
    atantable64[63] <= UInt<1>("h0") @[CORDIC.scala 184:19]
    wire atantable128_64 : UInt<128>[64] @[CORDIC.scala 194:29]
    atantable128_64[0] <= UInt<128>("hc90fdaa22168c000") @[CORDIC.scala 197:22]
    atantable128_64[1] <= UInt<128>("h76b19c1586ed3c00") @[CORDIC.scala 198:22]
    atantable128_64[2] <= UInt<128>("h3eb6ebf25901ba00") @[CORDIC.scala 199:22]
    atantable128_64[3] <= UInt<128>("h1fd5ba9aac2f6e00") @[CORDIC.scala 200:22]
    atantable128_64[4] <= UInt<128>("hffaaddb967ef500") @[CORDIC.scala 201:22]
    atantable128_64[5] <= UInt<128>("h7ff556eea5d8940") @[CORDIC.scala 202:22]
    atantable128_64[6] <= UInt<128>("h3ffeaab776e5360") @[CORDIC.scala 203:22]
    atantable128_64[7] <= UInt<128>("h1fffd555bbba970") @[CORDIC.scala 204:22]
    atantable128_64[8] <= UInt<128>("hffffaaaaddddb8") @[CORDIC.scala 205:22]
    atantable128_64[9] <= UInt<128>("h7ffff55556eef0") @[CORDIC.scala 206:22]
    atantable128_64[10] <= UInt<128>("h3ffffeaaaab778") @[CORDIC.scala 207:23]
    atantable128_64[11] <= UInt<128>("h1fffffd55555bc") @[CORDIC.scala 208:23]
    atantable128_64[12] <= UInt<128>("hffffffaaaaaae") @[CORDIC.scala 209:23]
    atantable128_64[13] <= UInt<128>("h7ffffff555555") @[CORDIC.scala 210:23]
    atantable128_64[14] <= UInt<128>("h3ffffffeaaaaa") @[CORDIC.scala 211:23]
    atantable128_64[15] <= UInt<128>("h1fffffffd5555") @[CORDIC.scala 212:23]
    atantable128_64[16] <= UInt<128>("hffffffffaaaa") @[CORDIC.scala 213:23]
    atantable128_64[17] <= UInt<128>("h7ffffffff555") @[CORDIC.scala 214:23]
    atantable128_64[18] <= UInt<128>("h3ffffffffeaa") @[CORDIC.scala 215:23]
    atantable128_64[19] <= UInt<128>("h1fffffffffd5") @[CORDIC.scala 216:23]
    atantable128_64[20] <= UInt<128>("hffffffffffa") @[CORDIC.scala 217:23]
    atantable128_64[21] <= UInt<128>("h7ffffffffff") @[CORDIC.scala 218:23]
    atantable128_64[22] <= UInt<128>("h3ffffffffff") @[CORDIC.scala 219:23]
    atantable128_64[23] <= UInt<128>("h1ffffffffff") @[CORDIC.scala 220:23]
    atantable128_64[24] <= UInt<128>("hffffffffff") @[CORDIC.scala 221:23]
    atantable128_64[25] <= UInt<128>("h7fffffffff") @[CORDIC.scala 222:23]
    atantable128_64[26] <= UInt<128>("h3fffffffff") @[CORDIC.scala 223:23]
    atantable128_64[27] <= UInt<128>("h2000000000") @[CORDIC.scala 224:23]
    atantable128_64[28] <= UInt<128>("h1000000000") @[CORDIC.scala 225:23]
    atantable128_64[29] <= UInt<128>("h800000000") @[CORDIC.scala 226:23]
    atantable128_64[30] <= UInt<128>("h400000000") @[CORDIC.scala 227:23]
    atantable128_64[31] <= UInt<128>("h200000000") @[CORDIC.scala 228:23]
    atantable128_64[32] <= UInt<128>("h100000000") @[CORDIC.scala 229:23]
    atantable128_64[33] <= UInt<128>("h80000000") @[CORDIC.scala 230:23]
    atantable128_64[34] <= UInt<128>("h40000000") @[CORDIC.scala 231:23]
    atantable128_64[35] <= UInt<128>("h20000000") @[CORDIC.scala 232:23]
    atantable128_64[36] <= UInt<128>("h10000000") @[CORDIC.scala 233:23]
    atantable128_64[37] <= UInt<128>("h8000000") @[CORDIC.scala 234:23]
    atantable128_64[38] <= UInt<128>("h4000000") @[CORDIC.scala 235:23]
    atantable128_64[39] <= UInt<128>("h2000000") @[CORDIC.scala 236:23]
    atantable128_64[40] <= UInt<128>("h1000000") @[CORDIC.scala 237:23]
    atantable128_64[41] <= UInt<128>("h800000") @[CORDIC.scala 238:23]
    atantable128_64[42] <= UInt<128>("h400000") @[CORDIC.scala 239:23]
    atantable128_64[43] <= UInt<128>("h200000") @[CORDIC.scala 240:23]
    atantable128_64[44] <= UInt<128>("h100000") @[CORDIC.scala 241:23]
    atantable128_64[45] <= UInt<128>("h80000") @[CORDIC.scala 242:23]
    atantable128_64[46] <= UInt<128>("h40000") @[CORDIC.scala 243:23]
    atantable128_64[47] <= UInt<128>("h20000") @[CORDIC.scala 244:23]
    atantable128_64[48] <= UInt<128>("h10000") @[CORDIC.scala 245:23]
    atantable128_64[49] <= UInt<128>("h8000") @[CORDIC.scala 246:23]
    atantable128_64[50] <= UInt<128>("h4000") @[CORDIC.scala 247:23]
    atantable128_64[51] <= UInt<128>("h2000") @[CORDIC.scala 248:23]
    atantable128_64[52] <= UInt<128>("h1000") @[CORDIC.scala 249:23]
    atantable128_64[53] <= UInt<128>("h800") @[CORDIC.scala 250:23]
    atantable128_64[54] <= UInt<128>("h400") @[CORDIC.scala 251:23]
    atantable128_64[55] <= UInt<128>("h200") @[CORDIC.scala 252:23]
    atantable128_64[56] <= UInt<128>("h100") @[CORDIC.scala 253:23]
    atantable128_64[57] <= UInt<128>("h80") @[CORDIC.scala 254:23]
    atantable128_64[58] <= UInt<128>("h40") @[CORDIC.scala 255:23]
    atantable128_64[59] <= UInt<128>("h20") @[CORDIC.scala 256:23]
    atantable128_64[60] <= UInt<128>("h10") @[CORDIC.scala 257:23]
    atantable128_64[61] <= UInt<128>("h8") @[CORDIC.scala 258:23]
    atantable128_64[62] <= UInt<128>("h4") @[CORDIC.scala 259:23]
    atantable128_64[63] <= UInt<128>("h2") @[CORDIC.scala 260:23]
    wire x : SInt<16>[17] @[CORDIC.scala 263:15]
    wire y : SInt<16>[17] @[CORDIC.scala 264:15]
    wire theta : SInt<16>[17] @[CORDIC.scala 265:19]
    wire z0s : SInt<16>[17] @[CORDIC.scala 266:17]
    wire modes : UInt<2>[17] @[CORDIC.scala 267:19]
    wire _xr_WIRE : SInt<16>[17] @[CORDIC.scala 269:27]
    _xr_WIRE[0] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[1] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[2] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[3] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[4] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[5] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[6] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[7] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[8] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[9] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[10] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[11] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[12] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[13] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[14] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[15] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    _xr_WIRE[16] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 269:27]
    reg xr : SInt<16>[17], clock with :
      reset => (reset, _xr_WIRE) @[CORDIC.scala 269:19]
    wire _yr_WIRE : SInt<16>[17] @[CORDIC.scala 270:27]
    _yr_WIRE[0] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[1] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[2] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[3] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[4] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[5] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[6] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[7] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[8] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[9] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[10] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[11] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[12] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[13] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[14] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[15] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    _yr_WIRE[16] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 270:27]
    reg yr : SInt<16>[17], clock with :
      reset => (reset, _yr_WIRE) @[CORDIC.scala 270:19]
    wire _thetar_WIRE : SInt<16>[17] @[CORDIC.scala 271:31]
    _thetar_WIRE[0] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[1] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[2] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[3] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[4] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[5] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[6] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[7] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[8] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[9] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[10] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[11] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[12] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[13] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[14] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[15] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    _thetar_WIRE[16] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 271:31]
    reg thetar : SInt<16>[17], clock with :
      reset => (reset, _thetar_WIRE) @[CORDIC.scala 271:23]
    wire _z0sr_WIRE : SInt<16>[17] @[CORDIC.scala 272:29]
    _z0sr_WIRE[0] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[1] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[2] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[3] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[4] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[5] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[6] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[7] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[8] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[9] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[10] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[11] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[12] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[13] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[14] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[15] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    _z0sr_WIRE[16] <= asSInt(UInt<16>("h0")) @[CORDIC.scala 272:29]
    reg z0sr : SInt<16>[17], clock with :
      reset => (reset, _z0sr_WIRE) @[CORDIC.scala 272:21]
    wire _modesr_WIRE : UInt<2>[17] @[CORDIC.scala 273:31]
    _modesr_WIRE[0] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[1] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[2] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[3] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[4] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[5] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[6] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[7] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[8] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[9] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[10] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[11] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[12] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[13] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[14] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[15] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    _modesr_WIRE[16] <= UInt<2>("h0") @[CORDIC.scala 273:31]
    reg modesr : UInt<2>[17], clock with :
      reset => (reset, _modesr_WIRE) @[CORDIC.scala 273:23]
    inst tofixedx0 of FloatToFixed16_1 @[CORDIC.scala 280:25]
    tofixedx0.clock <= clock
    tofixedx0.reset <= reset
    inst tofixedy0 of FloatToFixed16_2 @[CORDIC.scala 281:25]
    tofixedy0.clock <= clock
    tofixedy0.reset <= reset
    tofixedx0.io.in <= io.in_x0 @[CORDIC.scala 284:19]
    tofixedy0.io.in <= io.in_y0 @[CORDIC.scala 285:19]
    theta[0] <= asSInt(UInt<1>("h0")) @[CORDIC.scala 292:12]
    node _x_0_T = asSInt(tofixedx0.io.out) @[CORDIC.scala 293:19]
    x[0] <= _x_0_T @[CORDIC.scala 293:8]
    node _y_0_T = asSInt(tofixedy0.io.out) @[CORDIC.scala 294:19]
    y[0] <= _y_0_T @[CORDIC.scala 294:8]
    node _z0s_0_T = asSInt(io.in_z0) @[CORDIC.scala 295:21]
    z0s[0] <= _z0s_0_T @[CORDIC.scala 295:10]
    modes[0] <= io.in_mode @[CORDIC.scala 296:12]
    thetar[0] <= asSInt(UInt<1>("h0")) @[CORDIC.scala 298:13]
    node _xr_0_T = asSInt(tofixedx0.io.out) @[CORDIC.scala 299:20]
    xr[0] <= _xr_0_T @[CORDIC.scala 299:9]
    node _yr_0_T = asSInt(tofixedy0.io.out) @[CORDIC.scala 300:20]
    yr[0] <= _yr_0_T @[CORDIC.scala 300:9]
    node _z0sr_0_T = asSInt(io.in_z0) @[CORDIC.scala 301:22]
    z0sr[0] <= _z0sr_0_T @[CORDIC.scala 301:11]
    modesr[0] <= io.in_mode @[CORDIC.scala 302:13]
    node _fxxterm_T = gt(thetar[0], z0sr[0]) @[CORDIC.scala 581:42]
    node _fxxterm_T_1 = sub(asSInt(UInt<1>("h0")), xr[0]) @[CORDIC.scala 581:56]
    node _fxxterm_T_2 = tail(_fxxterm_T_1, 1) @[CORDIC.scala 581:56]
    node _fxxterm_T_3 = asSInt(_fxxterm_T_2) @[CORDIC.scala 581:56]
    node fxxterm = mux(_fxxterm_T, _fxxterm_T_3, xr[0]) @[CORDIC.scala 581:28]
    node _fxyterm_T = gt(thetar[0], z0sr[0]) @[CORDIC.scala 582:42]
    node _fxyterm_T_1 = sub(asSInt(UInt<1>("h0")), yr[0]) @[CORDIC.scala 582:56]
    node _fxyterm_T_2 = tail(_fxyterm_T_1, 1) @[CORDIC.scala 582:56]
    node _fxyterm_T_3 = asSInt(_fxyterm_T_2) @[CORDIC.scala 582:56]
    node fxyterm = mux(_fxyterm_T, _fxyterm_T_3, yr[0]) @[CORDIC.scala 582:28]
    node _fxthetaterm_T = gt(thetar[0], z0sr[0]) @[CORDIC.scala 583:46]
    node _fxthetaterm_T_1 = sub(UInt<1>("h0"), atantable16[0]) @[CORDIC.scala 583:60]
    node _fxthetaterm_T_2 = tail(_fxthetaterm_T_1, 1) @[CORDIC.scala 583:60]
    node fxthetaterm = mux(_fxthetaterm_T, _fxthetaterm_T_2, atantable16[0]) @[CORDIC.scala 583:32]
    node _theta_1_T = asSInt(fxthetaterm) @[CORDIC.scala 585:54]
    node _theta_1_T_1 = add(thetar[0], _theta_1_T) @[CORDIC.scala 585:40]
    node _theta_1_T_2 = tail(_theta_1_T_1, 1) @[CORDIC.scala 585:40]
    node _theta_1_T_3 = asSInt(_theta_1_T_2) @[CORDIC.scala 585:40]
    theta[1] <= _theta_1_T_3 @[CORDIC.scala 585:24]
    node _x_1_T = dshr(fxyterm, UInt<1>("h0")) @[CORDIC.scala 586:43]
    node _x_1_T_1 = sub(xr[0], _x_1_T) @[CORDIC.scala 586:32]
    node _x_1_T_2 = tail(_x_1_T_1, 1) @[CORDIC.scala 586:32]
    node _x_1_T_3 = asSInt(_x_1_T_2) @[CORDIC.scala 586:32]
    x[1] <= _x_1_T_3 @[CORDIC.scala 586:20]
    node _y_1_T = dshr(fxxterm, UInt<1>("h0")) @[CORDIC.scala 587:32]
    node _y_1_T_1 = add(_y_1_T, yr[0]) @[CORDIC.scala 587:56]
    node _y_1_T_2 = tail(_y_1_T_1, 1) @[CORDIC.scala 587:56]
    node _y_1_T_3 = asSInt(_y_1_T_2) @[CORDIC.scala 587:56]
    y[1] <= _y_1_T_3 @[CORDIC.scala 587:20]
    z0s[1] <= z0sr[0] @[CORDIC.scala 588:22]
    modes[1] <= modesr[0] @[CORDIC.scala 589:24]
    node _fxxterm_T_4 = gt(theta[1], z0s[1]) @[CORDIC.scala 593:42]
    node _fxxterm_T_5 = sub(asSInt(UInt<1>("h0")), x[1]) @[CORDIC.scala 593:56]
    node _fxxterm_T_6 = tail(_fxxterm_T_5, 1) @[CORDIC.scala 593:56]
    node _fxxterm_T_7 = asSInt(_fxxterm_T_6) @[CORDIC.scala 593:56]
    node fxxterm_1 = mux(_fxxterm_T_4, _fxxterm_T_7, x[1]) @[CORDIC.scala 593:28]
    node _fxyterm_T_4 = gt(theta[1], z0s[1]) @[CORDIC.scala 594:42]
    node _fxyterm_T_5 = sub(asSInt(UInt<1>("h0")), y[1]) @[CORDIC.scala 594:56]
    node _fxyterm_T_6 = tail(_fxyterm_T_5, 1) @[CORDIC.scala 594:56]
    node _fxyterm_T_7 = asSInt(_fxyterm_T_6) @[CORDIC.scala 594:56]
    node fxyterm_1 = mux(_fxyterm_T_4, _fxyterm_T_7, y[1]) @[CORDIC.scala 594:28]
    node _fxthetaterm_T_3 = gt(theta[1], z0s[1]) @[CORDIC.scala 595:46]
    node _fxthetaterm_T_4 = sub(UInt<1>("h0"), atantable16[1]) @[CORDIC.scala 595:60]
    node _fxthetaterm_T_5 = tail(_fxthetaterm_T_4, 1) @[CORDIC.scala 595:60]
    node fxthetaterm_1 = mux(_fxthetaterm_T_3, _fxthetaterm_T_5, atantable16[1]) @[CORDIC.scala 595:32]
    node _theta_2_T = asSInt(fxthetaterm_1) @[CORDIC.scala 598:54]
    node _theta_2_T_1 = add(theta[1], _theta_2_T) @[CORDIC.scala 598:40]
    node _theta_2_T_2 = tail(_theta_2_T_1, 1) @[CORDIC.scala 598:40]
    node _theta_2_T_3 = asSInt(_theta_2_T_2) @[CORDIC.scala 598:40]
    theta[2] <= _theta_2_T_3 @[CORDIC.scala 598:24]
    node _x_2_T = dshr(fxyterm_1, UInt<1>("h1")) @[CORDIC.scala 599:43]
    node _x_2_T_1 = sub(x[1], _x_2_T) @[CORDIC.scala 599:32]
    node _x_2_T_2 = tail(_x_2_T_1, 1) @[CORDIC.scala 599:32]
    node _x_2_T_3 = asSInt(_x_2_T_2) @[CORDIC.scala 599:32]
    x[2] <= _x_2_T_3 @[CORDIC.scala 599:20]
    node _y_2_T = dshr(fxxterm_1, UInt<1>("h1")) @[CORDIC.scala 600:32]
    node _y_2_T_1 = add(_y_2_T, y[1]) @[CORDIC.scala 600:56]
    node _y_2_T_2 = tail(_y_2_T_1, 1) @[CORDIC.scala 600:56]
    node _y_2_T_3 = asSInt(_y_2_T_2) @[CORDIC.scala 600:56]
    y[2] <= _y_2_T_3 @[CORDIC.scala 600:20]
    z0s[2] <= z0s[1] @[CORDIC.scala 601:22]
    modes[2] <= modes[1] @[CORDIC.scala 602:24]
    thetar[1] <= theta[2] @[CORDIC.scala 606:24]
    xr[1] <= x[2] @[CORDIC.scala 607:20]
    yr[1] <= y[2] @[CORDIC.scala 608:20]
    z0sr[1] <= z0s[2] @[CORDIC.scala 609:22]
    modesr[1] <= modes[2] @[CORDIC.scala 610:24]
    node _fxxterm_T_8 = gt(thetar[1], z0sr[1]) @[CORDIC.scala 581:42]
    node _fxxterm_T_9 = sub(asSInt(UInt<1>("h0")), xr[1]) @[CORDIC.scala 581:56]
    node _fxxterm_T_10 = tail(_fxxterm_T_9, 1) @[CORDIC.scala 581:56]
    node _fxxterm_T_11 = asSInt(_fxxterm_T_10) @[CORDIC.scala 581:56]
    node fxxterm_2 = mux(_fxxterm_T_8, _fxxterm_T_11, xr[1]) @[CORDIC.scala 581:28]
    node _fxyterm_T_8 = gt(thetar[1], z0sr[1]) @[CORDIC.scala 582:42]
    node _fxyterm_T_9 = sub(asSInt(UInt<1>("h0")), yr[1]) @[CORDIC.scala 582:56]
    node _fxyterm_T_10 = tail(_fxyterm_T_9, 1) @[CORDIC.scala 582:56]
    node _fxyterm_T_11 = asSInt(_fxyterm_T_10) @[CORDIC.scala 582:56]
    node fxyterm_2 = mux(_fxyterm_T_8, _fxyterm_T_11, yr[1]) @[CORDIC.scala 582:28]
    node _fxthetaterm_T_6 = gt(thetar[1], z0sr[1]) @[CORDIC.scala 583:46]
    node _fxthetaterm_T_7 = sub(UInt<1>("h0"), atantable16[2]) @[CORDIC.scala 583:60]
    node _fxthetaterm_T_8 = tail(_fxthetaterm_T_7, 1) @[CORDIC.scala 583:60]
    node fxthetaterm_2 = mux(_fxthetaterm_T_6, _fxthetaterm_T_8, atantable16[2]) @[CORDIC.scala 583:32]
    node _theta_3_T = asSInt(fxthetaterm_2) @[CORDIC.scala 585:54]
    node _theta_3_T_1 = add(thetar[1], _theta_3_T) @[CORDIC.scala 585:40]
    node _theta_3_T_2 = tail(_theta_3_T_1, 1) @[CORDIC.scala 585:40]
    node _theta_3_T_3 = asSInt(_theta_3_T_2) @[CORDIC.scala 585:40]
    theta[3] <= _theta_3_T_3 @[CORDIC.scala 585:24]
    node _x_3_T = dshr(fxyterm_2, UInt<2>("h2")) @[CORDIC.scala 586:43]
    node _x_3_T_1 = sub(xr[1], _x_3_T) @[CORDIC.scala 586:32]
    node _x_3_T_2 = tail(_x_3_T_1, 1) @[CORDIC.scala 586:32]
    node _x_3_T_3 = asSInt(_x_3_T_2) @[CORDIC.scala 586:32]
    x[3] <= _x_3_T_3 @[CORDIC.scala 586:20]
    node _y_3_T = dshr(fxxterm_2, UInt<2>("h2")) @[CORDIC.scala 587:32]
    node _y_3_T_1 = add(_y_3_T, yr[1]) @[CORDIC.scala 587:56]
    node _y_3_T_2 = tail(_y_3_T_1, 1) @[CORDIC.scala 587:56]
    node _y_3_T_3 = asSInt(_y_3_T_2) @[CORDIC.scala 587:56]
    y[3] <= _y_3_T_3 @[CORDIC.scala 587:20]
    z0s[3] <= z0sr[1] @[CORDIC.scala 588:22]
    modes[3] <= modesr[1] @[CORDIC.scala 589:24]
    node _fxxterm_T_12 = gt(theta[3], z0s[3]) @[CORDIC.scala 593:42]
    node _fxxterm_T_13 = sub(asSInt(UInt<1>("h0")), x[3]) @[CORDIC.scala 593:56]
    node _fxxterm_T_14 = tail(_fxxterm_T_13, 1) @[CORDIC.scala 593:56]
    node _fxxterm_T_15 = asSInt(_fxxterm_T_14) @[CORDIC.scala 593:56]
    node fxxterm_3 = mux(_fxxterm_T_12, _fxxterm_T_15, x[3]) @[CORDIC.scala 593:28]
    node _fxyterm_T_12 = gt(theta[3], z0s[3]) @[CORDIC.scala 594:42]
    node _fxyterm_T_13 = sub(asSInt(UInt<1>("h0")), y[3]) @[CORDIC.scala 594:56]
    node _fxyterm_T_14 = tail(_fxyterm_T_13, 1) @[CORDIC.scala 594:56]
    node _fxyterm_T_15 = asSInt(_fxyterm_T_14) @[CORDIC.scala 594:56]
    node fxyterm_3 = mux(_fxyterm_T_12, _fxyterm_T_15, y[3]) @[CORDIC.scala 594:28]
    node _fxthetaterm_T_9 = gt(theta[3], z0s[3]) @[CORDIC.scala 595:46]
    node _fxthetaterm_T_10 = sub(UInt<1>("h0"), atantable16[3]) @[CORDIC.scala 595:60]
    node _fxthetaterm_T_11 = tail(_fxthetaterm_T_10, 1) @[CORDIC.scala 595:60]
    node fxthetaterm_3 = mux(_fxthetaterm_T_9, _fxthetaterm_T_11, atantable16[3]) @[CORDIC.scala 595:32]
    node _theta_4_T = asSInt(fxthetaterm_3) @[CORDIC.scala 598:54]
    node _theta_4_T_1 = add(theta[3], _theta_4_T) @[CORDIC.scala 598:40]
    node _theta_4_T_2 = tail(_theta_4_T_1, 1) @[CORDIC.scala 598:40]
    node _theta_4_T_3 = asSInt(_theta_4_T_2) @[CORDIC.scala 598:40]
    theta[4] <= _theta_4_T_3 @[CORDIC.scala 598:24]
    node _x_4_T = dshr(fxyterm_3, UInt<2>("h3")) @[CORDIC.scala 599:43]
    node _x_4_T_1 = sub(x[3], _x_4_T) @[CORDIC.scala 599:32]
    node _x_4_T_2 = tail(_x_4_T_1, 1) @[CORDIC.scala 599:32]
    node _x_4_T_3 = asSInt(_x_4_T_2) @[CORDIC.scala 599:32]
    x[4] <= _x_4_T_3 @[CORDIC.scala 599:20]
    node _y_4_T = dshr(fxxterm_3, UInt<2>("h3")) @[CORDIC.scala 600:32]
    node _y_4_T_1 = add(_y_4_T, y[3]) @[CORDIC.scala 600:56]
    node _y_4_T_2 = tail(_y_4_T_1, 1) @[CORDIC.scala 600:56]
    node _y_4_T_3 = asSInt(_y_4_T_2) @[CORDIC.scala 600:56]
    y[4] <= _y_4_T_3 @[CORDIC.scala 600:20]
    z0s[4] <= z0s[3] @[CORDIC.scala 601:22]
    modes[4] <= modes[3] @[CORDIC.scala 602:24]
    thetar[2] <= theta[4] @[CORDIC.scala 606:24]
    xr[2] <= x[4] @[CORDIC.scala 607:20]
    yr[2] <= y[4] @[CORDIC.scala 608:20]
    z0sr[2] <= z0s[4] @[CORDIC.scala 609:22]
    modesr[2] <= modes[4] @[CORDIC.scala 610:24]
    node _fxxterm_T_16 = gt(thetar[2], z0sr[2]) @[CORDIC.scala 581:42]
    node _fxxterm_T_17 = sub(asSInt(UInt<1>("h0")), xr[2]) @[CORDIC.scala 581:56]
    node _fxxterm_T_18 = tail(_fxxterm_T_17, 1) @[CORDIC.scala 581:56]
    node _fxxterm_T_19 = asSInt(_fxxterm_T_18) @[CORDIC.scala 581:56]
    node fxxterm_4 = mux(_fxxterm_T_16, _fxxterm_T_19, xr[2]) @[CORDIC.scala 581:28]
    node _fxyterm_T_16 = gt(thetar[2], z0sr[2]) @[CORDIC.scala 582:42]
    node _fxyterm_T_17 = sub(asSInt(UInt<1>("h0")), yr[2]) @[CORDIC.scala 582:56]
    node _fxyterm_T_18 = tail(_fxyterm_T_17, 1) @[CORDIC.scala 582:56]
    node _fxyterm_T_19 = asSInt(_fxyterm_T_18) @[CORDIC.scala 582:56]
    node fxyterm_4 = mux(_fxyterm_T_16, _fxyterm_T_19, yr[2]) @[CORDIC.scala 582:28]
    node _fxthetaterm_T_12 = gt(thetar[2], z0sr[2]) @[CORDIC.scala 583:46]
    node _fxthetaterm_T_13 = sub(UInt<1>("h0"), atantable16[4]) @[CORDIC.scala 583:60]
    node _fxthetaterm_T_14 = tail(_fxthetaterm_T_13, 1) @[CORDIC.scala 583:60]
    node fxthetaterm_4 = mux(_fxthetaterm_T_12, _fxthetaterm_T_14, atantable16[4]) @[CORDIC.scala 583:32]
    node _theta_5_T = asSInt(fxthetaterm_4) @[CORDIC.scala 585:54]
    node _theta_5_T_1 = add(thetar[2], _theta_5_T) @[CORDIC.scala 585:40]
    node _theta_5_T_2 = tail(_theta_5_T_1, 1) @[CORDIC.scala 585:40]
    node _theta_5_T_3 = asSInt(_theta_5_T_2) @[CORDIC.scala 585:40]
    theta[5] <= _theta_5_T_3 @[CORDIC.scala 585:24]
    node _x_5_T = dshr(fxyterm_4, UInt<3>("h4")) @[CORDIC.scala 586:43]
    node _x_5_T_1 = sub(xr[2], _x_5_T) @[CORDIC.scala 586:32]
    node _x_5_T_2 = tail(_x_5_T_1, 1) @[CORDIC.scala 586:32]
    node _x_5_T_3 = asSInt(_x_5_T_2) @[CORDIC.scala 586:32]
    x[5] <= _x_5_T_3 @[CORDIC.scala 586:20]
    node _y_5_T = dshr(fxxterm_4, UInt<3>("h4")) @[CORDIC.scala 587:32]
    node _y_5_T_1 = add(_y_5_T, yr[2]) @[CORDIC.scala 587:56]
    node _y_5_T_2 = tail(_y_5_T_1, 1) @[CORDIC.scala 587:56]
    node _y_5_T_3 = asSInt(_y_5_T_2) @[CORDIC.scala 587:56]
    y[5] <= _y_5_T_3 @[CORDIC.scala 587:20]
    z0s[5] <= z0sr[2] @[CORDIC.scala 588:22]
    modes[5] <= modesr[2] @[CORDIC.scala 589:24]
    node _fxxterm_T_20 = gt(theta[5], z0s[5]) @[CORDIC.scala 593:42]
    node _fxxterm_T_21 = sub(asSInt(UInt<1>("h0")), x[5]) @[CORDIC.scala 593:56]
    node _fxxterm_T_22 = tail(_fxxterm_T_21, 1) @[CORDIC.scala 593:56]
    node _fxxterm_T_23 = asSInt(_fxxterm_T_22) @[CORDIC.scala 593:56]
    node fxxterm_5 = mux(_fxxterm_T_20, _fxxterm_T_23, x[5]) @[CORDIC.scala 593:28]
    node _fxyterm_T_20 = gt(theta[5], z0s[5]) @[CORDIC.scala 594:42]
    node _fxyterm_T_21 = sub(asSInt(UInt<1>("h0")), y[5]) @[CORDIC.scala 594:56]
    node _fxyterm_T_22 = tail(_fxyterm_T_21, 1) @[CORDIC.scala 594:56]
    node _fxyterm_T_23 = asSInt(_fxyterm_T_22) @[CORDIC.scala 594:56]
    node fxyterm_5 = mux(_fxyterm_T_20, _fxyterm_T_23, y[5]) @[CORDIC.scala 594:28]
    node _fxthetaterm_T_15 = gt(theta[5], z0s[5]) @[CORDIC.scala 595:46]
    node _fxthetaterm_T_16 = sub(UInt<1>("h0"), atantable16[5]) @[CORDIC.scala 595:60]
    node _fxthetaterm_T_17 = tail(_fxthetaterm_T_16, 1) @[CORDIC.scala 595:60]
    node fxthetaterm_5 = mux(_fxthetaterm_T_15, _fxthetaterm_T_17, atantable16[5]) @[CORDIC.scala 595:32]
    node _theta_6_T = asSInt(fxthetaterm_5) @[CORDIC.scala 598:54]
    node _theta_6_T_1 = add(theta[5], _theta_6_T) @[CORDIC.scala 598:40]
    node _theta_6_T_2 = tail(_theta_6_T_1, 1) @[CORDIC.scala 598:40]
    node _theta_6_T_3 = asSInt(_theta_6_T_2) @[CORDIC.scala 598:40]
    theta[6] <= _theta_6_T_3 @[CORDIC.scala 598:24]
    node _x_6_T = dshr(fxyterm_5, UInt<3>("h5")) @[CORDIC.scala 599:43]
    node _x_6_T_1 = sub(x[5], _x_6_T) @[CORDIC.scala 599:32]
    node _x_6_T_2 = tail(_x_6_T_1, 1) @[CORDIC.scala 599:32]
    node _x_6_T_3 = asSInt(_x_6_T_2) @[CORDIC.scala 599:32]
    x[6] <= _x_6_T_3 @[CORDIC.scala 599:20]
    node _y_6_T = dshr(fxxterm_5, UInt<3>("h5")) @[CORDIC.scala 600:32]
    node _y_6_T_1 = add(_y_6_T, y[5]) @[CORDIC.scala 600:56]
    node _y_6_T_2 = tail(_y_6_T_1, 1) @[CORDIC.scala 600:56]
    node _y_6_T_3 = asSInt(_y_6_T_2) @[CORDIC.scala 600:56]
    y[6] <= _y_6_T_3 @[CORDIC.scala 600:20]
    z0s[6] <= z0s[5] @[CORDIC.scala 601:22]
    modes[6] <= modes[5] @[CORDIC.scala 602:24]
    thetar[3] <= theta[6] @[CORDIC.scala 606:24]
    xr[3] <= x[6] @[CORDIC.scala 607:20]
    yr[3] <= y[6] @[CORDIC.scala 608:20]
    z0sr[3] <= z0s[6] @[CORDIC.scala 609:22]
    modesr[3] <= modes[6] @[CORDIC.scala 610:24]
    node _fxxterm_T_24 = gt(thetar[3], z0sr[3]) @[CORDIC.scala 581:42]
    node _fxxterm_T_25 = sub(asSInt(UInt<1>("h0")), xr[3]) @[CORDIC.scala 581:56]
    node _fxxterm_T_26 = tail(_fxxterm_T_25, 1) @[CORDIC.scala 581:56]
    node _fxxterm_T_27 = asSInt(_fxxterm_T_26) @[CORDIC.scala 581:56]
    node fxxterm_6 = mux(_fxxterm_T_24, _fxxterm_T_27, xr[3]) @[CORDIC.scala 581:28]
    node _fxyterm_T_24 = gt(thetar[3], z0sr[3]) @[CORDIC.scala 582:42]
    node _fxyterm_T_25 = sub(asSInt(UInt<1>("h0")), yr[3]) @[CORDIC.scala 582:56]
    node _fxyterm_T_26 = tail(_fxyterm_T_25, 1) @[CORDIC.scala 582:56]
    node _fxyterm_T_27 = asSInt(_fxyterm_T_26) @[CORDIC.scala 582:56]
    node fxyterm_6 = mux(_fxyterm_T_24, _fxyterm_T_27, yr[3]) @[CORDIC.scala 582:28]
    node _fxthetaterm_T_18 = gt(thetar[3], z0sr[3]) @[CORDIC.scala 583:46]
    node _fxthetaterm_T_19 = sub(UInt<1>("h0"), atantable16[6]) @[CORDIC.scala 583:60]
    node _fxthetaterm_T_20 = tail(_fxthetaterm_T_19, 1) @[CORDIC.scala 583:60]
    node fxthetaterm_6 = mux(_fxthetaterm_T_18, _fxthetaterm_T_20, atantable16[6]) @[CORDIC.scala 583:32]
    node _theta_7_T = asSInt(fxthetaterm_6) @[CORDIC.scala 585:54]
    node _theta_7_T_1 = add(thetar[3], _theta_7_T) @[CORDIC.scala 585:40]
    node _theta_7_T_2 = tail(_theta_7_T_1, 1) @[CORDIC.scala 585:40]
    node _theta_7_T_3 = asSInt(_theta_7_T_2) @[CORDIC.scala 585:40]
    theta[7] <= _theta_7_T_3 @[CORDIC.scala 585:24]
    node _x_7_T = dshr(fxyterm_6, UInt<3>("h6")) @[CORDIC.scala 586:43]
    node _x_7_T_1 = sub(xr[3], _x_7_T) @[CORDIC.scala 586:32]
    node _x_7_T_2 = tail(_x_7_T_1, 1) @[CORDIC.scala 586:32]
    node _x_7_T_3 = asSInt(_x_7_T_2) @[CORDIC.scala 586:32]
    x[7] <= _x_7_T_3 @[CORDIC.scala 586:20]
    node _y_7_T = dshr(fxxterm_6, UInt<3>("h6")) @[CORDIC.scala 587:32]
    node _y_7_T_1 = add(_y_7_T, yr[3]) @[CORDIC.scala 587:56]
    node _y_7_T_2 = tail(_y_7_T_1, 1) @[CORDIC.scala 587:56]
    node _y_7_T_3 = asSInt(_y_7_T_2) @[CORDIC.scala 587:56]
    y[7] <= _y_7_T_3 @[CORDIC.scala 587:20]
    z0s[7] <= z0sr[3] @[CORDIC.scala 588:22]
    modes[7] <= modesr[3] @[CORDIC.scala 589:24]
    node _fxxterm_T_28 = gt(theta[7], z0s[7]) @[CORDIC.scala 593:42]
    node _fxxterm_T_29 = sub(asSInt(UInt<1>("h0")), x[7]) @[CORDIC.scala 593:56]
    node _fxxterm_T_30 = tail(_fxxterm_T_29, 1) @[CORDIC.scala 593:56]
    node _fxxterm_T_31 = asSInt(_fxxterm_T_30) @[CORDIC.scala 593:56]
    node fxxterm_7 = mux(_fxxterm_T_28, _fxxterm_T_31, x[7]) @[CORDIC.scala 593:28]
    node _fxyterm_T_28 = gt(theta[7], z0s[7]) @[CORDIC.scala 594:42]
    node _fxyterm_T_29 = sub(asSInt(UInt<1>("h0")), y[7]) @[CORDIC.scala 594:56]
    node _fxyterm_T_30 = tail(_fxyterm_T_29, 1) @[CORDIC.scala 594:56]
    node _fxyterm_T_31 = asSInt(_fxyterm_T_30) @[CORDIC.scala 594:56]
    node fxyterm_7 = mux(_fxyterm_T_28, _fxyterm_T_31, y[7]) @[CORDIC.scala 594:28]
    node _fxthetaterm_T_21 = gt(theta[7], z0s[7]) @[CORDIC.scala 595:46]
    node _fxthetaterm_T_22 = sub(UInt<1>("h0"), atantable16[7]) @[CORDIC.scala 595:60]
    node _fxthetaterm_T_23 = tail(_fxthetaterm_T_22, 1) @[CORDIC.scala 595:60]
    node fxthetaterm_7 = mux(_fxthetaterm_T_21, _fxthetaterm_T_23, atantable16[7]) @[CORDIC.scala 595:32]
    node _theta_8_T = asSInt(fxthetaterm_7) @[CORDIC.scala 598:54]
    node _theta_8_T_1 = add(theta[7], _theta_8_T) @[CORDIC.scala 598:40]
    node _theta_8_T_2 = tail(_theta_8_T_1, 1) @[CORDIC.scala 598:40]
    node _theta_8_T_3 = asSInt(_theta_8_T_2) @[CORDIC.scala 598:40]
    theta[8] <= _theta_8_T_3 @[CORDIC.scala 598:24]
    node _x_8_T = dshr(fxyterm_7, UInt<3>("h7")) @[CORDIC.scala 599:43]
    node _x_8_T_1 = sub(x[7], _x_8_T) @[CORDIC.scala 599:32]
    node _x_8_T_2 = tail(_x_8_T_1, 1) @[CORDIC.scala 599:32]
    node _x_8_T_3 = asSInt(_x_8_T_2) @[CORDIC.scala 599:32]
    x[8] <= _x_8_T_3 @[CORDIC.scala 599:20]
    node _y_8_T = dshr(fxxterm_7, UInt<3>("h7")) @[CORDIC.scala 600:32]
    node _y_8_T_1 = add(_y_8_T, y[7]) @[CORDIC.scala 600:56]
    node _y_8_T_2 = tail(_y_8_T_1, 1) @[CORDIC.scala 600:56]
    node _y_8_T_3 = asSInt(_y_8_T_2) @[CORDIC.scala 600:56]
    y[8] <= _y_8_T_3 @[CORDIC.scala 600:20]
    z0s[8] <= z0s[7] @[CORDIC.scala 601:22]
    modes[8] <= modes[7] @[CORDIC.scala 602:24]
    thetar[4] <= theta[8] @[CORDIC.scala 606:24]
    xr[4] <= x[8] @[CORDIC.scala 607:20]
    yr[4] <= y[8] @[CORDIC.scala 608:20]
    z0sr[4] <= z0s[8] @[CORDIC.scala 609:22]
    modesr[4] <= modes[8] @[CORDIC.scala 610:24]
    node _fxxterm_T_32 = gt(thetar[4], z0sr[4]) @[CORDIC.scala 581:42]
    node _fxxterm_T_33 = sub(asSInt(UInt<1>("h0")), xr[4]) @[CORDIC.scala 581:56]
    node _fxxterm_T_34 = tail(_fxxterm_T_33, 1) @[CORDIC.scala 581:56]
    node _fxxterm_T_35 = asSInt(_fxxterm_T_34) @[CORDIC.scala 581:56]
    node fxxterm_8 = mux(_fxxterm_T_32, _fxxterm_T_35, xr[4]) @[CORDIC.scala 581:28]
    node _fxyterm_T_32 = gt(thetar[4], z0sr[4]) @[CORDIC.scala 582:42]
    node _fxyterm_T_33 = sub(asSInt(UInt<1>("h0")), yr[4]) @[CORDIC.scala 582:56]
    node _fxyterm_T_34 = tail(_fxyterm_T_33, 1) @[CORDIC.scala 582:56]
    node _fxyterm_T_35 = asSInt(_fxyterm_T_34) @[CORDIC.scala 582:56]
    node fxyterm_8 = mux(_fxyterm_T_32, _fxyterm_T_35, yr[4]) @[CORDIC.scala 582:28]
    node _fxthetaterm_T_24 = gt(thetar[4], z0sr[4]) @[CORDIC.scala 583:46]
    node _fxthetaterm_T_25 = sub(UInt<1>("h0"), atantable16[8]) @[CORDIC.scala 583:60]
    node _fxthetaterm_T_26 = tail(_fxthetaterm_T_25, 1) @[CORDIC.scala 583:60]
    node fxthetaterm_8 = mux(_fxthetaterm_T_24, _fxthetaterm_T_26, atantable16[8]) @[CORDIC.scala 583:32]
    node _theta_9_T = asSInt(fxthetaterm_8) @[CORDIC.scala 585:54]
    node _theta_9_T_1 = add(thetar[4], _theta_9_T) @[CORDIC.scala 585:40]
    node _theta_9_T_2 = tail(_theta_9_T_1, 1) @[CORDIC.scala 585:40]
    node _theta_9_T_3 = asSInt(_theta_9_T_2) @[CORDIC.scala 585:40]
    theta[9] <= _theta_9_T_3 @[CORDIC.scala 585:24]
    node _x_9_T = dshr(fxyterm_8, UInt<4>("h8")) @[CORDIC.scala 586:43]
    node _x_9_T_1 = sub(xr[4], _x_9_T) @[CORDIC.scala 586:32]
    node _x_9_T_2 = tail(_x_9_T_1, 1) @[CORDIC.scala 586:32]
    node _x_9_T_3 = asSInt(_x_9_T_2) @[CORDIC.scala 586:32]
    x[9] <= _x_9_T_3 @[CORDIC.scala 586:20]
    node _y_9_T = dshr(fxxterm_8, UInt<4>("h8")) @[CORDIC.scala 587:32]
    node _y_9_T_1 = add(_y_9_T, yr[4]) @[CORDIC.scala 587:56]
    node _y_9_T_2 = tail(_y_9_T_1, 1) @[CORDIC.scala 587:56]
    node _y_9_T_3 = asSInt(_y_9_T_2) @[CORDIC.scala 587:56]
    y[9] <= _y_9_T_3 @[CORDIC.scala 587:20]
    z0s[9] <= z0sr[4] @[CORDIC.scala 588:22]
    modes[9] <= modesr[4] @[CORDIC.scala 589:24]
    node _fxxterm_T_36 = gt(theta[9], z0s[9]) @[CORDIC.scala 593:42]
    node _fxxterm_T_37 = sub(asSInt(UInt<1>("h0")), x[9]) @[CORDIC.scala 593:56]
    node _fxxterm_T_38 = tail(_fxxterm_T_37, 1) @[CORDIC.scala 593:56]
    node _fxxterm_T_39 = asSInt(_fxxterm_T_38) @[CORDIC.scala 593:56]
    node fxxterm_9 = mux(_fxxterm_T_36, _fxxterm_T_39, x[9]) @[CORDIC.scala 593:28]
    node _fxyterm_T_36 = gt(theta[9], z0s[9]) @[CORDIC.scala 594:42]
    node _fxyterm_T_37 = sub(asSInt(UInt<1>("h0")), y[9]) @[CORDIC.scala 594:56]
    node _fxyterm_T_38 = tail(_fxyterm_T_37, 1) @[CORDIC.scala 594:56]
    node _fxyterm_T_39 = asSInt(_fxyterm_T_38) @[CORDIC.scala 594:56]
    node fxyterm_9 = mux(_fxyterm_T_36, _fxyterm_T_39, y[9]) @[CORDIC.scala 594:28]
    node _fxthetaterm_T_27 = gt(theta[9], z0s[9]) @[CORDIC.scala 595:46]
    node _fxthetaterm_T_28 = sub(UInt<1>("h0"), atantable16[9]) @[CORDIC.scala 595:60]
    node _fxthetaterm_T_29 = tail(_fxthetaterm_T_28, 1) @[CORDIC.scala 595:60]
    node fxthetaterm_9 = mux(_fxthetaterm_T_27, _fxthetaterm_T_29, atantable16[9]) @[CORDIC.scala 595:32]
    node _theta_10_T = asSInt(fxthetaterm_9) @[CORDIC.scala 598:54]
    node _theta_10_T_1 = add(theta[9], _theta_10_T) @[CORDIC.scala 598:40]
    node _theta_10_T_2 = tail(_theta_10_T_1, 1) @[CORDIC.scala 598:40]
    node _theta_10_T_3 = asSInt(_theta_10_T_2) @[CORDIC.scala 598:40]
    theta[10] <= _theta_10_T_3 @[CORDIC.scala 598:24]
    node _x_10_T = dshr(fxyterm_9, UInt<4>("h9")) @[CORDIC.scala 599:43]
    node _x_10_T_1 = sub(x[9], _x_10_T) @[CORDIC.scala 599:32]
    node _x_10_T_2 = tail(_x_10_T_1, 1) @[CORDIC.scala 599:32]
    node _x_10_T_3 = asSInt(_x_10_T_2) @[CORDIC.scala 599:32]
    x[10] <= _x_10_T_3 @[CORDIC.scala 599:20]
    node _y_10_T = dshr(fxxterm_9, UInt<4>("h9")) @[CORDIC.scala 600:32]
    node _y_10_T_1 = add(_y_10_T, y[9]) @[CORDIC.scala 600:56]
    node _y_10_T_2 = tail(_y_10_T_1, 1) @[CORDIC.scala 600:56]
    node _y_10_T_3 = asSInt(_y_10_T_2) @[CORDIC.scala 600:56]
    y[10] <= _y_10_T_3 @[CORDIC.scala 600:20]
    z0s[10] <= z0s[9] @[CORDIC.scala 601:22]
    modes[10] <= modes[9] @[CORDIC.scala 602:24]
    thetar[5] <= theta[10] @[CORDIC.scala 606:24]
    xr[5] <= x[10] @[CORDIC.scala 607:20]
    yr[5] <= y[10] @[CORDIC.scala 608:20]
    z0sr[5] <= z0s[10] @[CORDIC.scala 609:22]
    modesr[5] <= modes[10] @[CORDIC.scala 610:24]
    node _fxxterm_T_40 = gt(thetar[5], z0sr[5]) @[CORDIC.scala 581:42]
    node _fxxterm_T_41 = sub(asSInt(UInt<1>("h0")), xr[5]) @[CORDIC.scala 581:56]
    node _fxxterm_T_42 = tail(_fxxterm_T_41, 1) @[CORDIC.scala 581:56]
    node _fxxterm_T_43 = asSInt(_fxxterm_T_42) @[CORDIC.scala 581:56]
    node fxxterm_10 = mux(_fxxterm_T_40, _fxxterm_T_43, xr[5]) @[CORDIC.scala 581:28]
    node _fxyterm_T_40 = gt(thetar[5], z0sr[5]) @[CORDIC.scala 582:42]
    node _fxyterm_T_41 = sub(asSInt(UInt<1>("h0")), yr[5]) @[CORDIC.scala 582:56]
    node _fxyterm_T_42 = tail(_fxyterm_T_41, 1) @[CORDIC.scala 582:56]
    node _fxyterm_T_43 = asSInt(_fxyterm_T_42) @[CORDIC.scala 582:56]
    node fxyterm_10 = mux(_fxyterm_T_40, _fxyterm_T_43, yr[5]) @[CORDIC.scala 582:28]
    node _fxthetaterm_T_30 = gt(thetar[5], z0sr[5]) @[CORDIC.scala 583:46]
    node _fxthetaterm_T_31 = sub(UInt<1>("h0"), atantable16[10]) @[CORDIC.scala 583:60]
    node _fxthetaterm_T_32 = tail(_fxthetaterm_T_31, 1) @[CORDIC.scala 583:60]
    node fxthetaterm_10 = mux(_fxthetaterm_T_30, _fxthetaterm_T_32, atantable16[10]) @[CORDIC.scala 583:32]
    node _theta_11_T = asSInt(fxthetaterm_10) @[CORDIC.scala 585:54]
    node _theta_11_T_1 = add(thetar[5], _theta_11_T) @[CORDIC.scala 585:40]
    node _theta_11_T_2 = tail(_theta_11_T_1, 1) @[CORDIC.scala 585:40]
    node _theta_11_T_3 = asSInt(_theta_11_T_2) @[CORDIC.scala 585:40]
    theta[11] <= _theta_11_T_3 @[CORDIC.scala 585:24]
    node _x_11_T = dshr(fxyterm_10, UInt<4>("ha")) @[CORDIC.scala 586:43]
    node _x_11_T_1 = sub(xr[5], _x_11_T) @[CORDIC.scala 586:32]
    node _x_11_T_2 = tail(_x_11_T_1, 1) @[CORDIC.scala 586:32]
    node _x_11_T_3 = asSInt(_x_11_T_2) @[CORDIC.scala 586:32]
    x[11] <= _x_11_T_3 @[CORDIC.scala 586:20]
    node _y_11_T = dshr(fxxterm_10, UInt<4>("ha")) @[CORDIC.scala 587:32]
    node _y_11_T_1 = add(_y_11_T, yr[5]) @[CORDIC.scala 587:56]
    node _y_11_T_2 = tail(_y_11_T_1, 1) @[CORDIC.scala 587:56]
    node _y_11_T_3 = asSInt(_y_11_T_2) @[CORDIC.scala 587:56]
    y[11] <= _y_11_T_3 @[CORDIC.scala 587:20]
    z0s[11] <= z0sr[5] @[CORDIC.scala 588:22]
    modes[11] <= modesr[5] @[CORDIC.scala 589:24]
    node _fxxterm_T_44 = gt(theta[11], z0s[11]) @[CORDIC.scala 593:42]
    node _fxxterm_T_45 = sub(asSInt(UInt<1>("h0")), x[11]) @[CORDIC.scala 593:56]
    node _fxxterm_T_46 = tail(_fxxterm_T_45, 1) @[CORDIC.scala 593:56]
    node _fxxterm_T_47 = asSInt(_fxxterm_T_46) @[CORDIC.scala 593:56]
    node fxxterm_11 = mux(_fxxterm_T_44, _fxxterm_T_47, x[11]) @[CORDIC.scala 593:28]
    node _fxyterm_T_44 = gt(theta[11], z0s[11]) @[CORDIC.scala 594:42]
    node _fxyterm_T_45 = sub(asSInt(UInt<1>("h0")), y[11]) @[CORDIC.scala 594:56]
    node _fxyterm_T_46 = tail(_fxyterm_T_45, 1) @[CORDIC.scala 594:56]
    node _fxyterm_T_47 = asSInt(_fxyterm_T_46) @[CORDIC.scala 594:56]
    node fxyterm_11 = mux(_fxyterm_T_44, _fxyterm_T_47, y[11]) @[CORDIC.scala 594:28]
    node _fxthetaterm_T_33 = gt(theta[11], z0s[11]) @[CORDIC.scala 595:46]
    node _fxthetaterm_T_34 = sub(UInt<1>("h0"), atantable16[11]) @[CORDIC.scala 595:60]
    node _fxthetaterm_T_35 = tail(_fxthetaterm_T_34, 1) @[CORDIC.scala 595:60]
    node fxthetaterm_11 = mux(_fxthetaterm_T_33, _fxthetaterm_T_35, atantable16[11]) @[CORDIC.scala 595:32]
    node _theta_12_T = asSInt(fxthetaterm_11) @[CORDIC.scala 598:54]
    node _theta_12_T_1 = add(theta[11], _theta_12_T) @[CORDIC.scala 598:40]
    node _theta_12_T_2 = tail(_theta_12_T_1, 1) @[CORDIC.scala 598:40]
    node _theta_12_T_3 = asSInt(_theta_12_T_2) @[CORDIC.scala 598:40]
    theta[12] <= _theta_12_T_3 @[CORDIC.scala 598:24]
    node _x_12_T = dshr(fxyterm_11, UInt<4>("hb")) @[CORDIC.scala 599:43]
    node _x_12_T_1 = sub(x[11], _x_12_T) @[CORDIC.scala 599:32]
    node _x_12_T_2 = tail(_x_12_T_1, 1) @[CORDIC.scala 599:32]
    node _x_12_T_3 = asSInt(_x_12_T_2) @[CORDIC.scala 599:32]
    x[12] <= _x_12_T_3 @[CORDIC.scala 599:20]
    node _y_12_T = dshr(fxxterm_11, UInt<4>("hb")) @[CORDIC.scala 600:32]
    node _y_12_T_1 = add(_y_12_T, y[11]) @[CORDIC.scala 600:56]
    node _y_12_T_2 = tail(_y_12_T_1, 1) @[CORDIC.scala 600:56]
    node _y_12_T_3 = asSInt(_y_12_T_2) @[CORDIC.scala 600:56]
    y[12] <= _y_12_T_3 @[CORDIC.scala 600:20]
    z0s[12] <= z0s[11] @[CORDIC.scala 601:22]
    modes[12] <= modes[11] @[CORDIC.scala 602:24]
    thetar[6] <= theta[12] @[CORDIC.scala 606:24]
    xr[6] <= x[12] @[CORDIC.scala 607:20]
    yr[6] <= y[12] @[CORDIC.scala 608:20]
    z0sr[6] <= z0s[12] @[CORDIC.scala 609:22]
    modesr[6] <= modes[12] @[CORDIC.scala 610:24]
    node _fxxterm_T_48 = gt(thetar[6], z0sr[6]) @[CORDIC.scala 581:42]
    node _fxxterm_T_49 = sub(asSInt(UInt<1>("h0")), xr[6]) @[CORDIC.scala 581:56]
    node _fxxterm_T_50 = tail(_fxxterm_T_49, 1) @[CORDIC.scala 581:56]
    node _fxxterm_T_51 = asSInt(_fxxterm_T_50) @[CORDIC.scala 581:56]
    node fxxterm_12 = mux(_fxxterm_T_48, _fxxterm_T_51, xr[6]) @[CORDIC.scala 581:28]
    node _fxyterm_T_48 = gt(thetar[6], z0sr[6]) @[CORDIC.scala 582:42]
    node _fxyterm_T_49 = sub(asSInt(UInt<1>("h0")), yr[6]) @[CORDIC.scala 582:56]
    node _fxyterm_T_50 = tail(_fxyterm_T_49, 1) @[CORDIC.scala 582:56]
    node _fxyterm_T_51 = asSInt(_fxyterm_T_50) @[CORDIC.scala 582:56]
    node fxyterm_12 = mux(_fxyterm_T_48, _fxyterm_T_51, yr[6]) @[CORDIC.scala 582:28]
    node _fxthetaterm_T_36 = gt(thetar[6], z0sr[6]) @[CORDIC.scala 583:46]
    node _fxthetaterm_T_37 = sub(UInt<1>("h0"), atantable16[12]) @[CORDIC.scala 583:60]
    node _fxthetaterm_T_38 = tail(_fxthetaterm_T_37, 1) @[CORDIC.scala 583:60]
    node fxthetaterm_12 = mux(_fxthetaterm_T_36, _fxthetaterm_T_38, atantable16[12]) @[CORDIC.scala 583:32]
    node _theta_13_T = asSInt(fxthetaterm_12) @[CORDIC.scala 585:54]
    node _theta_13_T_1 = add(thetar[6], _theta_13_T) @[CORDIC.scala 585:40]
    node _theta_13_T_2 = tail(_theta_13_T_1, 1) @[CORDIC.scala 585:40]
    node _theta_13_T_3 = asSInt(_theta_13_T_2) @[CORDIC.scala 585:40]
    theta[13] <= _theta_13_T_3 @[CORDIC.scala 585:24]
    node _x_13_T = dshr(fxyterm_12, UInt<4>("hc")) @[CORDIC.scala 586:43]
    node _x_13_T_1 = sub(xr[6], _x_13_T) @[CORDIC.scala 586:32]
    node _x_13_T_2 = tail(_x_13_T_1, 1) @[CORDIC.scala 586:32]
    node _x_13_T_3 = asSInt(_x_13_T_2) @[CORDIC.scala 586:32]
    x[13] <= _x_13_T_3 @[CORDIC.scala 586:20]
    node _y_13_T = dshr(fxxterm_12, UInt<4>("hc")) @[CORDIC.scala 587:32]
    node _y_13_T_1 = add(_y_13_T, yr[6]) @[CORDIC.scala 587:56]
    node _y_13_T_2 = tail(_y_13_T_1, 1) @[CORDIC.scala 587:56]
    node _y_13_T_3 = asSInt(_y_13_T_2) @[CORDIC.scala 587:56]
    y[13] <= _y_13_T_3 @[CORDIC.scala 587:20]
    z0s[13] <= z0sr[6] @[CORDIC.scala 588:22]
    modes[13] <= modesr[6] @[CORDIC.scala 589:24]
    node _fxxterm_T_52 = gt(theta[13], z0s[13]) @[CORDIC.scala 593:42]
    node _fxxterm_T_53 = sub(asSInt(UInt<1>("h0")), x[13]) @[CORDIC.scala 593:56]
    node _fxxterm_T_54 = tail(_fxxterm_T_53, 1) @[CORDIC.scala 593:56]
    node _fxxterm_T_55 = asSInt(_fxxterm_T_54) @[CORDIC.scala 593:56]
    node fxxterm_13 = mux(_fxxterm_T_52, _fxxterm_T_55, x[13]) @[CORDIC.scala 593:28]
    node _fxyterm_T_52 = gt(theta[13], z0s[13]) @[CORDIC.scala 594:42]
    node _fxyterm_T_53 = sub(asSInt(UInt<1>("h0")), y[13]) @[CORDIC.scala 594:56]
    node _fxyterm_T_54 = tail(_fxyterm_T_53, 1) @[CORDIC.scala 594:56]
    node _fxyterm_T_55 = asSInt(_fxyterm_T_54) @[CORDIC.scala 594:56]
    node fxyterm_13 = mux(_fxyterm_T_52, _fxyterm_T_55, y[13]) @[CORDIC.scala 594:28]
    node _fxthetaterm_T_39 = gt(theta[13], z0s[13]) @[CORDIC.scala 595:46]
    node _fxthetaterm_T_40 = sub(UInt<1>("h0"), atantable16[13]) @[CORDIC.scala 595:60]
    node _fxthetaterm_T_41 = tail(_fxthetaterm_T_40, 1) @[CORDIC.scala 595:60]
    node fxthetaterm_13 = mux(_fxthetaterm_T_39, _fxthetaterm_T_41, atantable16[13]) @[CORDIC.scala 595:32]
    node _theta_14_T = asSInt(fxthetaterm_13) @[CORDIC.scala 598:54]
    node _theta_14_T_1 = add(theta[13], _theta_14_T) @[CORDIC.scala 598:40]
    node _theta_14_T_2 = tail(_theta_14_T_1, 1) @[CORDIC.scala 598:40]
    node _theta_14_T_3 = asSInt(_theta_14_T_2) @[CORDIC.scala 598:40]
    theta[14] <= _theta_14_T_3 @[CORDIC.scala 598:24]
    node _x_14_T = dshr(fxyterm_13, UInt<4>("hd")) @[CORDIC.scala 599:43]
    node _x_14_T_1 = sub(x[13], _x_14_T) @[CORDIC.scala 599:32]
    node _x_14_T_2 = tail(_x_14_T_1, 1) @[CORDIC.scala 599:32]
    node _x_14_T_3 = asSInt(_x_14_T_2) @[CORDIC.scala 599:32]
    x[14] <= _x_14_T_3 @[CORDIC.scala 599:20]
    node _y_14_T = dshr(fxxterm_13, UInt<4>("hd")) @[CORDIC.scala 600:32]
    node _y_14_T_1 = add(_y_14_T, y[13]) @[CORDIC.scala 600:56]
    node _y_14_T_2 = tail(_y_14_T_1, 1) @[CORDIC.scala 600:56]
    node _y_14_T_3 = asSInt(_y_14_T_2) @[CORDIC.scala 600:56]
    y[14] <= _y_14_T_3 @[CORDIC.scala 600:20]
    z0s[14] <= z0s[13] @[CORDIC.scala 601:22]
    modes[14] <= modes[13] @[CORDIC.scala 602:24]
    thetar[7] <= theta[14] @[CORDIC.scala 606:24]
    xr[7] <= x[14] @[CORDIC.scala 607:20]
    yr[7] <= y[14] @[CORDIC.scala 608:20]
    z0sr[7] <= z0s[14] @[CORDIC.scala 609:22]
    modesr[7] <= modes[14] @[CORDIC.scala 610:24]
    node _fxxterm_T_56 = gt(thetar[7], z0sr[7]) @[CORDIC.scala 581:42]
    node _fxxterm_T_57 = sub(asSInt(UInt<1>("h0")), xr[7]) @[CORDIC.scala 581:56]
    node _fxxterm_T_58 = tail(_fxxterm_T_57, 1) @[CORDIC.scala 581:56]
    node _fxxterm_T_59 = asSInt(_fxxterm_T_58) @[CORDIC.scala 581:56]
    node fxxterm_14 = mux(_fxxterm_T_56, _fxxterm_T_59, xr[7]) @[CORDIC.scala 581:28]
    node _fxyterm_T_56 = gt(thetar[7], z0sr[7]) @[CORDIC.scala 582:42]
    node _fxyterm_T_57 = sub(asSInt(UInt<1>("h0")), yr[7]) @[CORDIC.scala 582:56]
    node _fxyterm_T_58 = tail(_fxyterm_T_57, 1) @[CORDIC.scala 582:56]
    node _fxyterm_T_59 = asSInt(_fxyterm_T_58) @[CORDIC.scala 582:56]
    node fxyterm_14 = mux(_fxyterm_T_56, _fxyterm_T_59, yr[7]) @[CORDIC.scala 582:28]
    node _fxthetaterm_T_42 = gt(thetar[7], z0sr[7]) @[CORDIC.scala 583:46]
    node _fxthetaterm_T_43 = sub(UInt<1>("h0"), atantable16[14]) @[CORDIC.scala 583:60]
    node _fxthetaterm_T_44 = tail(_fxthetaterm_T_43, 1) @[CORDIC.scala 583:60]
    node fxthetaterm_14 = mux(_fxthetaterm_T_42, _fxthetaterm_T_44, atantable16[14]) @[CORDIC.scala 583:32]
    node _theta_15_T = asSInt(fxthetaterm_14) @[CORDIC.scala 585:54]
    node _theta_15_T_1 = add(thetar[7], _theta_15_T) @[CORDIC.scala 585:40]
    node _theta_15_T_2 = tail(_theta_15_T_1, 1) @[CORDIC.scala 585:40]
    node _theta_15_T_3 = asSInt(_theta_15_T_2) @[CORDIC.scala 585:40]
    theta[15] <= _theta_15_T_3 @[CORDIC.scala 585:24]
    node _x_15_T = dshr(fxyterm_14, UInt<4>("he")) @[CORDIC.scala 586:43]
    node _x_15_T_1 = sub(xr[7], _x_15_T) @[CORDIC.scala 586:32]
    node _x_15_T_2 = tail(_x_15_T_1, 1) @[CORDIC.scala 586:32]
    node _x_15_T_3 = asSInt(_x_15_T_2) @[CORDIC.scala 586:32]
    x[15] <= _x_15_T_3 @[CORDIC.scala 586:20]
    node _y_15_T = dshr(fxxterm_14, UInt<4>("he")) @[CORDIC.scala 587:32]
    node _y_15_T_1 = add(_y_15_T, yr[7]) @[CORDIC.scala 587:56]
    node _y_15_T_2 = tail(_y_15_T_1, 1) @[CORDIC.scala 587:56]
    node _y_15_T_3 = asSInt(_y_15_T_2) @[CORDIC.scala 587:56]
    y[15] <= _y_15_T_3 @[CORDIC.scala 587:20]
    z0s[15] <= z0sr[7] @[CORDIC.scala 588:22]
    modes[15] <= modesr[7] @[CORDIC.scala 589:24]
    node _fxxterm_T_60 = gt(theta[15], z0s[15]) @[CORDIC.scala 593:42]
    node _fxxterm_T_61 = sub(asSInt(UInt<1>("h0")), x[15]) @[CORDIC.scala 593:56]
    node _fxxterm_T_62 = tail(_fxxterm_T_61, 1) @[CORDIC.scala 593:56]
    node _fxxterm_T_63 = asSInt(_fxxterm_T_62) @[CORDIC.scala 593:56]
    node fxxterm_15 = mux(_fxxterm_T_60, _fxxterm_T_63, x[15]) @[CORDIC.scala 593:28]
    node _fxyterm_T_60 = gt(theta[15], z0s[15]) @[CORDIC.scala 594:42]
    node _fxyterm_T_61 = sub(asSInt(UInt<1>("h0")), y[15]) @[CORDIC.scala 594:56]
    node _fxyterm_T_62 = tail(_fxyterm_T_61, 1) @[CORDIC.scala 594:56]
    node _fxyterm_T_63 = asSInt(_fxyterm_T_62) @[CORDIC.scala 594:56]
    node fxyterm_15 = mux(_fxyterm_T_60, _fxyterm_T_63, y[15]) @[CORDIC.scala 594:28]
    node _fxthetaterm_T_45 = gt(theta[15], z0s[15]) @[CORDIC.scala 595:46]
    node _fxthetaterm_T_46 = sub(UInt<1>("h0"), atantable16[15]) @[CORDIC.scala 595:60]
    node _fxthetaterm_T_47 = tail(_fxthetaterm_T_46, 1) @[CORDIC.scala 595:60]
    node fxthetaterm_15 = mux(_fxthetaterm_T_45, _fxthetaterm_T_47, atantable16[15]) @[CORDIC.scala 595:32]
    node _theta_16_T = asSInt(fxthetaterm_15) @[CORDIC.scala 598:54]
    node _theta_16_T_1 = add(theta[15], _theta_16_T) @[CORDIC.scala 598:40]
    node _theta_16_T_2 = tail(_theta_16_T_1, 1) @[CORDIC.scala 598:40]
    node _theta_16_T_3 = asSInt(_theta_16_T_2) @[CORDIC.scala 598:40]
    theta[16] <= _theta_16_T_3 @[CORDIC.scala 598:24]
    node _x_16_T = dshr(fxyterm_15, UInt<4>("hf")) @[CORDIC.scala 599:43]
    node _x_16_T_1 = sub(x[15], _x_16_T) @[CORDIC.scala 599:32]
    node _x_16_T_2 = tail(_x_16_T_1, 1) @[CORDIC.scala 599:32]
    node _x_16_T_3 = asSInt(_x_16_T_2) @[CORDIC.scala 599:32]
    x[16] <= _x_16_T_3 @[CORDIC.scala 599:20]
    node _y_16_T = dshr(fxxterm_15, UInt<4>("hf")) @[CORDIC.scala 600:32]
    node _y_16_T_1 = add(_y_16_T, y[15]) @[CORDIC.scala 600:56]
    node _y_16_T_2 = tail(_y_16_T_1, 1) @[CORDIC.scala 600:56]
    node _y_16_T_3 = asSInt(_y_16_T_2) @[CORDIC.scala 600:56]
    y[16] <= _y_16_T_3 @[CORDIC.scala 600:20]
    z0s[16] <= z0s[15] @[CORDIC.scala 601:22]
    modes[16] <= modes[15] @[CORDIC.scala 602:24]
    thetar[8] <= theta[16] @[CORDIC.scala 606:24]
    xr[8] <= x[16] @[CORDIC.scala 607:20]
    yr[8] <= y[16] @[CORDIC.scala 608:20]
    z0sr[8] <= z0s[16] @[CORDIC.scala 609:22]
    modesr[8] <= modes[16] @[CORDIC.scala 610:24]
    inst tofloatxout of FixedToFloat16 @[CORDIC.scala 616:31]
    tofloatxout.clock <= clock
    tofloatxout.reset <= reset
    inst tofloatyout of FixedToFloat16_1 @[CORDIC.scala 617:31]
    tofloatyout.clock <= clock
    tofloatyout.reset <= reset
    inst tofloatzout of FixedToFloat16_2 @[CORDIC.scala 618:31]
    tofloatzout.clock <= clock
    tofloatzout.reset <= reset
    node _tofloatxout_io_in_T = asUInt(xr[8]) @[CORDIC.scala 620:37]
    tofloatxout.io.in <= _tofloatxout_io_in_T @[CORDIC.scala 620:25]
    node _tofloatyout_io_in_T = asUInt(yr[8]) @[CORDIC.scala 621:37]
    tofloatyout.io.in <= _tofloatyout_io_in_T @[CORDIC.scala 621:25]
    node _tofloatzout_io_in_T = asUInt(z0sr[8]) @[CORDIC.scala 622:39]
    tofloatzout.io.in <= _tofloatzout_io_in_T @[CORDIC.scala 622:25]
    io.out_mode <= modesr[8] @[CORDIC.scala 623:19]
    io.out_x <= tofloatxout.io.out @[CORDIC.scala 625:16]
    io.out_y <= tofloatyout.io.out @[CORDIC.scala 626:16]
    io.out_z <= tofloatzout.io.out @[CORDIC.scala 627:16]

  module Sin :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip in : UInt<16>, flip ready : UInt<1>, out : UInt<16>, valid : UInt<1>}

    inst reducer of TrigRangeReducer @[Sin.scala 24:31]
    reducer.clock <= clock
    reducer.reset <= reset
    inst tofixedz0 of FloatToFixed16 @[Sin.scala 37:27]
    tofixedz0.clock <= clock
    tofixedz0.reset <= reset
    reducer.io.in <= io.in @[Sin.scala 38:19]
    tofixedz0.io.in <= reducer.io.out @[Sin.scala 39:21]
    inst cordic of CORDIC @[Sin.scala 41:24]
    cordic.clock <= clock
    cordic.reset <= reset
    cordic.io.in_x0 <= UInt<14>("h38dc") @[Sin.scala 42:21]
    cordic.io.in_y0 <= UInt<1>("h0") @[Sin.scala 43:21]
    node _adjangle_T = asSInt(tofixedz0.io.out) @[Sin.scala 44:50]
    node _adjangle_T_1 = sub(asSInt(UInt<14>("h1922")), _adjangle_T) @[Sin.scala 44:31]
    node _adjangle_T_2 = tail(_adjangle_T_1, 1) @[Sin.scala 44:31]
    node adjangle = asSInt(_adjangle_T_2) @[Sin.scala 44:31]
    node _theta_T = lt(adjangle, asSInt(UInt<1>("h0"))) @[Sin.scala 45:30]
    node _theta_T_1 = add(adjangle, asSInt(UInt<16>("h6488"))) @[Sin.scala 45:46]
    node _theta_T_2 = tail(_theta_T_1, 1) @[Sin.scala 45:46]
    node _theta_T_3 = asSInt(_theta_T_2) @[Sin.scala 45:46]
    node theta = mux(_theta_T, _theta_T_3, adjangle) @[Sin.scala 45:20]
    node _T = geq(theta, asSInt(UInt<16>("h4b66"))) @[Sin.scala 49:16]
    when _T : @[Sin.scala 49:37]
      cordic.io.in_mode <= UInt<2>("h2") @[Sin.scala 50:25]
      node _cordic_io_in_z0_T = sub(theta, asSInt(UInt<16>("h6488"))) @[Sin.scala 51:33]
      node _cordic_io_in_z0_T_1 = tail(_cordic_io_in_z0_T, 1) @[Sin.scala 51:33]
      node _cordic_io_in_z0_T_2 = asSInt(_cordic_io_in_z0_T_1) @[Sin.scala 51:33]
      node _cordic_io_in_z0_T_3 = asUInt(_cordic_io_in_z0_T_2) @[Sin.scala 51:43]
      cordic.io.in_z0 <= _cordic_io_in_z0_T_3 @[Sin.scala 51:23]
    else :
      node _T_1 = geq(theta, asSInt(UInt<14>("h1922"))) @[Sin.scala 52:22]
      node _T_2 = lt(theta, asSInt(UInt<16>("h4b66"))) @[Sin.scala 52:45]
      node _T_3 = and(_T_1, _T_2) @[Sin.scala 52:36]
      when _T_3 : @[Sin.scala 52:65]
        cordic.io.in_mode <= UInt<1>("h1") @[Sin.scala 53:25]
        node _cordic_io_in_z0_T_4 = sub(asSInt(UInt<15>("h3244")), theta) @[Sin.scala 54:30]
        node _cordic_io_in_z0_T_5 = tail(_cordic_io_in_z0_T_4, 1) @[Sin.scala 54:30]
        node _cordic_io_in_z0_T_6 = asSInt(_cordic_io_in_z0_T_5) @[Sin.scala 54:30]
        node _cordic_io_in_z0_T_7 = asUInt(_cordic_io_in_z0_T_6) @[Sin.scala 54:39]
        cordic.io.in_z0 <= _cordic_io_in_z0_T_7 @[Sin.scala 54:23]
      else :
        node _cordic_io_in_z0_T_8 = asUInt(theta) @[Sin.scala 56:32]
        cordic.io.in_z0 <= _cordic_io_in_z0_T_8 @[Sin.scala 56:23]
        cordic.io.in_mode <= UInt<1>("h0") @[Sin.scala 57:25]
    node _T_4 = eq(cordic.io.out_mode, UInt<2>("h2")) @[Sin.scala 60:18]
    when _T_4 : @[Sin.scala 60:27]
      io.out <= cordic.io.out_x @[Sin.scala 61:14]
    else :
      node _T_5 = eq(cordic.io.out_mode, UInt<1>("h1")) @[Sin.scala 62:24]
      when _T_5 : @[Sin.scala 62:33]
        node _io_out_T = bits(cordic.io.out_x, 15, 15) @[Sin.scala 63:33]
        node _io_out_T_1 = not(_io_out_T) @[Sin.scala 63:17]
        node _io_out_T_2 = bits(cordic.io.out_x, 14, 0) @[Sin.scala 63:56]
        node _io_out_T_3 = cat(_io_out_T_1, _io_out_T_2) @[Sin.scala 63:38]
        io.out <= _io_out_T_3 @[Sin.scala 63:14]
      else :
        io.out <= cordic.io.out_x @[Sin.scala 65:14]
    wire _shift_reg_WIRE : UInt<16>[31] @[Sin.scala 236:48]
    _shift_reg_WIRE[0] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[1] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[2] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[3] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[4] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[5] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[6] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[7] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[8] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[9] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[10] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[11] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[12] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[13] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[14] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[15] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[16] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[17] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[18] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[19] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[20] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[21] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[22] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[23] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[24] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[25] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[26] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[27] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[28] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[29] <= UInt<16>("h0") @[Sin.scala 236:48]
    _shift_reg_WIRE[30] <= UInt<16>("h0") @[Sin.scala 236:48]
    reg shift_reg : UInt<16>[31], clock with :
      reset => (reset, _shift_reg_WIRE) @[Sin.scala 236:26]
    shift_reg[0] <= io.ready @[Sin.scala 237:16]
    shift_reg[1] <= shift_reg[0] @[Sin.scala 239:18]
    shift_reg[2] <= shift_reg[1] @[Sin.scala 239:18]
    shift_reg[3] <= shift_reg[2] @[Sin.scala 239:18]
    shift_reg[4] <= shift_reg[3] @[Sin.scala 239:18]
    shift_reg[5] <= shift_reg[4] @[Sin.scala 239:18]
    shift_reg[6] <= shift_reg[5] @[Sin.scala 239:18]
    shift_reg[7] <= shift_reg[6] @[Sin.scala 239:18]
    shift_reg[8] <= shift_reg[7] @[Sin.scala 239:18]
    shift_reg[9] <= shift_reg[8] @[Sin.scala 239:18]
    shift_reg[10] <= shift_reg[9] @[Sin.scala 239:18]
    shift_reg[11] <= shift_reg[10] @[Sin.scala 239:18]
    shift_reg[12] <= shift_reg[11] @[Sin.scala 239:18]
    shift_reg[13] <= shift_reg[12] @[Sin.scala 239:18]
    shift_reg[14] <= shift_reg[13] @[Sin.scala 239:18]
    shift_reg[15] <= shift_reg[14] @[Sin.scala 239:18]
    shift_reg[16] <= shift_reg[15] @[Sin.scala 239:18]
    shift_reg[17] <= shift_reg[16] @[Sin.scala 239:18]
    shift_reg[18] <= shift_reg[17] @[Sin.scala 239:18]
    shift_reg[19] <= shift_reg[18] @[Sin.scala 239:18]
    shift_reg[20] <= shift_reg[19] @[Sin.scala 239:18]
    shift_reg[21] <= shift_reg[20] @[Sin.scala 239:18]
    shift_reg[22] <= shift_reg[21] @[Sin.scala 239:18]
    shift_reg[23] <= shift_reg[22] @[Sin.scala 239:18]
    shift_reg[24] <= shift_reg[23] @[Sin.scala 239:18]
    shift_reg[25] <= shift_reg[24] @[Sin.scala 239:18]
    shift_reg[26] <= shift_reg[25] @[Sin.scala 239:18]
    shift_reg[27] <= shift_reg[26] @[Sin.scala 239:18]
    shift_reg[28] <= shift_reg[27] @[Sin.scala 239:18]
    shift_reg[29] <= shift_reg[28] @[Sin.scala 239:18]
    shift_reg[30] <= shift_reg[29] @[Sin.scala 239:18]
    io.valid <= shift_reg[30] @[Sin.scala 241:12]

