circuit Atan :
  module FloatToFixed16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    node _frac_T = bits(io.in, 9, 0) @[FixedPoint.scala 34:47]
    node frac = cat(UInt<6>("h0"), _frac_T) @[FixedPoint.scala 34:39]
    node exp = bits(io.in, 14, 10) @[FixedPoint.scala 35:25]
    node sign = bits(io.in, 15, 15) @[FixedPoint.scala 36:26]
    node _shiftamt_T = sub(exp, UInt<5>("hf")) @[FixedPoint.scala 37:23]
    node _shiftamt_T_1 = tail(_shiftamt_T, 1) @[FixedPoint.scala 37:23]
    node shiftamt = asSInt(_shiftamt_T_1) @[FixedPoint.scala 37:36]
    node _data_T = bits(shiftamt, 4, 4) @[FixedPoint.scala 39:26]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 39:30]
    node _data_T_2 = bits(frac, 15, 0) @[FixedPoint.scala 40:11]
    node _data_T_3 = or(_data_T_2, UInt<16>("h400")) @[FixedPoint.scala 40:18]
    node _data_T_4 = dshl(_data_T_3, UInt<2>("h2")) @[FixedPoint.scala 40:36]
    node _data_T_5 = sub(asSInt(UInt<1>("h0")), shiftamt) @[FixedPoint.scala 40:48]
    node _data_T_6 = tail(_data_T_5, 1) @[FixedPoint.scala 40:48]
    node _data_T_7 = asSInt(_data_T_6) @[FixedPoint.scala 40:48]
    node _data_T_8 = asUInt(_data_T_7) @[FixedPoint.scala 40:59]
    node _data_T_9 = dshr(_data_T_4, _data_T_8) @[FixedPoint.scala 40:44]
    node _data_T_10 = bits(frac, 15, 0) @[FixedPoint.scala 41:11]
    node _data_T_11 = or(_data_T_10, UInt<16>("h400")) @[FixedPoint.scala 41:18]
    node _data_T_12 = dshl(_data_T_11, UInt<2>("h2")) @[FixedPoint.scala 41:36]
    node _data_T_13 = asUInt(shiftamt) @[FixedPoint.scala 41:58]
    node _data_T_14 = dshl(_data_T_12, _data_T_13) @[FixedPoint.scala 41:44]
    node data = mux(_data_T_1, _data_T_9, _data_T_14) @[FixedPoint.scala 39:17]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 42:22]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h1")) @[FixedPoint.scala 42:27]
    node _io_out_T_2 = sub(UInt<1>("h0"), data) @[FixedPoint.scala 42:40]
    node _io_out_T_3 = tail(_io_out_T_2, 1) @[FixedPoint.scala 42:40]
    node _io_out_T_4 = mux(_io_out_T_1, _io_out_T_3, data) @[FixedPoint.scala 42:16]
    io.out <= _io_out_T_4 @[FixedPoint.scala 42:10]

  module FloatToFixed16_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    node _frac_T = bits(io.in, 9, 0) @[FixedPoint.scala 34:47]
    node frac = cat(UInt<6>("h0"), _frac_T) @[FixedPoint.scala 34:39]
    node exp = bits(io.in, 14, 10) @[FixedPoint.scala 35:25]
    node sign = bits(io.in, 15, 15) @[FixedPoint.scala 36:26]
    node _shiftamt_T = sub(exp, UInt<5>("hf")) @[FixedPoint.scala 37:23]
    node _shiftamt_T_1 = tail(_shiftamt_T, 1) @[FixedPoint.scala 37:23]
    node shiftamt = asSInt(_shiftamt_T_1) @[FixedPoint.scala 37:36]
    node _data_T = bits(shiftamt, 4, 4) @[FixedPoint.scala 39:26]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 39:30]
    node _data_T_2 = bits(frac, 15, 0) @[FixedPoint.scala 40:11]
    node _data_T_3 = or(_data_T_2, UInt<16>("h400")) @[FixedPoint.scala 40:18]
    node _data_T_4 = dshl(_data_T_3, UInt<2>("h2")) @[FixedPoint.scala 40:36]
    node _data_T_5 = sub(asSInt(UInt<1>("h0")), shiftamt) @[FixedPoint.scala 40:48]
    node _data_T_6 = tail(_data_T_5, 1) @[FixedPoint.scala 40:48]
    node _data_T_7 = asSInt(_data_T_6) @[FixedPoint.scala 40:48]
    node _data_T_8 = asUInt(_data_T_7) @[FixedPoint.scala 40:59]
    node _data_T_9 = dshr(_data_T_4, _data_T_8) @[FixedPoint.scala 40:44]
    node _data_T_10 = bits(frac, 15, 0) @[FixedPoint.scala 41:11]
    node _data_T_11 = or(_data_T_10, UInt<16>("h400")) @[FixedPoint.scala 41:18]
    node _data_T_12 = dshl(_data_T_11, UInt<2>("h2")) @[FixedPoint.scala 41:36]
    node _data_T_13 = asUInt(shiftamt) @[FixedPoint.scala 41:58]
    node _data_T_14 = dshl(_data_T_12, _data_T_13) @[FixedPoint.scala 41:44]
    node data = mux(_data_T_1, _data_T_9, _data_T_14) @[FixedPoint.scala 39:17]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 42:22]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h1")) @[FixedPoint.scala 42:27]
    node _io_out_T_2 = sub(UInt<1>("h0"), data) @[FixedPoint.scala 42:40]
    node _io_out_T_3 = tail(_io_out_T_2, 1) @[FixedPoint.scala 42:40]
    node _io_out_T_4 = mux(_io_out_T_1, _io_out_T_3, data) @[FixedPoint.scala 42:16]
    io.out <= _io_out_T_4 @[FixedPoint.scala 42:10]

  module FloatToFixed16_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    node _frac_T = bits(io.in, 9, 0) @[FixedPoint.scala 34:47]
    node frac = cat(UInt<6>("h0"), _frac_T) @[FixedPoint.scala 34:39]
    node exp = bits(io.in, 14, 10) @[FixedPoint.scala 35:25]
    node sign = bits(io.in, 15, 15) @[FixedPoint.scala 36:26]
    node _shiftamt_T = sub(exp, UInt<5>("hf")) @[FixedPoint.scala 37:23]
    node _shiftamt_T_1 = tail(_shiftamt_T, 1) @[FixedPoint.scala 37:23]
    node shiftamt = asSInt(_shiftamt_T_1) @[FixedPoint.scala 37:36]
    node _data_T = bits(shiftamt, 4, 4) @[FixedPoint.scala 39:26]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 39:30]
    node _data_T_2 = bits(frac, 15, 0) @[FixedPoint.scala 40:11]
    node _data_T_3 = or(_data_T_2, UInt<16>("h400")) @[FixedPoint.scala 40:18]
    node _data_T_4 = dshl(_data_T_3, UInt<2>("h2")) @[FixedPoint.scala 40:36]
    node _data_T_5 = sub(asSInt(UInt<1>("h0")), shiftamt) @[FixedPoint.scala 40:48]
    node _data_T_6 = tail(_data_T_5, 1) @[FixedPoint.scala 40:48]
    node _data_T_7 = asSInt(_data_T_6) @[FixedPoint.scala 40:48]
    node _data_T_8 = asUInt(_data_T_7) @[FixedPoint.scala 40:59]
    node _data_T_9 = dshr(_data_T_4, _data_T_8) @[FixedPoint.scala 40:44]
    node _data_T_10 = bits(frac, 15, 0) @[FixedPoint.scala 41:11]
    node _data_T_11 = or(_data_T_10, UInt<16>("h400")) @[FixedPoint.scala 41:18]
    node _data_T_12 = dshl(_data_T_11, UInt<2>("h2")) @[FixedPoint.scala 41:36]
    node _data_T_13 = asUInt(shiftamt) @[FixedPoint.scala 41:58]
    node _data_T_14 = dshl(_data_T_12, _data_T_13) @[FixedPoint.scala 41:44]
    node data = mux(_data_T_1, _data_T_9, _data_T_14) @[FixedPoint.scala 39:17]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 42:22]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h1")) @[FixedPoint.scala 42:27]
    node _io_out_T_2 = sub(UInt<1>("h0"), data) @[FixedPoint.scala 42:40]
    node _io_out_T_3 = tail(_io_out_T_2, 1) @[FixedPoint.scala 42:40]
    node _io_out_T_4 = mux(_io_out_T_1, _io_out_T_3, data) @[FixedPoint.scala 42:16]
    io.out <= _io_out_T_4 @[FixedPoint.scala 42:10]

  module CLZ16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<4>}

    node _bx_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 135:20]
    node _bx_T_1 = eq(_bx_T, UInt<1>("h0")) @[FixedPoint.scala 135:33]
    node _bx_T_2 = shl(io.in, 8) @[FixedPoint.scala 135:45]
    node bx = mux(_bx_T_1, _bx_T_2, io.in) @[FixedPoint.scala 135:15]
    node _cx_T = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 136:20]
    node _cx_T_1 = eq(_cx_T, UInt<1>("h0")) @[FixedPoint.scala 136:33]
    node _cx_T_2 = shl(bx, 4) @[FixedPoint.scala 136:45]
    node cx = mux(_cx_T_1, _cx_T_2, bx) @[FixedPoint.scala 136:15]
    node _dx_T = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 137:20]
    node _dx_T_1 = eq(_dx_T, UInt<1>("h0")) @[FixedPoint.scala 137:33]
    node _dx_T_2 = shl(cx, 2) @[FixedPoint.scala 137:45]
    node dx = mux(_dx_T_1, _dx_T_2, cx) @[FixedPoint.scala 137:15]
    node _io_out_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 139:18]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h0")) @[FixedPoint.scala 139:31]
    node _io_out_T_2 = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 139:48]
    node _io_out_T_3 = eq(_io_out_T_2, UInt<1>("h0")) @[FixedPoint.scala 139:61]
    node _io_out_T_4 = cat(_io_out_T_1, _io_out_T_3) @[FixedPoint.scala 139:40]
    node _io_out_T_5 = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 139:78]
    node _io_out_T_6 = eq(_io_out_T_5, UInt<1>("h0")) @[FixedPoint.scala 139:91]
    node _io_out_T_7 = cat(_io_out_T_4, _io_out_T_6) @[FixedPoint.scala 139:70]
    node _io_out_T_8 = and(dx, UInt<16>("h8000")) @[FixedPoint.scala 140:10]
    node _io_out_T_9 = eq(_io_out_T_8, UInt<1>("h0")) @[FixedPoint.scala 140:23]
    node _io_out_T_10 = cat(_io_out_T_7, _io_out_T_9) @[FixedPoint.scala 139:100]
    io.out <= _io_out_T_10 @[FixedPoint.scala 139:10]

  module FixedToFloat16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    wire sign : SInt<1> @[FixedPoint.scala 239:19]
    wire exp : SInt<5> @[FixedPoint.scala 240:17]
    wire frac : SInt<10> @[FixedPoint.scala 241:18]
    wire data : UInt<16> @[FixedPoint.scala 243:18]
    node _data_T = bits(io.in, 15, 15) @[FixedPoint.scala 244:20]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 244:25]
    node _data_T_2 = not(io.in) @[FixedPoint.scala 244:35]
    node _data_T_3 = add(_data_T_2, UInt<1>("h1")) @[FixedPoint.scala 244:50]
    node _data_T_4 = tail(_data_T_3, 1) @[FixedPoint.scala 244:50]
    node _data_T_5 = mux(_data_T_1, _data_T_4, io.in) @[FixedPoint.scala 244:14]
    data <= _data_T_5 @[FixedPoint.scala 244:8]
    node _sign_T = bits(io.in, 15, 15) @[FixedPoint.scala 245:16]
    node _sign_T_1 = asSInt(_sign_T) @[FixedPoint.scala 245:21]
    sign <= _sign_T_1 @[FixedPoint.scala 245:8]
    inst clz16 of CLZ16 @[FixedPoint.scala 247:21]
    clz16.clock <= clock
    clz16.reset <= reset
    clz16.io.in <= data @[FixedPoint.scala 248:15]
    wire leadingzeros : UInt<19> @[FixedPoint.scala 249:26]
    node _leadingzeros_T = bits(clz16.io.out, 3, 0) @[FixedPoint.scala 250:47]
    node _leadingzeros_T_1 = cat(UInt<15>("h0"), _leadingzeros_T) @[FixedPoint.scala 250:32]
    leadingzeros <= _leadingzeros_T_1 @[FixedPoint.scala 250:16]
    node _exp_T = sub(asSInt(UInt<4>("h4")), asSInt(UInt<2>("h1"))) @[FixedPoint.scala 252:16]
    node _exp_T_1 = tail(_exp_T, 1) @[FixedPoint.scala 252:16]
    node _exp_T_2 = asSInt(_exp_T_1) @[FixedPoint.scala 252:16]
    node _exp_T_3 = asSInt(leadingzeros) @[FixedPoint.scala 252:38]
    node _exp_T_4 = sub(_exp_T_2, _exp_T_3) @[FixedPoint.scala 252:23]
    node _exp_T_5 = tail(_exp_T_4, 1) @[FixedPoint.scala 252:23]
    node _exp_T_6 = asSInt(_exp_T_5) @[FixedPoint.scala 252:23]
    node _exp_T_7 = add(_exp_T_6, asSInt(UInt<5>("hf"))) @[FixedPoint.scala 252:46]
    node _exp_T_8 = tail(_exp_T_7, 1) @[FixedPoint.scala 252:46]
    node _exp_T_9 = asSInt(_exp_T_8) @[FixedPoint.scala 252:46]
    exp <= _exp_T_9 @[FixedPoint.scala 252:7]
    node _frac_T = asSInt(data) @[FixedPoint.scala 253:19]
    node _frac_T_1 = add(leadingzeros, UInt<1>("h1")) @[FixedPoint.scala 253:43]
    node _frac_T_2 = tail(_frac_T_1, 1) @[FixedPoint.scala 253:43]
    node _frac_T_3 = dshl(_frac_T, _frac_T_2) @[FixedPoint.scala 253:26]
    node _frac_T_4 = sub(UInt<5>("h10"), UInt<4>("ha")) @[FixedPoint.scala 253:75]
    node _frac_T_5 = tail(_frac_T_4, 1) @[FixedPoint.scala 253:75]
    node _frac_T_6 = dshr(_frac_T_3, _frac_T_5) @[FixedPoint.scala 253:66]
    frac <= _frac_T_6 @[FixedPoint.scala 253:8]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 255:18]
    node _io_out_T_1 = asUInt(exp) @[FixedPoint.scala 255:30]
    node _io_out_T_2 = cat(_io_out_T, _io_out_T_1) @[FixedPoint.scala 255:23]
    node _io_out_T_3 = bits(frac, 9, 0) @[FixedPoint.scala 255:44]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[FixedPoint.scala 255:37]
    io.out <= _io_out_T_4 @[FixedPoint.scala 255:10]

  module CLZ16_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<4>}

    node _bx_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 135:20]
    node _bx_T_1 = eq(_bx_T, UInt<1>("h0")) @[FixedPoint.scala 135:33]
    node _bx_T_2 = shl(io.in, 8) @[FixedPoint.scala 135:45]
    node bx = mux(_bx_T_1, _bx_T_2, io.in) @[FixedPoint.scala 135:15]
    node _cx_T = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 136:20]
    node _cx_T_1 = eq(_cx_T, UInt<1>("h0")) @[FixedPoint.scala 136:33]
    node _cx_T_2 = shl(bx, 4) @[FixedPoint.scala 136:45]
    node cx = mux(_cx_T_1, _cx_T_2, bx) @[FixedPoint.scala 136:15]
    node _dx_T = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 137:20]
    node _dx_T_1 = eq(_dx_T, UInt<1>("h0")) @[FixedPoint.scala 137:33]
    node _dx_T_2 = shl(cx, 2) @[FixedPoint.scala 137:45]
    node dx = mux(_dx_T_1, _dx_T_2, cx) @[FixedPoint.scala 137:15]
    node _io_out_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 139:18]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h0")) @[FixedPoint.scala 139:31]
    node _io_out_T_2 = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 139:48]
    node _io_out_T_3 = eq(_io_out_T_2, UInt<1>("h0")) @[FixedPoint.scala 139:61]
    node _io_out_T_4 = cat(_io_out_T_1, _io_out_T_3) @[FixedPoint.scala 139:40]
    node _io_out_T_5 = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 139:78]
    node _io_out_T_6 = eq(_io_out_T_5, UInt<1>("h0")) @[FixedPoint.scala 139:91]
    node _io_out_T_7 = cat(_io_out_T_4, _io_out_T_6) @[FixedPoint.scala 139:70]
    node _io_out_T_8 = and(dx, UInt<16>("h8000")) @[FixedPoint.scala 140:10]
    node _io_out_T_9 = eq(_io_out_T_8, UInt<1>("h0")) @[FixedPoint.scala 140:23]
    node _io_out_T_10 = cat(_io_out_T_7, _io_out_T_9) @[FixedPoint.scala 139:100]
    io.out <= _io_out_T_10 @[FixedPoint.scala 139:10]

  module FixedToFloat16_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    wire sign : SInt<1> @[FixedPoint.scala 239:19]
    wire exp : SInt<5> @[FixedPoint.scala 240:17]
    wire frac : SInt<10> @[FixedPoint.scala 241:18]
    wire data : UInt<16> @[FixedPoint.scala 243:18]
    node _data_T = bits(io.in, 15, 15) @[FixedPoint.scala 244:20]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 244:25]
    node _data_T_2 = not(io.in) @[FixedPoint.scala 244:35]
    node _data_T_3 = add(_data_T_2, UInt<1>("h1")) @[FixedPoint.scala 244:50]
    node _data_T_4 = tail(_data_T_3, 1) @[FixedPoint.scala 244:50]
    node _data_T_5 = mux(_data_T_1, _data_T_4, io.in) @[FixedPoint.scala 244:14]
    data <= _data_T_5 @[FixedPoint.scala 244:8]
    node _sign_T = bits(io.in, 15, 15) @[FixedPoint.scala 245:16]
    node _sign_T_1 = asSInt(_sign_T) @[FixedPoint.scala 245:21]
    sign <= _sign_T_1 @[FixedPoint.scala 245:8]
    inst clz16 of CLZ16_1 @[FixedPoint.scala 247:21]
    clz16.clock <= clock
    clz16.reset <= reset
    clz16.io.in <= data @[FixedPoint.scala 248:15]
    wire leadingzeros : UInt<19> @[FixedPoint.scala 249:26]
    node _leadingzeros_T = bits(clz16.io.out, 3, 0) @[FixedPoint.scala 250:47]
    node _leadingzeros_T_1 = cat(UInt<15>("h0"), _leadingzeros_T) @[FixedPoint.scala 250:32]
    leadingzeros <= _leadingzeros_T_1 @[FixedPoint.scala 250:16]
    node _exp_T = sub(asSInt(UInt<4>("h4")), asSInt(UInt<2>("h1"))) @[FixedPoint.scala 252:16]
    node _exp_T_1 = tail(_exp_T, 1) @[FixedPoint.scala 252:16]
    node _exp_T_2 = asSInt(_exp_T_1) @[FixedPoint.scala 252:16]
    node _exp_T_3 = asSInt(leadingzeros) @[FixedPoint.scala 252:38]
    node _exp_T_4 = sub(_exp_T_2, _exp_T_3) @[FixedPoint.scala 252:23]
    node _exp_T_5 = tail(_exp_T_4, 1) @[FixedPoint.scala 252:23]
    node _exp_T_6 = asSInt(_exp_T_5) @[FixedPoint.scala 252:23]
    node _exp_T_7 = add(_exp_T_6, asSInt(UInt<5>("hf"))) @[FixedPoint.scala 252:46]
    node _exp_T_8 = tail(_exp_T_7, 1) @[FixedPoint.scala 252:46]
    node _exp_T_9 = asSInt(_exp_T_8) @[FixedPoint.scala 252:46]
    exp <= _exp_T_9 @[FixedPoint.scala 252:7]
    node _frac_T = asSInt(data) @[FixedPoint.scala 253:19]
    node _frac_T_1 = add(leadingzeros, UInt<1>("h1")) @[FixedPoint.scala 253:43]
    node _frac_T_2 = tail(_frac_T_1, 1) @[FixedPoint.scala 253:43]
    node _frac_T_3 = dshl(_frac_T, _frac_T_2) @[FixedPoint.scala 253:26]
    node _frac_T_4 = sub(UInt<5>("h10"), UInt<4>("ha")) @[FixedPoint.scala 253:75]
    node _frac_T_5 = tail(_frac_T_4, 1) @[FixedPoint.scala 253:75]
    node _frac_T_6 = dshr(_frac_T_3, _frac_T_5) @[FixedPoint.scala 253:66]
    frac <= _frac_T_6 @[FixedPoint.scala 253:8]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 255:18]
    node _io_out_T_1 = asUInt(exp) @[FixedPoint.scala 255:30]
    node _io_out_T_2 = cat(_io_out_T, _io_out_T_1) @[FixedPoint.scala 255:23]
    node _io_out_T_3 = bits(frac, 9, 0) @[FixedPoint.scala 255:44]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[FixedPoint.scala 255:37]
    io.out <= _io_out_T_4 @[FixedPoint.scala 255:10]

  module CLZ16_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<4>}

    node _bx_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 135:20]
    node _bx_T_1 = eq(_bx_T, UInt<1>("h0")) @[FixedPoint.scala 135:33]
    node _bx_T_2 = shl(io.in, 8) @[FixedPoint.scala 135:45]
    node bx = mux(_bx_T_1, _bx_T_2, io.in) @[FixedPoint.scala 135:15]
    node _cx_T = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 136:20]
    node _cx_T_1 = eq(_cx_T, UInt<1>("h0")) @[FixedPoint.scala 136:33]
    node _cx_T_2 = shl(bx, 4) @[FixedPoint.scala 136:45]
    node cx = mux(_cx_T_1, _cx_T_2, bx) @[FixedPoint.scala 136:15]
    node _dx_T = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 137:20]
    node _dx_T_1 = eq(_dx_T, UInt<1>("h0")) @[FixedPoint.scala 137:33]
    node _dx_T_2 = shl(cx, 2) @[FixedPoint.scala 137:45]
    node dx = mux(_dx_T_1, _dx_T_2, cx) @[FixedPoint.scala 137:15]
    node _io_out_T = and(io.in, UInt<16>("hff00")) @[FixedPoint.scala 139:18]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h0")) @[FixedPoint.scala 139:31]
    node _io_out_T_2 = and(bx, UInt<16>("hf000")) @[FixedPoint.scala 139:48]
    node _io_out_T_3 = eq(_io_out_T_2, UInt<1>("h0")) @[FixedPoint.scala 139:61]
    node _io_out_T_4 = cat(_io_out_T_1, _io_out_T_3) @[FixedPoint.scala 139:40]
    node _io_out_T_5 = and(cx, UInt<16>("hc000")) @[FixedPoint.scala 139:78]
    node _io_out_T_6 = eq(_io_out_T_5, UInt<1>("h0")) @[FixedPoint.scala 139:91]
    node _io_out_T_7 = cat(_io_out_T_4, _io_out_T_6) @[FixedPoint.scala 139:70]
    node _io_out_T_8 = and(dx, UInt<16>("h8000")) @[FixedPoint.scala 140:10]
    node _io_out_T_9 = eq(_io_out_T_8, UInt<1>("h0")) @[FixedPoint.scala 140:23]
    node _io_out_T_10 = cat(_io_out_T_7, _io_out_T_9) @[FixedPoint.scala 139:100]
    io.out <= _io_out_T_10 @[FixedPoint.scala 139:10]

  module FixedToFloat16_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<16>, out : UInt<16>}

    wire sign : SInt<1> @[FixedPoint.scala 239:19]
    wire exp : SInt<5> @[FixedPoint.scala 240:17]
    wire frac : SInt<10> @[FixedPoint.scala 241:18]
    wire data : UInt<16> @[FixedPoint.scala 243:18]
    node _data_T = bits(io.in, 15, 15) @[FixedPoint.scala 244:20]
    node _data_T_1 = eq(_data_T, UInt<1>("h1")) @[FixedPoint.scala 244:25]
    node _data_T_2 = not(io.in) @[FixedPoint.scala 244:35]
    node _data_T_3 = add(_data_T_2, UInt<1>("h1")) @[FixedPoint.scala 244:50]
    node _data_T_4 = tail(_data_T_3, 1) @[FixedPoint.scala 244:50]
    node _data_T_5 = mux(_data_T_1, _data_T_4, io.in) @[FixedPoint.scala 244:14]
    data <= _data_T_5 @[FixedPoint.scala 244:8]
    node _sign_T = bits(io.in, 15, 15) @[FixedPoint.scala 245:16]
    node _sign_T_1 = asSInt(_sign_T) @[FixedPoint.scala 245:21]
    sign <= _sign_T_1 @[FixedPoint.scala 245:8]
    inst clz16 of CLZ16_2 @[FixedPoint.scala 247:21]
    clz16.clock <= clock
    clz16.reset <= reset
    clz16.io.in <= data @[FixedPoint.scala 248:15]
    wire leadingzeros : UInt<19> @[FixedPoint.scala 249:26]
    node _leadingzeros_T = bits(clz16.io.out, 3, 0) @[FixedPoint.scala 250:47]
    node _leadingzeros_T_1 = cat(UInt<15>("h0"), _leadingzeros_T) @[FixedPoint.scala 250:32]
    leadingzeros <= _leadingzeros_T_1 @[FixedPoint.scala 250:16]
    node _exp_T = sub(asSInt(UInt<4>("h4")), asSInt(UInt<2>("h1"))) @[FixedPoint.scala 252:16]
    node _exp_T_1 = tail(_exp_T, 1) @[FixedPoint.scala 252:16]
    node _exp_T_2 = asSInt(_exp_T_1) @[FixedPoint.scala 252:16]
    node _exp_T_3 = asSInt(leadingzeros) @[FixedPoint.scala 252:38]
    node _exp_T_4 = sub(_exp_T_2, _exp_T_3) @[FixedPoint.scala 252:23]
    node _exp_T_5 = tail(_exp_T_4, 1) @[FixedPoint.scala 252:23]
    node _exp_T_6 = asSInt(_exp_T_5) @[FixedPoint.scala 252:23]
    node _exp_T_7 = add(_exp_T_6, asSInt(UInt<5>("hf"))) @[FixedPoint.scala 252:46]
    node _exp_T_8 = tail(_exp_T_7, 1) @[FixedPoint.scala 252:46]
    node _exp_T_9 = asSInt(_exp_T_8) @[FixedPoint.scala 252:46]
    exp <= _exp_T_9 @[FixedPoint.scala 252:7]
    node _frac_T = asSInt(data) @[FixedPoint.scala 253:19]
    node _frac_T_1 = add(leadingzeros, UInt<1>("h1")) @[FixedPoint.scala 253:43]
    node _frac_T_2 = tail(_frac_T_1, 1) @[FixedPoint.scala 253:43]
    node _frac_T_3 = dshl(_frac_T, _frac_T_2) @[FixedPoint.scala 253:26]
    node _frac_T_4 = sub(UInt<5>("h10"), UInt<4>("ha")) @[FixedPoint.scala 253:75]
    node _frac_T_5 = tail(_frac_T_4, 1) @[FixedPoint.scala 253:75]
    node _frac_T_6 = dshr(_frac_T_3, _frac_T_5) @[FixedPoint.scala 253:66]
    frac <= _frac_T_6 @[FixedPoint.scala 253:8]
    node _io_out_T = bits(io.in, 15, 15) @[FixedPoint.scala 255:18]
    node _io_out_T_1 = asUInt(exp) @[FixedPoint.scala 255:30]
    node _io_out_T_2 = cat(_io_out_T, _io_out_T_1) @[FixedPoint.scala 255:23]
    node _io_out_T_3 = bits(frac, 9, 0) @[FixedPoint.scala 255:44]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[FixedPoint.scala 255:37]
    io.out <= _io_out_T_4 @[FixedPoint.scala 255:10]

  module VCORDIC :
    input clock : Clock
    input reset : Reset
    output io : { flip in_x0 : UInt<16>, flip in_y0 : UInt<16>, flip in_z0 : UInt<16>, out_x : UInt<16>, out_y : UInt<16>, out_z : UInt<16>}

    wire atantable16 : UInt<16>[16] @[VCORDIC.scala 72:25]
    atantable16[0] <= UInt<12>("hc91") @[VCORDIC.scala 73:18]
    atantable16[1] <= UInt<11>("h648") @[VCORDIC.scala 74:18]
    atantable16[2] <= UInt<10>("h324") @[VCORDIC.scala 75:18]
    atantable16[3] <= UInt<9>("h192") @[VCORDIC.scala 76:18]
    atantable16[4] <= UInt<8>("hc9") @[VCORDIC.scala 77:18]
    atantable16[5] <= UInt<7>("h65") @[VCORDIC.scala 78:18]
    atantable16[6] <= UInt<6>("h32") @[VCORDIC.scala 79:18]
    atantable16[7] <= UInt<5>("h19") @[VCORDIC.scala 80:18]
    atantable16[8] <= UInt<4>("hd") @[VCORDIC.scala 81:18]
    atantable16[9] <= UInt<3>("h6") @[VCORDIC.scala 82:18]
    atantable16[10] <= UInt<2>("h3") @[VCORDIC.scala 83:19]
    atantable16[11] <= UInt<2>("h2") @[VCORDIC.scala 84:19]
    atantable16[12] <= UInt<1>("h1") @[VCORDIC.scala 85:19]
    atantable16[13] <= UInt<1>("h0") @[VCORDIC.scala 86:19]
    atantable16[14] <= UInt<1>("h0") @[VCORDIC.scala 87:19]
    atantable16[15] <= UInt<1>("h0") @[VCORDIC.scala 88:19]
    wire atantable : UInt<32>[32] @[VCORDIC.scala 91:23]
    atantable[0] <= UInt<28>("hc90fdb0") @[VCORDIC.scala 92:16]
    atantable[1] <= UInt<27>("h76b19c0") @[VCORDIC.scala 93:16]
    atantable[2] <= UInt<26>("h3eb6ec0") @[VCORDIC.scala 94:16]
    atantable[3] <= UInt<25>("h1fd5baa") @[VCORDIC.scala 95:16]
    atantable[4] <= UInt<24>("hffaade") @[VCORDIC.scala 96:16]
    atantable[5] <= UInt<23>("h7ff557") @[VCORDIC.scala 97:16]
    atantable[6] <= UInt<22>("h3ffeaa") @[VCORDIC.scala 98:16]
    atantable[7] <= UInt<21>("h1fffd5") @[VCORDIC.scala 99:16]
    atantable[8] <= UInt<20>("hffffa") @[VCORDIC.scala 100:16]
    atantable[9] <= UInt<19>("h7ffff") @[VCORDIC.scala 101:16]
    atantable[10] <= UInt<18>("h3ffff") @[VCORDIC.scala 102:17]
    atantable[11] <= UInt<17>("h1ffff") @[VCORDIC.scala 103:17]
    atantable[12] <= UInt<17>("h10000") @[VCORDIC.scala 104:17]
    atantable[13] <= UInt<16>("h8000") @[VCORDIC.scala 105:17]
    atantable[14] <= UInt<15>("h4000") @[VCORDIC.scala 106:17]
    atantable[15] <= UInt<14>("h2000") @[VCORDIC.scala 107:17]
    atantable[16] <= UInt<13>("h1000") @[VCORDIC.scala 108:17]
    atantable[17] <= UInt<12>("h800") @[VCORDIC.scala 109:17]
    atantable[18] <= UInt<11>("h400") @[VCORDIC.scala 110:17]
    atantable[19] <= UInt<10>("h200") @[VCORDIC.scala 111:17]
    atantable[20] <= UInt<9>("h100") @[VCORDIC.scala 112:17]
    atantable[21] <= UInt<8>("h80") @[VCORDIC.scala 113:17]
    atantable[22] <= UInt<7>("h40") @[VCORDIC.scala 114:17]
    atantable[23] <= UInt<6>("h20") @[VCORDIC.scala 115:17]
    atantable[24] <= UInt<5>("h10") @[VCORDIC.scala 116:17]
    atantable[25] <= UInt<4>("h8") @[VCORDIC.scala 117:17]
    atantable[26] <= UInt<3>("h4") @[VCORDIC.scala 118:17]
    atantable[27] <= UInt<2>("h2") @[VCORDIC.scala 119:17]
    atantable[28] <= UInt<1>("h1") @[VCORDIC.scala 120:17]
    atantable[29] <= UInt<1>("h0") @[VCORDIC.scala 121:17]
    atantable[30] <= UInt<1>("h0") @[VCORDIC.scala 122:17]
    atantable[31] <= UInt<30>("h3243f6c0") @[VCORDIC.scala 123:17]
    wire atantable64 : UInt<64>[64] @[VCORDIC.scala 125:25]
    atantable64[0] <= UInt<60>("hc90fdaa22168c00") @[VCORDIC.scala 126:18]
    atantable64[1] <= UInt<59>("h76b19c1586ed3c0") @[VCORDIC.scala 127:18]
    atantable64[2] <= UInt<58>("h3eb6ebf25901ba0") @[VCORDIC.scala 128:18]
    atantable64[3] <= UInt<57>("h1fd5ba9aac2f6e0") @[VCORDIC.scala 129:18]
    atantable64[4] <= UInt<56>("hffaaddb967ef50") @[VCORDIC.scala 130:18]
    atantable64[5] <= UInt<55>("h7ff556eea5d894") @[VCORDIC.scala 131:18]
    atantable64[6] <= UInt<54>("h3ffeaab776e536") @[VCORDIC.scala 132:18]
    atantable64[7] <= UInt<53>("h1fffd555bbba97") @[VCORDIC.scala 133:18]
    atantable64[8] <= UInt<52>("hffffaaaaddddb") @[VCORDIC.scala 134:18]
    atantable64[9] <= UInt<51>("h7ffff55556eef") @[VCORDIC.scala 135:18]
    atantable64[10] <= UInt<50>("h3ffffeaaaab77") @[VCORDIC.scala 136:19]
    atantable64[11] <= UInt<49>("h1fffffd55555b") @[VCORDIC.scala 137:19]
    atantable64[12] <= UInt<48>("hffffffaaaaaa") @[VCORDIC.scala 138:19]
    atantable64[13] <= UInt<47>("h7ffffff55555") @[VCORDIC.scala 139:19]
    atantable64[14] <= UInt<46>("h3ffffffeaaaa") @[VCORDIC.scala 140:19]
    atantable64[15] <= UInt<45>("h1fffffffd555") @[VCORDIC.scala 141:19]
    atantable64[16] <= UInt<44>("hffffffffaaa") @[VCORDIC.scala 142:19]
    atantable64[17] <= UInt<43>("h7ffffffff55") @[VCORDIC.scala 143:19]
    atantable64[18] <= UInt<42>("h3ffffffffea") @[VCORDIC.scala 144:19]
    atantable64[19] <= UInt<41>("h1fffffffffd") @[VCORDIC.scala 145:19]
    atantable64[20] <= UInt<40>("hffffffffff") @[VCORDIC.scala 146:19]
    atantable64[21] <= UInt<39>("h7fffffffff") @[VCORDIC.scala 147:19]
    atantable64[22] <= UInt<38>("h3fffffffff") @[VCORDIC.scala 148:19]
    atantable64[23] <= UInt<37>("h1fffffffff") @[VCORDIC.scala 149:19]
    atantable64[24] <= UInt<36>("hfffffffff") @[VCORDIC.scala 150:19]
    atantable64[25] <= UInt<35>("h7ffffffff") @[VCORDIC.scala 151:19]
    atantable64[26] <= UInt<34>("h3ffffffff") @[VCORDIC.scala 152:19]
    atantable64[27] <= UInt<34>("h200000000") @[VCORDIC.scala 153:19]
    atantable64[28] <= UInt<33>("h100000000") @[VCORDIC.scala 154:19]
    atantable64[29] <= UInt<32>("h80000000") @[VCORDIC.scala 155:19]
    atantable64[30] <= UInt<31>("h40000000") @[VCORDIC.scala 156:19]
    atantable64[31] <= UInt<30>("h20000000") @[VCORDIC.scala 157:19]
    atantable64[32] <= UInt<29>("h10000000") @[VCORDIC.scala 158:19]
    atantable64[33] <= UInt<28>("h8000000") @[VCORDIC.scala 159:19]
    atantable64[34] <= UInt<27>("h4000000") @[VCORDIC.scala 160:19]
    atantable64[35] <= UInt<26>("h2000000") @[VCORDIC.scala 161:19]
    atantable64[36] <= UInt<25>("h1000000") @[VCORDIC.scala 162:19]
    atantable64[37] <= UInt<24>("h800000") @[VCORDIC.scala 163:19]
    atantable64[38] <= UInt<23>("h400000") @[VCORDIC.scala 164:19]
    atantable64[39] <= UInt<22>("h200000") @[VCORDIC.scala 165:19]
    atantable64[40] <= UInt<21>("h100000") @[VCORDIC.scala 166:19]
    atantable64[41] <= UInt<20>("h80000") @[VCORDIC.scala 167:19]
    atantable64[42] <= UInt<19>("h40000") @[VCORDIC.scala 168:19]
    atantable64[43] <= UInt<18>("h20000") @[VCORDIC.scala 169:19]
    atantable64[44] <= UInt<17>("h10000") @[VCORDIC.scala 170:19]
    atantable64[45] <= UInt<16>("h8000") @[VCORDIC.scala 171:19]
    atantable64[46] <= UInt<15>("h4000") @[VCORDIC.scala 172:19]
    atantable64[47] <= UInt<14>("h2000") @[VCORDIC.scala 173:19]
    atantable64[48] <= UInt<13>("h1000") @[VCORDIC.scala 174:19]
    atantable64[49] <= UInt<12>("h800") @[VCORDIC.scala 175:19]
    atantable64[50] <= UInt<11>("h400") @[VCORDIC.scala 176:19]
    atantable64[51] <= UInt<10>("h200") @[VCORDIC.scala 177:19]
    atantable64[52] <= UInt<9>("h100") @[VCORDIC.scala 178:19]
    atantable64[53] <= UInt<8>("h80") @[VCORDIC.scala 179:19]
    atantable64[54] <= UInt<7>("h40") @[VCORDIC.scala 180:19]
    atantable64[55] <= UInt<6>("h20") @[VCORDIC.scala 181:19]
    atantable64[56] <= UInt<5>("h10") @[VCORDIC.scala 182:19]
    atantable64[57] <= UInt<4>("h8") @[VCORDIC.scala 183:19]
    atantable64[58] <= UInt<3>("h4") @[VCORDIC.scala 184:19]
    atantable64[59] <= UInt<2>("h2") @[VCORDIC.scala 185:19]
    atantable64[60] <= UInt<1>("h1") @[VCORDIC.scala 186:19]
    atantable64[61] <= UInt<1>("h0") @[VCORDIC.scala 187:19]
    atantable64[62] <= UInt<1>("h0") @[VCORDIC.scala 188:19]
    atantable64[63] <= UInt<1>("h0") @[VCORDIC.scala 189:19]
    wire atantable128_64 : UInt<128>[64] @[VCORDIC.scala 192:29]
    atantable128_64[0] <= UInt<128>("hc90fdaa22168c000") @[VCORDIC.scala 195:22]
    atantable128_64[1] <= UInt<128>("h76b19c1586ed3c00") @[VCORDIC.scala 196:22]
    atantable128_64[2] <= UInt<128>("h3eb6ebf25901ba00") @[VCORDIC.scala 197:22]
    atantable128_64[3] <= UInt<128>("h1fd5ba9aac2f6e00") @[VCORDIC.scala 198:22]
    atantable128_64[4] <= UInt<128>("hffaaddb967ef500") @[VCORDIC.scala 199:22]
    atantable128_64[5] <= UInt<128>("h7ff556eea5d8940") @[VCORDIC.scala 200:22]
    atantable128_64[6] <= UInt<128>("h3ffeaab776e5360") @[VCORDIC.scala 201:22]
    atantable128_64[7] <= UInt<128>("h1fffd555bbba970") @[VCORDIC.scala 202:22]
    atantable128_64[8] <= UInt<128>("hffffaaaaddddb8") @[VCORDIC.scala 203:22]
    atantable128_64[9] <= UInt<128>("h7ffff55556eef0") @[VCORDIC.scala 204:22]
    atantable128_64[10] <= UInt<128>("h3ffffeaaaab778") @[VCORDIC.scala 205:23]
    atantable128_64[11] <= UInt<128>("h1fffffd55555bc") @[VCORDIC.scala 206:23]
    atantable128_64[12] <= UInt<128>("hffffffaaaaaae") @[VCORDIC.scala 207:23]
    atantable128_64[13] <= UInt<128>("h7ffffff555555") @[VCORDIC.scala 208:23]
    atantable128_64[14] <= UInt<128>("h3ffffffeaaaaa") @[VCORDIC.scala 209:23]
    atantable128_64[15] <= UInt<128>("h1fffffffd5555") @[VCORDIC.scala 210:23]
    atantable128_64[16] <= UInt<128>("hffffffffaaaa") @[VCORDIC.scala 211:23]
    atantable128_64[17] <= UInt<128>("h7ffffffff555") @[VCORDIC.scala 212:23]
    atantable128_64[18] <= UInt<128>("h3ffffffffeaa") @[VCORDIC.scala 213:23]
    atantable128_64[19] <= UInt<128>("h1fffffffffd5") @[VCORDIC.scala 214:23]
    atantable128_64[20] <= UInt<128>("hffffffffffa") @[VCORDIC.scala 215:23]
    atantable128_64[21] <= UInt<128>("h7ffffffffff") @[VCORDIC.scala 216:23]
    atantable128_64[22] <= UInt<128>("h3ffffffffff") @[VCORDIC.scala 217:23]
    atantable128_64[23] <= UInt<128>("h1ffffffffff") @[VCORDIC.scala 218:23]
    atantable128_64[24] <= UInt<128>("hffffffffff") @[VCORDIC.scala 219:23]
    atantable128_64[25] <= UInt<128>("h7fffffffff") @[VCORDIC.scala 220:23]
    atantable128_64[26] <= UInt<128>("h3fffffffff") @[VCORDIC.scala 221:23]
    atantable128_64[27] <= UInt<128>("h2000000000") @[VCORDIC.scala 222:23]
    atantable128_64[28] <= UInt<128>("h1000000000") @[VCORDIC.scala 223:23]
    atantable128_64[29] <= UInt<128>("h800000000") @[VCORDIC.scala 224:23]
    atantable128_64[30] <= UInt<128>("h400000000") @[VCORDIC.scala 225:23]
    atantable128_64[31] <= UInt<128>("h200000000") @[VCORDIC.scala 226:23]
    atantable128_64[32] <= UInt<128>("h100000000") @[VCORDIC.scala 227:23]
    atantable128_64[33] <= UInt<128>("h80000000") @[VCORDIC.scala 228:23]
    atantable128_64[34] <= UInt<128>("h40000000") @[VCORDIC.scala 229:23]
    atantable128_64[35] <= UInt<128>("h20000000") @[VCORDIC.scala 230:23]
    atantable128_64[36] <= UInt<128>("h10000000") @[VCORDIC.scala 231:23]
    atantable128_64[37] <= UInt<128>("h8000000") @[VCORDIC.scala 232:23]
    atantable128_64[38] <= UInt<128>("h4000000") @[VCORDIC.scala 233:23]
    atantable128_64[39] <= UInt<128>("h2000000") @[VCORDIC.scala 234:23]
    atantable128_64[40] <= UInt<128>("h1000000") @[VCORDIC.scala 235:23]
    atantable128_64[41] <= UInt<128>("h800000") @[VCORDIC.scala 236:23]
    atantable128_64[42] <= UInt<128>("h400000") @[VCORDIC.scala 237:23]
    atantable128_64[43] <= UInt<128>("h200000") @[VCORDIC.scala 238:23]
    atantable128_64[44] <= UInt<128>("h100000") @[VCORDIC.scala 239:23]
    atantable128_64[45] <= UInt<128>("h80000") @[VCORDIC.scala 240:23]
    atantable128_64[46] <= UInt<128>("h40000") @[VCORDIC.scala 241:23]
    atantable128_64[47] <= UInt<128>("h20000") @[VCORDIC.scala 242:23]
    atantable128_64[48] <= UInt<128>("h10000") @[VCORDIC.scala 243:23]
    atantable128_64[49] <= UInt<128>("h8000") @[VCORDIC.scala 244:23]
    atantable128_64[50] <= UInt<128>("h4000") @[VCORDIC.scala 245:23]
    atantable128_64[51] <= UInt<128>("h2000") @[VCORDIC.scala 246:23]
    atantable128_64[52] <= UInt<128>("h1000") @[VCORDIC.scala 247:23]
    atantable128_64[53] <= UInt<128>("h800") @[VCORDIC.scala 248:23]
    atantable128_64[54] <= UInt<128>("h400") @[VCORDIC.scala 249:23]
    atantable128_64[55] <= UInt<128>("h200") @[VCORDIC.scala 250:23]
    atantable128_64[56] <= UInt<128>("h100") @[VCORDIC.scala 251:23]
    atantable128_64[57] <= UInt<128>("h80") @[VCORDIC.scala 252:23]
    atantable128_64[58] <= UInt<128>("h40") @[VCORDIC.scala 253:23]
    atantable128_64[59] <= UInt<128>("h20") @[VCORDIC.scala 254:23]
    atantable128_64[60] <= UInt<128>("h10") @[VCORDIC.scala 255:23]
    atantable128_64[61] <= UInt<128>("h8") @[VCORDIC.scala 256:23]
    atantable128_64[62] <= UInt<128>("h4") @[VCORDIC.scala 257:23]
    atantable128_64[63] <= UInt<128>("h2") @[VCORDIC.scala 258:23]
    wire x : SInt<16>[17] @[VCORDIC.scala 260:15]
    wire y : SInt<16>[17] @[VCORDIC.scala 261:15]
    wire z : SInt<16>[17] @[VCORDIC.scala 262:15]
    wire _xr_WIRE : SInt<16>[17] @[VCORDIC.scala 264:27]
    _xr_WIRE[0] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[1] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[2] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[3] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[4] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[5] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[6] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[7] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[8] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[9] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[10] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[11] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[12] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[13] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[14] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[15] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    _xr_WIRE[16] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 264:27]
    reg xr : SInt<16>[17], clock with :
      reset => (reset, _xr_WIRE) @[VCORDIC.scala 264:19]
    wire _yr_WIRE : SInt<16>[17] @[VCORDIC.scala 265:27]
    _yr_WIRE[0] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[1] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[2] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[3] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[4] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[5] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[6] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[7] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[8] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[9] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[10] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[11] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[12] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[13] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[14] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[15] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    _yr_WIRE[16] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 265:27]
    reg yr : SInt<16>[17], clock with :
      reset => (reset, _yr_WIRE) @[VCORDIC.scala 265:19]
    wire _zr_WIRE : SInt<16>[17] @[VCORDIC.scala 266:27]
    _zr_WIRE[0] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[1] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[2] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[3] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[4] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[5] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[6] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[7] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[8] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[9] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[10] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[11] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[12] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[13] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[14] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[15] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    _zr_WIRE[16] <= asSInt(UInt<16>("h0")) @[VCORDIC.scala 266:27]
    reg zr : SInt<16>[17], clock with :
      reset => (reset, _zr_WIRE) @[VCORDIC.scala 266:19]
    inst tofixedx0 of FloatToFixed16 @[VCORDIC.scala 270:27]
    tofixedx0.clock <= clock
    tofixedx0.reset <= reset
    inst tofixedy0 of FloatToFixed16_1 @[VCORDIC.scala 271:27]
    tofixedy0.clock <= clock
    tofixedy0.reset <= reset
    inst tofixedz0 of FloatToFixed16_2 @[VCORDIC.scala 272:27]
    tofixedz0.clock <= clock
    tofixedz0.reset <= reset
    tofixedx0.io.in <= io.in_x0 @[VCORDIC.scala 274:21]
    tofixedy0.io.in <= io.in_y0 @[VCORDIC.scala 275:21]
    tofixedz0.io.in <= io.in_z0 @[VCORDIC.scala 276:21]
    node _z_0_T = asSInt(tofixedz0.io.out) @[VCORDIC.scala 282:21]
    z[0] <= _z_0_T @[VCORDIC.scala 282:10]
    node _x_0_T = asSInt(tofixedx0.io.out) @[VCORDIC.scala 283:21]
    x[0] <= _x_0_T @[VCORDIC.scala 283:10]
    node _y_0_T = asSInt(tofixedy0.io.out) @[VCORDIC.scala 284:21]
    y[0] <= _y_0_T @[VCORDIC.scala 284:10]
    node _zr_0_T = asSInt(tofixedz0.io.out) @[VCORDIC.scala 286:22]
    zr[0] <= _zr_0_T @[VCORDIC.scala 286:11]
    node _xr_0_T = asSInt(tofixedx0.io.out) @[VCORDIC.scala 287:22]
    xr[0] <= _xr_0_T @[VCORDIC.scala 287:11]
    node _yr_0_T = asSInt(tofixedy0.io.out) @[VCORDIC.scala 288:22]
    yr[0] <= _yr_0_T @[VCORDIC.scala 288:11]
    node cond = lt(yr[0], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 538:31]
    node _xterm_T = sub(asSInt(UInt<1>("h0")), xr[0]) @[VCORDIC.scala 540:33]
    node _xterm_T_1 = tail(_xterm_T, 1) @[VCORDIC.scala 540:33]
    node _xterm_T_2 = asSInt(_xterm_T_1) @[VCORDIC.scala 540:33]
    node xterm = mux(cond, _xterm_T_2, xr[0]) @[VCORDIC.scala 540:26]
    node _yterm_T = sub(asSInt(UInt<1>("h0")), yr[0]) @[VCORDIC.scala 541:33]
    node _yterm_T_1 = tail(_yterm_T, 1) @[VCORDIC.scala 541:33]
    node _yterm_T_2 = asSInt(_yterm_T_1) @[VCORDIC.scala 541:33]
    node yterm = mux(cond, _yterm_T_2, yr[0]) @[VCORDIC.scala 541:26]
    node _zterm_T = sub(UInt<1>("h0"), atantable16[0]) @[VCORDIC.scala 542:33]
    node _zterm_T_1 = tail(_zterm_T, 1) @[VCORDIC.scala 542:33]
    node zterm = mux(cond, _zterm_T_1, atantable16[0]) @[VCORDIC.scala 542:26]
    node _x_1_T = dshr(yterm, UInt<1>("h0")) @[VCORDIC.scala 544:41]
    node _x_1_T_1 = add(xr[0], _x_1_T) @[VCORDIC.scala 544:32]
    node _x_1_T_2 = tail(_x_1_T_1, 1) @[VCORDIC.scala 544:32]
    node _x_1_T_3 = asSInt(_x_1_T_2) @[VCORDIC.scala 544:32]
    x[1] <= _x_1_T_3 @[VCORDIC.scala 544:20]
    node _y_1_T = dshr(xterm, UInt<1>("h0")) @[VCORDIC.scala 545:41]
    node _y_1_T_1 = sub(yr[0], _y_1_T) @[VCORDIC.scala 545:32]
    node _y_1_T_2 = tail(_y_1_T_1, 1) @[VCORDIC.scala 545:32]
    node _y_1_T_3 = asSInt(_y_1_T_2) @[VCORDIC.scala 545:32]
    y[1] <= _y_1_T_3 @[VCORDIC.scala 545:20]
    node _z_1_T = asSInt(zterm) @[VCORDIC.scala 546:40]
    node _z_1_T_1 = add(zr[0], _z_1_T) @[VCORDIC.scala 546:32]
    node _z_1_T_2 = tail(_z_1_T_1, 1) @[VCORDIC.scala 546:32]
    node _z_1_T_3 = asSInt(_z_1_T_2) @[VCORDIC.scala 546:32]
    z[1] <= _z_1_T_3 @[VCORDIC.scala 546:20]
    node cond_1 = lt(y[1], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 549:31]
    node _xterm_T_3 = sub(asSInt(UInt<1>("h0")), x[1]) @[VCORDIC.scala 550:33]
    node _xterm_T_4 = tail(_xterm_T_3, 1) @[VCORDIC.scala 550:33]
    node _xterm_T_5 = asSInt(_xterm_T_4) @[VCORDIC.scala 550:33]
    node xterm_1 = mux(cond_1, _xterm_T_5, x[1]) @[VCORDIC.scala 550:26]
    node _yterm_T_3 = sub(asSInt(UInt<1>("h0")), y[1]) @[VCORDIC.scala 551:33]
    node _yterm_T_4 = tail(_yterm_T_3, 1) @[VCORDIC.scala 551:33]
    node _yterm_T_5 = asSInt(_yterm_T_4) @[VCORDIC.scala 551:33]
    node yterm_1 = mux(cond_1, _yterm_T_5, y[1]) @[VCORDIC.scala 551:26]
    node _zterm_T_2 = sub(UInt<1>("h0"), atantable16[1]) @[VCORDIC.scala 552:33]
    node _zterm_T_3 = tail(_zterm_T_2, 1) @[VCORDIC.scala 552:33]
    node zterm_1 = mux(cond_1, _zterm_T_3, atantable16[1]) @[VCORDIC.scala 552:26]
    node _x_2_T = dshr(yterm_1, UInt<1>("h1")) @[VCORDIC.scala 554:41]
    node _x_2_T_1 = add(x[1], _x_2_T) @[VCORDIC.scala 554:32]
    node _x_2_T_2 = tail(_x_2_T_1, 1) @[VCORDIC.scala 554:32]
    node _x_2_T_3 = asSInt(_x_2_T_2) @[VCORDIC.scala 554:32]
    x[2] <= _x_2_T_3 @[VCORDIC.scala 554:20]
    node _y_2_T = dshr(xterm_1, UInt<1>("h1")) @[VCORDIC.scala 555:41]
    node _y_2_T_1 = sub(y[1], _y_2_T) @[VCORDIC.scala 555:32]
    node _y_2_T_2 = tail(_y_2_T_1, 1) @[VCORDIC.scala 555:32]
    node _y_2_T_3 = asSInt(_y_2_T_2) @[VCORDIC.scala 555:32]
    y[2] <= _y_2_T_3 @[VCORDIC.scala 555:20]
    node _z_2_T = asSInt(zterm_1) @[VCORDIC.scala 556:40]
    node _z_2_T_1 = add(z[1], _z_2_T) @[VCORDIC.scala 556:32]
    node _z_2_T_2 = tail(_z_2_T_1, 1) @[VCORDIC.scala 556:32]
    node _z_2_T_3 = asSInt(_z_2_T_2) @[VCORDIC.scala 556:32]
    z[2] <= _z_2_T_3 @[VCORDIC.scala 556:20]
    xr[1] <= x[2] @[VCORDIC.scala 560:20]
    yr[1] <= y[2] @[VCORDIC.scala 561:20]
    zr[1] <= z[2] @[VCORDIC.scala 562:20]
    node cond_2 = lt(yr[1], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 538:31]
    node _xterm_T_6 = sub(asSInt(UInt<1>("h0")), xr[1]) @[VCORDIC.scala 540:33]
    node _xterm_T_7 = tail(_xterm_T_6, 1) @[VCORDIC.scala 540:33]
    node _xterm_T_8 = asSInt(_xterm_T_7) @[VCORDIC.scala 540:33]
    node xterm_2 = mux(cond_2, _xterm_T_8, xr[1]) @[VCORDIC.scala 540:26]
    node _yterm_T_6 = sub(asSInt(UInt<1>("h0")), yr[1]) @[VCORDIC.scala 541:33]
    node _yterm_T_7 = tail(_yterm_T_6, 1) @[VCORDIC.scala 541:33]
    node _yterm_T_8 = asSInt(_yterm_T_7) @[VCORDIC.scala 541:33]
    node yterm_2 = mux(cond_2, _yterm_T_8, yr[1]) @[VCORDIC.scala 541:26]
    node _zterm_T_4 = sub(UInt<1>("h0"), atantable16[2]) @[VCORDIC.scala 542:33]
    node _zterm_T_5 = tail(_zterm_T_4, 1) @[VCORDIC.scala 542:33]
    node zterm_2 = mux(cond_2, _zterm_T_5, atantable16[2]) @[VCORDIC.scala 542:26]
    node _x_3_T = dshr(yterm_2, UInt<2>("h2")) @[VCORDIC.scala 544:41]
    node _x_3_T_1 = add(xr[1], _x_3_T) @[VCORDIC.scala 544:32]
    node _x_3_T_2 = tail(_x_3_T_1, 1) @[VCORDIC.scala 544:32]
    node _x_3_T_3 = asSInt(_x_3_T_2) @[VCORDIC.scala 544:32]
    x[3] <= _x_3_T_3 @[VCORDIC.scala 544:20]
    node _y_3_T = dshr(xterm_2, UInt<2>("h2")) @[VCORDIC.scala 545:41]
    node _y_3_T_1 = sub(yr[1], _y_3_T) @[VCORDIC.scala 545:32]
    node _y_3_T_2 = tail(_y_3_T_1, 1) @[VCORDIC.scala 545:32]
    node _y_3_T_3 = asSInt(_y_3_T_2) @[VCORDIC.scala 545:32]
    y[3] <= _y_3_T_3 @[VCORDIC.scala 545:20]
    node _z_3_T = asSInt(zterm_2) @[VCORDIC.scala 546:40]
    node _z_3_T_1 = add(zr[1], _z_3_T) @[VCORDIC.scala 546:32]
    node _z_3_T_2 = tail(_z_3_T_1, 1) @[VCORDIC.scala 546:32]
    node _z_3_T_3 = asSInt(_z_3_T_2) @[VCORDIC.scala 546:32]
    z[3] <= _z_3_T_3 @[VCORDIC.scala 546:20]
    node cond_3 = lt(y[3], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 549:31]
    node _xterm_T_9 = sub(asSInt(UInt<1>("h0")), x[3]) @[VCORDIC.scala 550:33]
    node _xterm_T_10 = tail(_xterm_T_9, 1) @[VCORDIC.scala 550:33]
    node _xterm_T_11 = asSInt(_xterm_T_10) @[VCORDIC.scala 550:33]
    node xterm_3 = mux(cond_3, _xterm_T_11, x[3]) @[VCORDIC.scala 550:26]
    node _yterm_T_9 = sub(asSInt(UInt<1>("h0")), y[3]) @[VCORDIC.scala 551:33]
    node _yterm_T_10 = tail(_yterm_T_9, 1) @[VCORDIC.scala 551:33]
    node _yterm_T_11 = asSInt(_yterm_T_10) @[VCORDIC.scala 551:33]
    node yterm_3 = mux(cond_3, _yterm_T_11, y[3]) @[VCORDIC.scala 551:26]
    node _zterm_T_6 = sub(UInt<1>("h0"), atantable16[3]) @[VCORDIC.scala 552:33]
    node _zterm_T_7 = tail(_zterm_T_6, 1) @[VCORDIC.scala 552:33]
    node zterm_3 = mux(cond_3, _zterm_T_7, atantable16[3]) @[VCORDIC.scala 552:26]
    node _x_4_T = dshr(yterm_3, UInt<2>("h3")) @[VCORDIC.scala 554:41]
    node _x_4_T_1 = add(x[3], _x_4_T) @[VCORDIC.scala 554:32]
    node _x_4_T_2 = tail(_x_4_T_1, 1) @[VCORDIC.scala 554:32]
    node _x_4_T_3 = asSInt(_x_4_T_2) @[VCORDIC.scala 554:32]
    x[4] <= _x_4_T_3 @[VCORDIC.scala 554:20]
    node _y_4_T = dshr(xterm_3, UInt<2>("h3")) @[VCORDIC.scala 555:41]
    node _y_4_T_1 = sub(y[3], _y_4_T) @[VCORDIC.scala 555:32]
    node _y_4_T_2 = tail(_y_4_T_1, 1) @[VCORDIC.scala 555:32]
    node _y_4_T_3 = asSInt(_y_4_T_2) @[VCORDIC.scala 555:32]
    y[4] <= _y_4_T_3 @[VCORDIC.scala 555:20]
    node _z_4_T = asSInt(zterm_3) @[VCORDIC.scala 556:40]
    node _z_4_T_1 = add(z[3], _z_4_T) @[VCORDIC.scala 556:32]
    node _z_4_T_2 = tail(_z_4_T_1, 1) @[VCORDIC.scala 556:32]
    node _z_4_T_3 = asSInt(_z_4_T_2) @[VCORDIC.scala 556:32]
    z[4] <= _z_4_T_3 @[VCORDIC.scala 556:20]
    xr[2] <= x[4] @[VCORDIC.scala 560:20]
    yr[2] <= y[4] @[VCORDIC.scala 561:20]
    zr[2] <= z[4] @[VCORDIC.scala 562:20]
    node cond_4 = lt(yr[2], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 538:31]
    node _xterm_T_12 = sub(asSInt(UInt<1>("h0")), xr[2]) @[VCORDIC.scala 540:33]
    node _xterm_T_13 = tail(_xterm_T_12, 1) @[VCORDIC.scala 540:33]
    node _xterm_T_14 = asSInt(_xterm_T_13) @[VCORDIC.scala 540:33]
    node xterm_4 = mux(cond_4, _xterm_T_14, xr[2]) @[VCORDIC.scala 540:26]
    node _yterm_T_12 = sub(asSInt(UInt<1>("h0")), yr[2]) @[VCORDIC.scala 541:33]
    node _yterm_T_13 = tail(_yterm_T_12, 1) @[VCORDIC.scala 541:33]
    node _yterm_T_14 = asSInt(_yterm_T_13) @[VCORDIC.scala 541:33]
    node yterm_4 = mux(cond_4, _yterm_T_14, yr[2]) @[VCORDIC.scala 541:26]
    node _zterm_T_8 = sub(UInt<1>("h0"), atantable16[4]) @[VCORDIC.scala 542:33]
    node _zterm_T_9 = tail(_zterm_T_8, 1) @[VCORDIC.scala 542:33]
    node zterm_4 = mux(cond_4, _zterm_T_9, atantable16[4]) @[VCORDIC.scala 542:26]
    node _x_5_T = dshr(yterm_4, UInt<3>("h4")) @[VCORDIC.scala 544:41]
    node _x_5_T_1 = add(xr[2], _x_5_T) @[VCORDIC.scala 544:32]
    node _x_5_T_2 = tail(_x_5_T_1, 1) @[VCORDIC.scala 544:32]
    node _x_5_T_3 = asSInt(_x_5_T_2) @[VCORDIC.scala 544:32]
    x[5] <= _x_5_T_3 @[VCORDIC.scala 544:20]
    node _y_5_T = dshr(xterm_4, UInt<3>("h4")) @[VCORDIC.scala 545:41]
    node _y_5_T_1 = sub(yr[2], _y_5_T) @[VCORDIC.scala 545:32]
    node _y_5_T_2 = tail(_y_5_T_1, 1) @[VCORDIC.scala 545:32]
    node _y_5_T_3 = asSInt(_y_5_T_2) @[VCORDIC.scala 545:32]
    y[5] <= _y_5_T_3 @[VCORDIC.scala 545:20]
    node _z_5_T = asSInt(zterm_4) @[VCORDIC.scala 546:40]
    node _z_5_T_1 = add(zr[2], _z_5_T) @[VCORDIC.scala 546:32]
    node _z_5_T_2 = tail(_z_5_T_1, 1) @[VCORDIC.scala 546:32]
    node _z_5_T_3 = asSInt(_z_5_T_2) @[VCORDIC.scala 546:32]
    z[5] <= _z_5_T_3 @[VCORDIC.scala 546:20]
    node cond_5 = lt(y[5], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 549:31]
    node _xterm_T_15 = sub(asSInt(UInt<1>("h0")), x[5]) @[VCORDIC.scala 550:33]
    node _xterm_T_16 = tail(_xterm_T_15, 1) @[VCORDIC.scala 550:33]
    node _xterm_T_17 = asSInt(_xterm_T_16) @[VCORDIC.scala 550:33]
    node xterm_5 = mux(cond_5, _xterm_T_17, x[5]) @[VCORDIC.scala 550:26]
    node _yterm_T_15 = sub(asSInt(UInt<1>("h0")), y[5]) @[VCORDIC.scala 551:33]
    node _yterm_T_16 = tail(_yterm_T_15, 1) @[VCORDIC.scala 551:33]
    node _yterm_T_17 = asSInt(_yterm_T_16) @[VCORDIC.scala 551:33]
    node yterm_5 = mux(cond_5, _yterm_T_17, y[5]) @[VCORDIC.scala 551:26]
    node _zterm_T_10 = sub(UInt<1>("h0"), atantable16[5]) @[VCORDIC.scala 552:33]
    node _zterm_T_11 = tail(_zterm_T_10, 1) @[VCORDIC.scala 552:33]
    node zterm_5 = mux(cond_5, _zterm_T_11, atantable16[5]) @[VCORDIC.scala 552:26]
    node _x_6_T = dshr(yterm_5, UInt<3>("h5")) @[VCORDIC.scala 554:41]
    node _x_6_T_1 = add(x[5], _x_6_T) @[VCORDIC.scala 554:32]
    node _x_6_T_2 = tail(_x_6_T_1, 1) @[VCORDIC.scala 554:32]
    node _x_6_T_3 = asSInt(_x_6_T_2) @[VCORDIC.scala 554:32]
    x[6] <= _x_6_T_3 @[VCORDIC.scala 554:20]
    node _y_6_T = dshr(xterm_5, UInt<3>("h5")) @[VCORDIC.scala 555:41]
    node _y_6_T_1 = sub(y[5], _y_6_T) @[VCORDIC.scala 555:32]
    node _y_6_T_2 = tail(_y_6_T_1, 1) @[VCORDIC.scala 555:32]
    node _y_6_T_3 = asSInt(_y_6_T_2) @[VCORDIC.scala 555:32]
    y[6] <= _y_6_T_3 @[VCORDIC.scala 555:20]
    node _z_6_T = asSInt(zterm_5) @[VCORDIC.scala 556:40]
    node _z_6_T_1 = add(z[5], _z_6_T) @[VCORDIC.scala 556:32]
    node _z_6_T_2 = tail(_z_6_T_1, 1) @[VCORDIC.scala 556:32]
    node _z_6_T_3 = asSInt(_z_6_T_2) @[VCORDIC.scala 556:32]
    z[6] <= _z_6_T_3 @[VCORDIC.scala 556:20]
    xr[3] <= x[6] @[VCORDIC.scala 560:20]
    yr[3] <= y[6] @[VCORDIC.scala 561:20]
    zr[3] <= z[6] @[VCORDIC.scala 562:20]
    node cond_6 = lt(yr[3], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 538:31]
    node _xterm_T_18 = sub(asSInt(UInt<1>("h0")), xr[3]) @[VCORDIC.scala 540:33]
    node _xterm_T_19 = tail(_xterm_T_18, 1) @[VCORDIC.scala 540:33]
    node _xterm_T_20 = asSInt(_xterm_T_19) @[VCORDIC.scala 540:33]
    node xterm_6 = mux(cond_6, _xterm_T_20, xr[3]) @[VCORDIC.scala 540:26]
    node _yterm_T_18 = sub(asSInt(UInt<1>("h0")), yr[3]) @[VCORDIC.scala 541:33]
    node _yterm_T_19 = tail(_yterm_T_18, 1) @[VCORDIC.scala 541:33]
    node _yterm_T_20 = asSInt(_yterm_T_19) @[VCORDIC.scala 541:33]
    node yterm_6 = mux(cond_6, _yterm_T_20, yr[3]) @[VCORDIC.scala 541:26]
    node _zterm_T_12 = sub(UInt<1>("h0"), atantable16[6]) @[VCORDIC.scala 542:33]
    node _zterm_T_13 = tail(_zterm_T_12, 1) @[VCORDIC.scala 542:33]
    node zterm_6 = mux(cond_6, _zterm_T_13, atantable16[6]) @[VCORDIC.scala 542:26]
    node _x_7_T = dshr(yterm_6, UInt<3>("h6")) @[VCORDIC.scala 544:41]
    node _x_7_T_1 = add(xr[3], _x_7_T) @[VCORDIC.scala 544:32]
    node _x_7_T_2 = tail(_x_7_T_1, 1) @[VCORDIC.scala 544:32]
    node _x_7_T_3 = asSInt(_x_7_T_2) @[VCORDIC.scala 544:32]
    x[7] <= _x_7_T_3 @[VCORDIC.scala 544:20]
    node _y_7_T = dshr(xterm_6, UInt<3>("h6")) @[VCORDIC.scala 545:41]
    node _y_7_T_1 = sub(yr[3], _y_7_T) @[VCORDIC.scala 545:32]
    node _y_7_T_2 = tail(_y_7_T_1, 1) @[VCORDIC.scala 545:32]
    node _y_7_T_3 = asSInt(_y_7_T_2) @[VCORDIC.scala 545:32]
    y[7] <= _y_7_T_3 @[VCORDIC.scala 545:20]
    node _z_7_T = asSInt(zterm_6) @[VCORDIC.scala 546:40]
    node _z_7_T_1 = add(zr[3], _z_7_T) @[VCORDIC.scala 546:32]
    node _z_7_T_2 = tail(_z_7_T_1, 1) @[VCORDIC.scala 546:32]
    node _z_7_T_3 = asSInt(_z_7_T_2) @[VCORDIC.scala 546:32]
    z[7] <= _z_7_T_3 @[VCORDIC.scala 546:20]
    node cond_7 = lt(y[7], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 549:31]
    node _xterm_T_21 = sub(asSInt(UInt<1>("h0")), x[7]) @[VCORDIC.scala 550:33]
    node _xterm_T_22 = tail(_xterm_T_21, 1) @[VCORDIC.scala 550:33]
    node _xterm_T_23 = asSInt(_xterm_T_22) @[VCORDIC.scala 550:33]
    node xterm_7 = mux(cond_7, _xterm_T_23, x[7]) @[VCORDIC.scala 550:26]
    node _yterm_T_21 = sub(asSInt(UInt<1>("h0")), y[7]) @[VCORDIC.scala 551:33]
    node _yterm_T_22 = tail(_yterm_T_21, 1) @[VCORDIC.scala 551:33]
    node _yterm_T_23 = asSInt(_yterm_T_22) @[VCORDIC.scala 551:33]
    node yterm_7 = mux(cond_7, _yterm_T_23, y[7]) @[VCORDIC.scala 551:26]
    node _zterm_T_14 = sub(UInt<1>("h0"), atantable16[7]) @[VCORDIC.scala 552:33]
    node _zterm_T_15 = tail(_zterm_T_14, 1) @[VCORDIC.scala 552:33]
    node zterm_7 = mux(cond_7, _zterm_T_15, atantable16[7]) @[VCORDIC.scala 552:26]
    node _x_8_T = dshr(yterm_7, UInt<3>("h7")) @[VCORDIC.scala 554:41]
    node _x_8_T_1 = add(x[7], _x_8_T) @[VCORDIC.scala 554:32]
    node _x_8_T_2 = tail(_x_8_T_1, 1) @[VCORDIC.scala 554:32]
    node _x_8_T_3 = asSInt(_x_8_T_2) @[VCORDIC.scala 554:32]
    x[8] <= _x_8_T_3 @[VCORDIC.scala 554:20]
    node _y_8_T = dshr(xterm_7, UInt<3>("h7")) @[VCORDIC.scala 555:41]
    node _y_8_T_1 = sub(y[7], _y_8_T) @[VCORDIC.scala 555:32]
    node _y_8_T_2 = tail(_y_8_T_1, 1) @[VCORDIC.scala 555:32]
    node _y_8_T_3 = asSInt(_y_8_T_2) @[VCORDIC.scala 555:32]
    y[8] <= _y_8_T_3 @[VCORDIC.scala 555:20]
    node _z_8_T = asSInt(zterm_7) @[VCORDIC.scala 556:40]
    node _z_8_T_1 = add(z[7], _z_8_T) @[VCORDIC.scala 556:32]
    node _z_8_T_2 = tail(_z_8_T_1, 1) @[VCORDIC.scala 556:32]
    node _z_8_T_3 = asSInt(_z_8_T_2) @[VCORDIC.scala 556:32]
    z[8] <= _z_8_T_3 @[VCORDIC.scala 556:20]
    xr[4] <= x[8] @[VCORDIC.scala 560:20]
    yr[4] <= y[8] @[VCORDIC.scala 561:20]
    zr[4] <= z[8] @[VCORDIC.scala 562:20]
    node cond_8 = lt(yr[4], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 538:31]
    node _xterm_T_24 = sub(asSInt(UInt<1>("h0")), xr[4]) @[VCORDIC.scala 540:33]
    node _xterm_T_25 = tail(_xterm_T_24, 1) @[VCORDIC.scala 540:33]
    node _xterm_T_26 = asSInt(_xterm_T_25) @[VCORDIC.scala 540:33]
    node xterm_8 = mux(cond_8, _xterm_T_26, xr[4]) @[VCORDIC.scala 540:26]
    node _yterm_T_24 = sub(asSInt(UInt<1>("h0")), yr[4]) @[VCORDIC.scala 541:33]
    node _yterm_T_25 = tail(_yterm_T_24, 1) @[VCORDIC.scala 541:33]
    node _yterm_T_26 = asSInt(_yterm_T_25) @[VCORDIC.scala 541:33]
    node yterm_8 = mux(cond_8, _yterm_T_26, yr[4]) @[VCORDIC.scala 541:26]
    node _zterm_T_16 = sub(UInt<1>("h0"), atantable16[8]) @[VCORDIC.scala 542:33]
    node _zterm_T_17 = tail(_zterm_T_16, 1) @[VCORDIC.scala 542:33]
    node zterm_8 = mux(cond_8, _zterm_T_17, atantable16[8]) @[VCORDIC.scala 542:26]
    node _x_9_T = dshr(yterm_8, UInt<4>("h8")) @[VCORDIC.scala 544:41]
    node _x_9_T_1 = add(xr[4], _x_9_T) @[VCORDIC.scala 544:32]
    node _x_9_T_2 = tail(_x_9_T_1, 1) @[VCORDIC.scala 544:32]
    node _x_9_T_3 = asSInt(_x_9_T_2) @[VCORDIC.scala 544:32]
    x[9] <= _x_9_T_3 @[VCORDIC.scala 544:20]
    node _y_9_T = dshr(xterm_8, UInt<4>("h8")) @[VCORDIC.scala 545:41]
    node _y_9_T_1 = sub(yr[4], _y_9_T) @[VCORDIC.scala 545:32]
    node _y_9_T_2 = tail(_y_9_T_1, 1) @[VCORDIC.scala 545:32]
    node _y_9_T_3 = asSInt(_y_9_T_2) @[VCORDIC.scala 545:32]
    y[9] <= _y_9_T_3 @[VCORDIC.scala 545:20]
    node _z_9_T = asSInt(zterm_8) @[VCORDIC.scala 546:40]
    node _z_9_T_1 = add(zr[4], _z_9_T) @[VCORDIC.scala 546:32]
    node _z_9_T_2 = tail(_z_9_T_1, 1) @[VCORDIC.scala 546:32]
    node _z_9_T_3 = asSInt(_z_9_T_2) @[VCORDIC.scala 546:32]
    z[9] <= _z_9_T_3 @[VCORDIC.scala 546:20]
    node cond_9 = lt(y[9], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 549:31]
    node _xterm_T_27 = sub(asSInt(UInt<1>("h0")), x[9]) @[VCORDIC.scala 550:33]
    node _xterm_T_28 = tail(_xterm_T_27, 1) @[VCORDIC.scala 550:33]
    node _xterm_T_29 = asSInt(_xterm_T_28) @[VCORDIC.scala 550:33]
    node xterm_9 = mux(cond_9, _xterm_T_29, x[9]) @[VCORDIC.scala 550:26]
    node _yterm_T_27 = sub(asSInt(UInt<1>("h0")), y[9]) @[VCORDIC.scala 551:33]
    node _yterm_T_28 = tail(_yterm_T_27, 1) @[VCORDIC.scala 551:33]
    node _yterm_T_29 = asSInt(_yterm_T_28) @[VCORDIC.scala 551:33]
    node yterm_9 = mux(cond_9, _yterm_T_29, y[9]) @[VCORDIC.scala 551:26]
    node _zterm_T_18 = sub(UInt<1>("h0"), atantable16[9]) @[VCORDIC.scala 552:33]
    node _zterm_T_19 = tail(_zterm_T_18, 1) @[VCORDIC.scala 552:33]
    node zterm_9 = mux(cond_9, _zterm_T_19, atantable16[9]) @[VCORDIC.scala 552:26]
    node _x_10_T = dshr(yterm_9, UInt<4>("h9")) @[VCORDIC.scala 554:41]
    node _x_10_T_1 = add(x[9], _x_10_T) @[VCORDIC.scala 554:32]
    node _x_10_T_2 = tail(_x_10_T_1, 1) @[VCORDIC.scala 554:32]
    node _x_10_T_3 = asSInt(_x_10_T_2) @[VCORDIC.scala 554:32]
    x[10] <= _x_10_T_3 @[VCORDIC.scala 554:20]
    node _y_10_T = dshr(xterm_9, UInt<4>("h9")) @[VCORDIC.scala 555:41]
    node _y_10_T_1 = sub(y[9], _y_10_T) @[VCORDIC.scala 555:32]
    node _y_10_T_2 = tail(_y_10_T_1, 1) @[VCORDIC.scala 555:32]
    node _y_10_T_3 = asSInt(_y_10_T_2) @[VCORDIC.scala 555:32]
    y[10] <= _y_10_T_3 @[VCORDIC.scala 555:20]
    node _z_10_T = asSInt(zterm_9) @[VCORDIC.scala 556:40]
    node _z_10_T_1 = add(z[9], _z_10_T) @[VCORDIC.scala 556:32]
    node _z_10_T_2 = tail(_z_10_T_1, 1) @[VCORDIC.scala 556:32]
    node _z_10_T_3 = asSInt(_z_10_T_2) @[VCORDIC.scala 556:32]
    z[10] <= _z_10_T_3 @[VCORDIC.scala 556:20]
    xr[5] <= x[10] @[VCORDIC.scala 560:20]
    yr[5] <= y[10] @[VCORDIC.scala 561:20]
    zr[5] <= z[10] @[VCORDIC.scala 562:20]
    node cond_10 = lt(yr[5], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 538:31]
    node _xterm_T_30 = sub(asSInt(UInt<1>("h0")), xr[5]) @[VCORDIC.scala 540:33]
    node _xterm_T_31 = tail(_xterm_T_30, 1) @[VCORDIC.scala 540:33]
    node _xterm_T_32 = asSInt(_xterm_T_31) @[VCORDIC.scala 540:33]
    node xterm_10 = mux(cond_10, _xterm_T_32, xr[5]) @[VCORDIC.scala 540:26]
    node _yterm_T_30 = sub(asSInt(UInt<1>("h0")), yr[5]) @[VCORDIC.scala 541:33]
    node _yterm_T_31 = tail(_yterm_T_30, 1) @[VCORDIC.scala 541:33]
    node _yterm_T_32 = asSInt(_yterm_T_31) @[VCORDIC.scala 541:33]
    node yterm_10 = mux(cond_10, _yterm_T_32, yr[5]) @[VCORDIC.scala 541:26]
    node _zterm_T_20 = sub(UInt<1>("h0"), atantable16[10]) @[VCORDIC.scala 542:33]
    node _zterm_T_21 = tail(_zterm_T_20, 1) @[VCORDIC.scala 542:33]
    node zterm_10 = mux(cond_10, _zterm_T_21, atantable16[10]) @[VCORDIC.scala 542:26]
    node _x_11_T = dshr(yterm_10, UInt<4>("ha")) @[VCORDIC.scala 544:41]
    node _x_11_T_1 = add(xr[5], _x_11_T) @[VCORDIC.scala 544:32]
    node _x_11_T_2 = tail(_x_11_T_1, 1) @[VCORDIC.scala 544:32]
    node _x_11_T_3 = asSInt(_x_11_T_2) @[VCORDIC.scala 544:32]
    x[11] <= _x_11_T_3 @[VCORDIC.scala 544:20]
    node _y_11_T = dshr(xterm_10, UInt<4>("ha")) @[VCORDIC.scala 545:41]
    node _y_11_T_1 = sub(yr[5], _y_11_T) @[VCORDIC.scala 545:32]
    node _y_11_T_2 = tail(_y_11_T_1, 1) @[VCORDIC.scala 545:32]
    node _y_11_T_3 = asSInt(_y_11_T_2) @[VCORDIC.scala 545:32]
    y[11] <= _y_11_T_3 @[VCORDIC.scala 545:20]
    node _z_11_T = asSInt(zterm_10) @[VCORDIC.scala 546:40]
    node _z_11_T_1 = add(zr[5], _z_11_T) @[VCORDIC.scala 546:32]
    node _z_11_T_2 = tail(_z_11_T_1, 1) @[VCORDIC.scala 546:32]
    node _z_11_T_3 = asSInt(_z_11_T_2) @[VCORDIC.scala 546:32]
    z[11] <= _z_11_T_3 @[VCORDIC.scala 546:20]
    node cond_11 = lt(y[11], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 549:31]
    node _xterm_T_33 = sub(asSInt(UInt<1>("h0")), x[11]) @[VCORDIC.scala 550:33]
    node _xterm_T_34 = tail(_xterm_T_33, 1) @[VCORDIC.scala 550:33]
    node _xterm_T_35 = asSInt(_xterm_T_34) @[VCORDIC.scala 550:33]
    node xterm_11 = mux(cond_11, _xterm_T_35, x[11]) @[VCORDIC.scala 550:26]
    node _yterm_T_33 = sub(asSInt(UInt<1>("h0")), y[11]) @[VCORDIC.scala 551:33]
    node _yterm_T_34 = tail(_yterm_T_33, 1) @[VCORDIC.scala 551:33]
    node _yterm_T_35 = asSInt(_yterm_T_34) @[VCORDIC.scala 551:33]
    node yterm_11 = mux(cond_11, _yterm_T_35, y[11]) @[VCORDIC.scala 551:26]
    node _zterm_T_22 = sub(UInt<1>("h0"), atantable16[11]) @[VCORDIC.scala 552:33]
    node _zterm_T_23 = tail(_zterm_T_22, 1) @[VCORDIC.scala 552:33]
    node zterm_11 = mux(cond_11, _zterm_T_23, atantable16[11]) @[VCORDIC.scala 552:26]
    node _x_12_T = dshr(yterm_11, UInt<4>("hb")) @[VCORDIC.scala 554:41]
    node _x_12_T_1 = add(x[11], _x_12_T) @[VCORDIC.scala 554:32]
    node _x_12_T_2 = tail(_x_12_T_1, 1) @[VCORDIC.scala 554:32]
    node _x_12_T_3 = asSInt(_x_12_T_2) @[VCORDIC.scala 554:32]
    x[12] <= _x_12_T_3 @[VCORDIC.scala 554:20]
    node _y_12_T = dshr(xterm_11, UInt<4>("hb")) @[VCORDIC.scala 555:41]
    node _y_12_T_1 = sub(y[11], _y_12_T) @[VCORDIC.scala 555:32]
    node _y_12_T_2 = tail(_y_12_T_1, 1) @[VCORDIC.scala 555:32]
    node _y_12_T_3 = asSInt(_y_12_T_2) @[VCORDIC.scala 555:32]
    y[12] <= _y_12_T_3 @[VCORDIC.scala 555:20]
    node _z_12_T = asSInt(zterm_11) @[VCORDIC.scala 556:40]
    node _z_12_T_1 = add(z[11], _z_12_T) @[VCORDIC.scala 556:32]
    node _z_12_T_2 = tail(_z_12_T_1, 1) @[VCORDIC.scala 556:32]
    node _z_12_T_3 = asSInt(_z_12_T_2) @[VCORDIC.scala 556:32]
    z[12] <= _z_12_T_3 @[VCORDIC.scala 556:20]
    xr[6] <= x[12] @[VCORDIC.scala 560:20]
    yr[6] <= y[12] @[VCORDIC.scala 561:20]
    zr[6] <= z[12] @[VCORDIC.scala 562:20]
    node cond_12 = lt(yr[6], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 538:31]
    node _xterm_T_36 = sub(asSInt(UInt<1>("h0")), xr[6]) @[VCORDIC.scala 540:33]
    node _xterm_T_37 = tail(_xterm_T_36, 1) @[VCORDIC.scala 540:33]
    node _xterm_T_38 = asSInt(_xterm_T_37) @[VCORDIC.scala 540:33]
    node xterm_12 = mux(cond_12, _xterm_T_38, xr[6]) @[VCORDIC.scala 540:26]
    node _yterm_T_36 = sub(asSInt(UInt<1>("h0")), yr[6]) @[VCORDIC.scala 541:33]
    node _yterm_T_37 = tail(_yterm_T_36, 1) @[VCORDIC.scala 541:33]
    node _yterm_T_38 = asSInt(_yterm_T_37) @[VCORDIC.scala 541:33]
    node yterm_12 = mux(cond_12, _yterm_T_38, yr[6]) @[VCORDIC.scala 541:26]
    node _zterm_T_24 = sub(UInt<1>("h0"), atantable16[12]) @[VCORDIC.scala 542:33]
    node _zterm_T_25 = tail(_zterm_T_24, 1) @[VCORDIC.scala 542:33]
    node zterm_12 = mux(cond_12, _zterm_T_25, atantable16[12]) @[VCORDIC.scala 542:26]
    node _x_13_T = dshr(yterm_12, UInt<4>("hc")) @[VCORDIC.scala 544:41]
    node _x_13_T_1 = add(xr[6], _x_13_T) @[VCORDIC.scala 544:32]
    node _x_13_T_2 = tail(_x_13_T_1, 1) @[VCORDIC.scala 544:32]
    node _x_13_T_3 = asSInt(_x_13_T_2) @[VCORDIC.scala 544:32]
    x[13] <= _x_13_T_3 @[VCORDIC.scala 544:20]
    node _y_13_T = dshr(xterm_12, UInt<4>("hc")) @[VCORDIC.scala 545:41]
    node _y_13_T_1 = sub(yr[6], _y_13_T) @[VCORDIC.scala 545:32]
    node _y_13_T_2 = tail(_y_13_T_1, 1) @[VCORDIC.scala 545:32]
    node _y_13_T_3 = asSInt(_y_13_T_2) @[VCORDIC.scala 545:32]
    y[13] <= _y_13_T_3 @[VCORDIC.scala 545:20]
    node _z_13_T = asSInt(zterm_12) @[VCORDIC.scala 546:40]
    node _z_13_T_1 = add(zr[6], _z_13_T) @[VCORDIC.scala 546:32]
    node _z_13_T_2 = tail(_z_13_T_1, 1) @[VCORDIC.scala 546:32]
    node _z_13_T_3 = asSInt(_z_13_T_2) @[VCORDIC.scala 546:32]
    z[13] <= _z_13_T_3 @[VCORDIC.scala 546:20]
    node cond_13 = lt(y[13], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 549:31]
    node _xterm_T_39 = sub(asSInt(UInt<1>("h0")), x[13]) @[VCORDIC.scala 550:33]
    node _xterm_T_40 = tail(_xterm_T_39, 1) @[VCORDIC.scala 550:33]
    node _xterm_T_41 = asSInt(_xterm_T_40) @[VCORDIC.scala 550:33]
    node xterm_13 = mux(cond_13, _xterm_T_41, x[13]) @[VCORDIC.scala 550:26]
    node _yterm_T_39 = sub(asSInt(UInt<1>("h0")), y[13]) @[VCORDIC.scala 551:33]
    node _yterm_T_40 = tail(_yterm_T_39, 1) @[VCORDIC.scala 551:33]
    node _yterm_T_41 = asSInt(_yterm_T_40) @[VCORDIC.scala 551:33]
    node yterm_13 = mux(cond_13, _yterm_T_41, y[13]) @[VCORDIC.scala 551:26]
    node _zterm_T_26 = sub(UInt<1>("h0"), atantable16[13]) @[VCORDIC.scala 552:33]
    node _zterm_T_27 = tail(_zterm_T_26, 1) @[VCORDIC.scala 552:33]
    node zterm_13 = mux(cond_13, _zterm_T_27, atantable16[13]) @[VCORDIC.scala 552:26]
    node _x_14_T = dshr(yterm_13, UInt<4>("hd")) @[VCORDIC.scala 554:41]
    node _x_14_T_1 = add(x[13], _x_14_T) @[VCORDIC.scala 554:32]
    node _x_14_T_2 = tail(_x_14_T_1, 1) @[VCORDIC.scala 554:32]
    node _x_14_T_3 = asSInt(_x_14_T_2) @[VCORDIC.scala 554:32]
    x[14] <= _x_14_T_3 @[VCORDIC.scala 554:20]
    node _y_14_T = dshr(xterm_13, UInt<4>("hd")) @[VCORDIC.scala 555:41]
    node _y_14_T_1 = sub(y[13], _y_14_T) @[VCORDIC.scala 555:32]
    node _y_14_T_2 = tail(_y_14_T_1, 1) @[VCORDIC.scala 555:32]
    node _y_14_T_3 = asSInt(_y_14_T_2) @[VCORDIC.scala 555:32]
    y[14] <= _y_14_T_3 @[VCORDIC.scala 555:20]
    node _z_14_T = asSInt(zterm_13) @[VCORDIC.scala 556:40]
    node _z_14_T_1 = add(z[13], _z_14_T) @[VCORDIC.scala 556:32]
    node _z_14_T_2 = tail(_z_14_T_1, 1) @[VCORDIC.scala 556:32]
    node _z_14_T_3 = asSInt(_z_14_T_2) @[VCORDIC.scala 556:32]
    z[14] <= _z_14_T_3 @[VCORDIC.scala 556:20]
    xr[7] <= x[14] @[VCORDIC.scala 560:20]
    yr[7] <= y[14] @[VCORDIC.scala 561:20]
    zr[7] <= z[14] @[VCORDIC.scala 562:20]
    node cond_14 = lt(yr[7], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 538:31]
    node _xterm_T_42 = sub(asSInt(UInt<1>("h0")), xr[7]) @[VCORDIC.scala 540:33]
    node _xterm_T_43 = tail(_xterm_T_42, 1) @[VCORDIC.scala 540:33]
    node _xterm_T_44 = asSInt(_xterm_T_43) @[VCORDIC.scala 540:33]
    node xterm_14 = mux(cond_14, _xterm_T_44, xr[7]) @[VCORDIC.scala 540:26]
    node _yterm_T_42 = sub(asSInt(UInt<1>("h0")), yr[7]) @[VCORDIC.scala 541:33]
    node _yterm_T_43 = tail(_yterm_T_42, 1) @[VCORDIC.scala 541:33]
    node _yterm_T_44 = asSInt(_yterm_T_43) @[VCORDIC.scala 541:33]
    node yterm_14 = mux(cond_14, _yterm_T_44, yr[7]) @[VCORDIC.scala 541:26]
    node _zterm_T_28 = sub(UInt<1>("h0"), atantable16[14]) @[VCORDIC.scala 542:33]
    node _zterm_T_29 = tail(_zterm_T_28, 1) @[VCORDIC.scala 542:33]
    node zterm_14 = mux(cond_14, _zterm_T_29, atantable16[14]) @[VCORDIC.scala 542:26]
    node _x_15_T = dshr(yterm_14, UInt<4>("he")) @[VCORDIC.scala 544:41]
    node _x_15_T_1 = add(xr[7], _x_15_T) @[VCORDIC.scala 544:32]
    node _x_15_T_2 = tail(_x_15_T_1, 1) @[VCORDIC.scala 544:32]
    node _x_15_T_3 = asSInt(_x_15_T_2) @[VCORDIC.scala 544:32]
    x[15] <= _x_15_T_3 @[VCORDIC.scala 544:20]
    node _y_15_T = dshr(xterm_14, UInt<4>("he")) @[VCORDIC.scala 545:41]
    node _y_15_T_1 = sub(yr[7], _y_15_T) @[VCORDIC.scala 545:32]
    node _y_15_T_2 = tail(_y_15_T_1, 1) @[VCORDIC.scala 545:32]
    node _y_15_T_3 = asSInt(_y_15_T_2) @[VCORDIC.scala 545:32]
    y[15] <= _y_15_T_3 @[VCORDIC.scala 545:20]
    node _z_15_T = asSInt(zterm_14) @[VCORDIC.scala 546:40]
    node _z_15_T_1 = add(zr[7], _z_15_T) @[VCORDIC.scala 546:32]
    node _z_15_T_2 = tail(_z_15_T_1, 1) @[VCORDIC.scala 546:32]
    node _z_15_T_3 = asSInt(_z_15_T_2) @[VCORDIC.scala 546:32]
    z[15] <= _z_15_T_3 @[VCORDIC.scala 546:20]
    node cond_15 = lt(y[15], asSInt(UInt<16>("h0"))) @[VCORDIC.scala 549:31]
    node _xterm_T_45 = sub(asSInt(UInt<1>("h0")), x[15]) @[VCORDIC.scala 550:33]
    node _xterm_T_46 = tail(_xterm_T_45, 1) @[VCORDIC.scala 550:33]
    node _xterm_T_47 = asSInt(_xterm_T_46) @[VCORDIC.scala 550:33]
    node xterm_15 = mux(cond_15, _xterm_T_47, x[15]) @[VCORDIC.scala 550:26]
    node _yterm_T_45 = sub(asSInt(UInt<1>("h0")), y[15]) @[VCORDIC.scala 551:33]
    node _yterm_T_46 = tail(_yterm_T_45, 1) @[VCORDIC.scala 551:33]
    node _yterm_T_47 = asSInt(_yterm_T_46) @[VCORDIC.scala 551:33]
    node yterm_15 = mux(cond_15, _yterm_T_47, y[15]) @[VCORDIC.scala 551:26]
    node _zterm_T_30 = sub(UInt<1>("h0"), atantable16[15]) @[VCORDIC.scala 552:33]
    node _zterm_T_31 = tail(_zterm_T_30, 1) @[VCORDIC.scala 552:33]
    node zterm_15 = mux(cond_15, _zterm_T_31, atantable16[15]) @[VCORDIC.scala 552:26]
    node _x_16_T = dshr(yterm_15, UInt<4>("hf")) @[VCORDIC.scala 554:41]
    node _x_16_T_1 = add(x[15], _x_16_T) @[VCORDIC.scala 554:32]
    node _x_16_T_2 = tail(_x_16_T_1, 1) @[VCORDIC.scala 554:32]
    node _x_16_T_3 = asSInt(_x_16_T_2) @[VCORDIC.scala 554:32]
    x[16] <= _x_16_T_3 @[VCORDIC.scala 554:20]
    node _y_16_T = dshr(xterm_15, UInt<4>("hf")) @[VCORDIC.scala 555:41]
    node _y_16_T_1 = sub(y[15], _y_16_T) @[VCORDIC.scala 555:32]
    node _y_16_T_2 = tail(_y_16_T_1, 1) @[VCORDIC.scala 555:32]
    node _y_16_T_3 = asSInt(_y_16_T_2) @[VCORDIC.scala 555:32]
    y[16] <= _y_16_T_3 @[VCORDIC.scala 555:20]
    node _z_16_T = asSInt(zterm_15) @[VCORDIC.scala 556:40]
    node _z_16_T_1 = add(z[15], _z_16_T) @[VCORDIC.scala 556:32]
    node _z_16_T_2 = tail(_z_16_T_1, 1) @[VCORDIC.scala 556:32]
    node _z_16_T_3 = asSInt(_z_16_T_2) @[VCORDIC.scala 556:32]
    z[16] <= _z_16_T_3 @[VCORDIC.scala 556:20]
    xr[8] <= x[16] @[VCORDIC.scala 560:20]
    yr[8] <= y[16] @[VCORDIC.scala 561:20]
    zr[8] <= z[16] @[VCORDIC.scala 562:20]
    inst tofloatxout of FixedToFloat16 @[VCORDIC.scala 567:29]
    tofloatxout.clock <= clock
    tofloatxout.reset <= reset
    inst tofloatyout of FixedToFloat16_1 @[VCORDIC.scala 568:29]
    tofloatyout.clock <= clock
    tofloatyout.reset <= reset
    inst tofloatzout of FixedToFloat16_2 @[VCORDIC.scala 569:29]
    tofloatzout.clock <= clock
    tofloatzout.reset <= reset
    node _tofloatxout_io_in_T = asUInt(xr[8]) @[VCORDIC.scala 572:35]
    tofloatxout.io.in <= _tofloatxout_io_in_T @[VCORDIC.scala 572:23]
    node _tofloatyout_io_in_T = asUInt(yr[8]) @[VCORDIC.scala 573:35]
    tofloatyout.io.in <= _tofloatyout_io_in_T @[VCORDIC.scala 573:23]
    node _tofloatzout_io_in_T = asUInt(zr[8]) @[VCORDIC.scala 574:35]
    tofloatzout.io.in <= _tofloatzout_io_in_T @[VCORDIC.scala 574:23]
    io.out_x <= tofloatxout.io.out @[VCORDIC.scala 576:14]
    io.out_y <= tofloatyout.io.out @[VCORDIC.scala 577:14]
    io.out_z <= tofloatzout.io.out @[VCORDIC.scala 578:14]

  module Atan :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip in : UInt<16>, out : UInt<16>, flip ready : UInt<1>, valid : UInt<1>}

    node inputsign = bits(io.in, 15, 15) @[Atan.scala 34:26]
    node _inputmag_T = bits(io.in, 14, 0) @[Atan.scala 35:32]
    node inputmag = cat(UInt<1>("h0"), _inputmag_T) @[Atan.scala 35:24]
    inst vcordic of VCORDIC @[Atan.scala 36:25]
    vcordic.clock <= clock
    vcordic.reset <= reset
    vcordic.io.in_x0 <= UInt<14>("h3c00") @[Atan.scala 37:22]
    node _vcordic_io_in_y0_T = asSInt(inputmag) @[Atan.scala 44:38]
    node _vcordic_io_in_y0_T_1 = gt(_vcordic_io_in_y0_T, asSInt(UInt<16>("h70e2"))) @[Atan.scala 44:45]
    node _vcordic_io_in_y0_T_2 = cat(inputsign, UInt<15>("h70e2")) @[Atan.scala 44:73]
    node _vcordic_io_in_y0_T_3 = asSInt(inputmag) @[Atan.scala 45:20]
    node _vcordic_io_in_y0_T_4 = leq(_vcordic_io_in_y0_T_3, asSInt(UInt<16>("ha8"))) @[Atan.scala 45:27]
    node _vcordic_io_in_y0_T_5 = cat(inputsign, UInt<15>("ha8")) @[Atan.scala 45:56]
    node _vcordic_io_in_y0_T_6 = mux(_vcordic_io_in_y0_T_4, _vcordic_io_in_y0_T_5, io.in) @[Atan.scala 45:10]
    node _vcordic_io_in_y0_T_7 = mux(_vcordic_io_in_y0_T_1, _vcordic_io_in_y0_T_2, _vcordic_io_in_y0_T_6) @[Atan.scala 44:28]
    vcordic.io.in_y0 <= _vcordic_io_in_y0_T_7 @[Atan.scala 44:22]
    vcordic.io.in_z0 <= UInt<1>("h0") @[Atan.scala 47:22]
    io.out <= vcordic.io.out_z @[Atan.scala 49:12]
    wire _shift_reg_WIRE : UInt<16>[9] @[Atan.scala 212:48]
    _shift_reg_WIRE[0] <= UInt<16>("h0") @[Atan.scala 212:48]
    _shift_reg_WIRE[1] <= UInt<16>("h0") @[Atan.scala 212:48]
    _shift_reg_WIRE[2] <= UInt<16>("h0") @[Atan.scala 212:48]
    _shift_reg_WIRE[3] <= UInt<16>("h0") @[Atan.scala 212:48]
    _shift_reg_WIRE[4] <= UInt<16>("h0") @[Atan.scala 212:48]
    _shift_reg_WIRE[5] <= UInt<16>("h0") @[Atan.scala 212:48]
    _shift_reg_WIRE[6] <= UInt<16>("h0") @[Atan.scala 212:48]
    _shift_reg_WIRE[7] <= UInt<16>("h0") @[Atan.scala 212:48]
    _shift_reg_WIRE[8] <= UInt<16>("h0") @[Atan.scala 212:48]
    reg shift_reg : UInt<16>[9], clock with :
      reset => (reset, _shift_reg_WIRE) @[Atan.scala 212:26]
    shift_reg[0] <= io.ready @[Atan.scala 213:16]
    shift_reg[1] <= shift_reg[0] @[Atan.scala 215:18]
    shift_reg[2] <= shift_reg[1] @[Atan.scala 215:18]
    shift_reg[3] <= shift_reg[2] @[Atan.scala 215:18]
    shift_reg[4] <= shift_reg[3] @[Atan.scala 215:18]
    shift_reg[5] <= shift_reg[4] @[Atan.scala 215:18]
    shift_reg[6] <= shift_reg[5] @[Atan.scala 215:18]
    shift_reg[7] <= shift_reg[6] @[Atan.scala 215:18]
    shift_reg[8] <= shift_reg[7] @[Atan.scala 215:18]
    io.valid <= shift_reg[8] @[Atan.scala 217:12]

